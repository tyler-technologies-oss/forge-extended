// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import {
  Component,
  ElementRef,
  ChangeDetectionStrategy,
  ChangeDetectorRef,
  NgZone,
  Input,
  inject
} from '@angular/core';
import {
  ThemeToggleComponent as ThemeToggleComponentCustomElement,
  defineThemeToggleComponent
} from '@tylertech/forge-extended';

/**  */
@Component({
  selector: 'forge-theme-toggle',
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: '<ng-content></ng-content>',
  standalone: false
})
export class ThemeToggleComponent {
  protected elementRef = inject<ElementRef<ThemeToggleComponentCustomElement>>(ElementRef);
  protected zone = inject(NgZone);

  /** The forge-theme-toggle element. */
  public readonly nativeElement = this.elementRef.nativeElement;

  /** Sets the current theme. */
  public setTheme(
    ...args: Parameters<ThemeToggleComponentCustomElement['setTheme']>
  ): ReturnType<ThemeToggleComponentCustomElement['setTheme']> {
    return this.zone.runOutsideAngular(() => this.nativeElement.setTheme(...args));
  }

  constructor() {
    defineThemeToggleComponent();
    const changeDetectorRef = inject(ChangeDetectorRef);
    changeDetectorRef.detach();
  }
}
