// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { defineButtonToggleGroupComponent } from '@tylertech/forge';
import { ForgeButtonToggleProxyModule } from '../button-toggle/button-toggle-proxy.module';
import { ButtonToggleGroupComponent } from './button-toggle-group.component';
import * as i0 from "@angular/core";
export class ForgeButtonToggleGroupModule {
    constructor() {
        defineButtonToggleGroupComponent();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeButtonToggleGroupModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.7", ngImport: i0, type: ForgeButtonToggleGroupModule, declarations: [ButtonToggleGroupComponent], imports: [CommonModule, ForgeButtonToggleProxyModule], exports: [ButtonToggleGroupComponent, ForgeButtonToggleProxyModule] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeButtonToggleGroupModule, imports: [CommonModule, ForgeButtonToggleProxyModule, ForgeButtonToggleProxyModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeButtonToggleGroupModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ForgeButtonToggleProxyModule],
                    declarations: [ButtonToggleGroupComponent],
                    exports: [ButtonToggleGroupComponent, ForgeButtonToggleProxyModule]
                }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLXRvZ2dsZS1ncm91cC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9mb3JnZS1hbmd1bGFyL3NyYy9saWIvYnV0dG9uLXRvZ2dsZS1ncm91cC9idXR0b24tdG9nZ2xlLWdyb3VwLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3SEFBd0g7QUFDeEgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFcEUsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDM0YsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7O0FBTzdFLE1BQU0sT0FBTyw0QkFBNEI7SUFDeEM7UUFDQyxnQ0FBZ0MsRUFBRSxDQUFDO0lBQ3BDLENBQUM7OEdBSFcsNEJBQTRCOytHQUE1Qiw0QkFBNEIsaUJBSHpCLDBCQUEwQixhQUQvQixZQUFZLEVBQUUsNEJBQTRCLGFBRTFDLDBCQUEwQixFQUFFLDRCQUE0QjsrR0FFdEQsNEJBQTRCLFlBSjlCLFlBQVksRUFBRSw0QkFBNEIsRUFFZCw0QkFBNEI7OzJGQUV0RCw0QkFBNEI7a0JBTHhDLFFBQVE7bUJBQUM7b0JBQ1QsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLDRCQUE0QixDQUFDO29CQUNyRCxZQUFZLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQztvQkFDMUMsT0FBTyxFQUFFLENBQUMsMEJBQTBCLEVBQUUsNEJBQTRCLENBQUM7aUJBQ25FIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBjb2RlIHdhcyBnZW5lcmF0ZWQgYnkgdGhlIGFuZ3VsYXItY3VzdG9tLWVsZW1lbnRzLXNjaGVtYXRpYy4gIEFueSBjaGFuZ2VzIHdpbGwgYmUgb3ZlcndyaXR0ZW4gbmV4dCB0aW1lIGl0IHJ1bnMuXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJzsgXG5pbXBvcnQgeyBkZWZpbmVCdXR0b25Ub2dnbGVHcm91cENvbXBvbmVudCB9IGZyb20gJ0B0eWxlcnRlY2gvZm9yZ2UnO1xuXG5pbXBvcnQgeyBGb3JnZUJ1dHRvblRvZ2dsZVByb3h5TW9kdWxlIH0gZnJvbSAnLi4vYnV0dG9uLXRvZ2dsZS9idXR0b24tdG9nZ2xlLXByb3h5Lm1vZHVsZSc7XG5pbXBvcnQgeyBCdXR0b25Ub2dnbGVHcm91cENvbXBvbmVudCB9IGZyb20gJy4vYnV0dG9uLXRvZ2dsZS1ncm91cC5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuXHRpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBGb3JnZUJ1dHRvblRvZ2dsZVByb3h5TW9kdWxlXSxcblx0ZGVjbGFyYXRpb25zOiBbQnV0dG9uVG9nZ2xlR3JvdXBDb21wb25lbnRdLFxuXHRleHBvcnRzOiBbQnV0dG9uVG9nZ2xlR3JvdXBDb21wb25lbnQsIEZvcmdlQnV0dG9uVG9nZ2xlUHJveHlNb2R1bGVdXG59KVxuZXhwb3J0IGNsYXNzIEZvcmdlQnV0dG9uVG9nZ2xlR3JvdXBNb2R1bGUge1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHRkZWZpbmVCdXR0b25Ub2dnbGVHcm91cENvbXBvbmVudCgpO1xuXHR9XG59Il19