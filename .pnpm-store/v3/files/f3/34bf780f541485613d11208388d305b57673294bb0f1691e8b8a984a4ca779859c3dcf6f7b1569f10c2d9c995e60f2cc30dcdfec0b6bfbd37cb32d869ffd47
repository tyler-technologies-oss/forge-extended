import { ElementRef, ChangeDetectorRef, NgZone } from '@angular/core';
import { ProfileCardComponent as ProfileCardComponentCustomElement } from '@tylertech/forge';
import * as i0 from "@angular/core";
/**  */
export declare class ProfileCardComponent {
    protected elementRef: ElementRef<ProfileCardComponentCustomElement>;
    protected zone: NgZone;
    /** The forge-profile-card element. */
    readonly nativeElement: ProfileCardComponentCustomElement;
    set fullName(value: ProfileCardComponentCustomElement['fullName']);
    get fullName(): ProfileCardComponentCustomElement['fullName'];
    set email(value: ProfileCardComponentCustomElement['email']);
    get email(): ProfileCardComponentCustomElement['email'];
    set signOut(value: ProfileCardComponentCustomElement['signOut']);
    get signOut(): ProfileCardComponentCustomElement['signOut'];
    set profile(value: ProfileCardComponentCustomElement['profile']);
    get profile(): ProfileCardComponentCustomElement['profile'];
    set signOutText(value: ProfileCardComponentCustomElement['signOutText']);
    get signOutText(): ProfileCardComponentCustomElement['signOutText'];
    set profileText(value: ProfileCardComponentCustomElement['profileText']);
    get profileText(): ProfileCardComponentCustomElement['profileText'];
    set avatarText(value: ProfileCardComponentCustomElement['avatarText']);
    get avatarText(): ProfileCardComponentCustomElement['avatarText'];
    set avatarIcon(value: ProfileCardComponentCustomElement['avatarIcon']);
    get avatarIcon(): ProfileCardComponentCustomElement['avatarIcon'];
    set avatarImageUrl(value: ProfileCardComponentCustomElement['avatarImageUrl']);
    get avatarImageUrl(): ProfileCardComponentCustomElement['avatarImageUrl'];
    set avatarLetterCount(value: ProfileCardComponentCustomElement['avatarLetterCount']);
    get avatarLetterCount(): ProfileCardComponentCustomElement['avatarLetterCount'];
    focus(...args: Parameters<ProfileCardComponentCustomElement['focus']>): ReturnType<ProfileCardComponentCustomElement['focus']>;
    constructor(changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef<ProfileCardComponentCustomElement>, zone: NgZone);
    static ɵfac: i0.ɵɵFactoryDeclaration<ProfileCardComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ProfileCardComponent, "forge-profile-card", never, { "fullName": { "alias": "fullName"; "required": false; }; "email": { "alias": "email"; "required": false; }; "signOut": { "alias": "signOut"; "required": false; }; "profile": { "alias": "profile"; "required": false; }; "signOutText": { "alias": "signOutText"; "required": false; }; "profileText": { "alias": "profileText"; "required": false; }; "avatarText": { "alias": "avatarText"; "required": false; }; "avatarIcon": { "alias": "avatarIcon"; "required": false; }; "avatarImageUrl": { "alias": "avatarImageUrl"; "required": false; }; "avatarLetterCount": { "alias": "avatarLetterCount"; "required": false; }; }, {}, never, ["*"], false, never>;
    static ngAcceptInputType_signOut: unknown;
    static ngAcceptInputType_profile: unknown;
    static ngAcceptInputType_avatarLetterCount: unknown;
}
