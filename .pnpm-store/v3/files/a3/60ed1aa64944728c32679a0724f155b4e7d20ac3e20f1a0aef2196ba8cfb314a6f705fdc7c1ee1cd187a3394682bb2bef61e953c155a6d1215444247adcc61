/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { tylIconCheckBox, tylIconCheckBoxOutlineBlank } from '@tylertech/tyler-icons/standard';
import { ListDropdownCore } from './list-dropdown-core';
import { ListDropdownAdapter } from './list-dropdown-adapter';
import { IconRegistry } from '../icon';
export class ListDropdown {
    constructor(_targetElement, config) {
        this._targetElement = _targetElement;
        IconRegistry.define([tylIconCheckBox, tylIconCheckBoxOutlineBlank]);
        this._core = new ListDropdownCore(new ListDropdownAdapter(this._targetElement), config);
    }
    destroy() {
        this._core.destroy();
    }
    /** Opens the dropdown. */
    open() {
        this._core.open();
    }
    /** Closes the dropdown. */
    close() {
        return this._core.close();
    }
    /** Gets the currently highlighted option index in the dropdown. */
    getActiveOptionIndex() {
        return this._core.getActiveOptionIndex();
    }
    getActiveOption() {
        return this._core.getActiveOption();
    }
    /** Toggles the selected option by index. Only applies when in multiselect mode. */
    toggleOptionMultiple(index, isSelected) {
        return this._core.toggleOptionMultiple(index, isSelected);
    }
    /** Activates the first selected option. */
    activateSelectedOption() {
        this._core.activateSelectedOption();
    }
    /** Activates the first non-disabled option. */
    activateFirstOption() {
        return this._core.activateFirstOption();
    }
    /** Activates (highlights) an option by index. */
    activateOption(index) {
        return this._core.activateOption(index);
    }
    /** Activates the first activatable option. */
    activateInitialOption() {
        return this._core.activateInitialOption();
    }
    /** Clears the active option from the dropdown */
    clearActiveOption() {
        this._core.clearActiveOption();
    }
    /** Sets the selected values. Only applies when in multiselect mode. */
    setSelectedValues(values) {
        return this._core.setSelectedValues(values);
    }
    get dropdownElement() {
        return this._core.dropdownElement;
    }
    setOptions(options) {
        this._core.setOptions(options);
    }
    appendOptions(options) {
        this._core.appendOptions(options);
    }
    scrollSelectedOptionIntoView(animate) {
        this._core.scrollSelectedOptionIntoView();
    }
    setScrollBottomListener(listener, threshold) {
        this._core.setScrollBottomListener(listener, threshold);
    }
    removeScrollBottomListener() {
        this._core.removeScrollBottomListener();
    }
    setBusyVisibility(isVisible) {
        this._core.setBusyVisibility(isVisible);
    }
    handleKey(key) {
        this._core.handleKey(key);
    }
}
