import { ElementRef, ChangeDetectorRef, NgZone } from '@angular/core';
import { ViewSwitcherComponent as ViewSwitcherComponentCustomElement } from '@tylertech/forge';
import * as i0 from "@angular/core";
/**  */
export declare class ViewSwitcherComponent {
    protected elementRef: ElementRef<ViewSwitcherComponentCustomElement>;
    protected zone: NgZone;
    /** The forge-view-switcher element. */
    readonly nativeElement: ViewSwitcherComponentCustomElement;
    /** Gets/sets the currently visible view index. */
    set index(value: ViewSwitcherComponentCustomElement['index']);
    get index(): ViewSwitcherComponentCustomElement['index'];
    /** Gets/sets the animation type. */
    set animationType(value: ViewSwitcherComponentCustomElement['animationType']);
    get animationType(): ViewSwitcherComponentCustomElement['animationType'];
    /** Transitions to the next view. */
    next(...args: Parameters<ViewSwitcherComponentCustomElement['next']>): ReturnType<ViewSwitcherComponentCustomElement['next']>;
    /** Transitions to the previous view. */
    previous(...args: Parameters<ViewSwitcherComponentCustomElement['previous']>): ReturnType<ViewSwitcherComponentCustomElement['previous']>;
    /** Transitions to the first view. */
    goToStart(...args: Parameters<ViewSwitcherComponentCustomElement['goToStart']>): ReturnType<ViewSwitcherComponentCustomElement['goToStart']>;
    /** Transitions to the last view. */
    goToEnd(...args: Parameters<ViewSwitcherComponentCustomElement['goToEnd']>): ReturnType<ViewSwitcherComponentCustomElement['goToEnd']>;
    constructor(changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef<ViewSwitcherComponentCustomElement>, zone: NgZone);
    static ɵfac: i0.ɵɵFactoryDeclaration<ViewSwitcherComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ViewSwitcherComponent, "forge-view-switcher", never, { "index": { "alias": "index"; "required": false; }; "animationType": { "alias": "animationType"; "required": false; }; }, {}, never, ["*"], false, never>;
    static ngAcceptInputType_index: unknown;
}
