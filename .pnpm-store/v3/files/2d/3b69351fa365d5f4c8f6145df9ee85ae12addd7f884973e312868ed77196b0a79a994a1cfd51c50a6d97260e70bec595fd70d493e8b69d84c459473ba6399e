/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { getShadowElement, playKeyframeAnimation } from '@tylertech/forge-core';
import { BaseAdapter } from '../core/base/base-adapter';
import { OVERLAY_CONSTANTS } from '../overlay';
import { TOAST_CONSTANTS } from './toast-constants';
export class ToastAdapter extends BaseAdapter {
    constructor(component) {
        super(component);
        this._overlayElement = getShadowElement(component, OVERLAY_CONSTANTS.elementName);
        this._surfaceElement = getShadowElement(component, TOAST_CONSTANTS.selectors.SURFACE);
        this._actionButtonElement = getShadowElement(component, TOAST_CONSTANTS.selectors.ACTION_BUTTON);
        this._closeButtonElement = getShadowElement(component, TOAST_CONSTANTS.selectors.CLOSE_BUTTON);
    }
    show() {
        this._overlayElement.open = true;
    }
    async hide() {
        await playKeyframeAnimation(this._surfaceElement, TOAST_CONSTANTS.classes.EXITING);
        this._overlayElement.open = false;
    }
    addCloseListener(listener) {
        this._closeButtonElement.addEventListener('click', listener);
    }
    removeCloseListener(listener) {
        this._closeButtonElement.removeEventListener('click', listener);
    }
    addActionListener(listener) {
        this._actionButtonElement.addEventListener('click', listener);
    }
    removeActionListener(listener) {
        this._actionButtonElement.removeEventListener('click', listener);
    }
    setDismissLabel(label) {
        this._closeButtonElement.setAttribute('aria-label', label);
    }
    setActionText(text) {
        this._actionButtonElement.textContent = text;
        if (!!text) {
            this._actionButtonElement.removeAttribute('hidden');
        }
        else {
            this._actionButtonElement.setAttribute('hidden', '');
        }
    }
}
