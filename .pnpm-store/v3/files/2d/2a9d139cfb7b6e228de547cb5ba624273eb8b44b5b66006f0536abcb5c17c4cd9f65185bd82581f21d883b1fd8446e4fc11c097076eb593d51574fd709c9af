import { Observer } from './types';
export declare class Subject<T> {
    protected source: T;
    protected subscribers: Subscription<T>[];
    get value(): T;
    constructor(value: T);
    subscribe(observer?: Observer<T>): Subscription<T>;
    protected next(value: T): void;
    protected complete(): void;
}
export declare class Subscription<T> {
    readonly observer?: Observer<T>;
    private _parent;
    private _closed;
    get closed(): boolean;
    constructor(parent: Subscription<T>[], observer?: Observer<T>);
    unsubscribe(): void;
}
