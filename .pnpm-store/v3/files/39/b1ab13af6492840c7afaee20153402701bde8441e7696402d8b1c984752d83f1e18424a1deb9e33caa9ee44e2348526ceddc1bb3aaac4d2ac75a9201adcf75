/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { AbstractConstructor, MixinBase } from '../../../constants';
import { IBaseComponent } from '../../base/base-component';
/**
 * An element that is integrated with native form validation.
 */
export interface IWithFormValidity extends IBaseComponent {
    required: boolean;
    readonly validity: ValidityState;
    readonly validationMessage: string;
    readonly willValidate: boolean;
    checkValidity(): boolean;
    reportValidity(): boolean;
    setCustomValidity(error: string): void;
}
export declare abstract class WithFormValidityContract {
    abstract required: boolean;
    get validity(): ValidityState;
    get validationMessage(): string;
    get willValidate(): boolean;
    checkValidity(): boolean;
    reportValidity(): boolean;
    setCustomValidity(error: string): void;
}
/**
 * Provides form validity functionality for an element.
 *
 * @param base The base component to mix into.
 * @returns The mixed-in base component.
 */
export declare function WithFormValidity<TBase extends MixinBase>(base: TBase): AbstractConstructor<WithFormValidityContract> & TBase;
