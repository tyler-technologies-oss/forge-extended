/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
export declare function timeStringToMillis(time: string | null, use24HourTime: boolean, allowSeconds: boolean): number | null;
export declare function millisToTimeString(value: number | null | undefined, use24HourTime: boolean, allowSeconds: boolean): string | null;
export declare function millisToHours(millis: number): number;
export declare function millisToMinutesClamped(millis: number): number;
export declare function millisToMinutes(millis: number): number;
export declare function millisToSecondsClamped(millis: number): number;
export declare function millisToSeconds(millis: number): number;
export declare function hoursToMillis(hours: number): number;
export declare function minutesToMillis(minutes: number): number;
export declare function secondsToMillis(seconds: number): number;
export declare function stripSecondsFromMillis(millis: number): number;
export declare function getCurrentTimeOfDayMillis(allowSeconds: boolean): number;
/**
 * Combines a `Date` object with a 24-hour time string from the time-picker component.
 * @param date The `Date` object to adjust.
 * @param time The 24-hour time string.
 * @param useSeconds If your 24-hour time string contains seconds, set this to `true`.
 * @returns The same `Date` object that was provided, with the newly adjusted time.
 */
export declare function mergeDateWithTime(date: Date, time: string, useSeconds?: boolean): Date;
