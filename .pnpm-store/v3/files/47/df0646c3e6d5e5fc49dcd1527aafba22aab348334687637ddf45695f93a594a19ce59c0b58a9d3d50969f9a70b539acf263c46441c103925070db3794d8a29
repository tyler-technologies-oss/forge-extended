// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { Component, ChangeDetectionStrategy, Input } from '@angular/core';
import { defineAppBarHelpButtonComponent } from '@tylertech/forge';
import * as i0 from "@angular/core";
/**  */
export class AppBarHelpButtonComponent {
    /** The menu options to display when the button is clicked */
    set options(value) {
        this.zone.runOutsideAngular(() => {
            this.nativeElement.options = value;
        });
    }
    get options() {
        return this.nativeElement.options;
    }
    /** The name of an alternative icon to display. */
    set icon(value) {
        this.zone.runOutsideAngular(() => {
            this.nativeElement.icon = value;
        });
    }
    get icon() {
        return this.nativeElement.icon;
    }
    constructor(changeDetectorRef, elementRef, zone) {
        this.elementRef = elementRef;
        this.zone = zone;
        /** The forge-app-bar-help-button element. */
        this.nativeElement = this.elementRef.nativeElement;
        defineAppBarHelpButtonComponent();
        changeDetectorRef.detach();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: AppBarHelpButtonComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.7", type: AppBarHelpButtonComponent, selector: "forge-app-bar-help-button", inputs: { options: "options", icon: "icon" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: AppBarHelpButtonComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'forge-app-bar-help-button',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { options: [{
                type: Input
            }], icon: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLWJhci1oZWxwLWJ1dHRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9mb3JnZS1hbmd1bGFyL3NyYy9saWIvYXBwLWJhci1oZWxwLWJ1dHRvbi9hcHAtYmFyLWhlbHAtYnV0dG9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3SEFBd0g7QUFDeEgsT0FBTyxFQUFFLFNBQVMsRUFBYyx1QkFBdUIsRUFBNkIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pILE9BQU8sRUFBdUUsK0JBQStCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7QUFFeEksT0FBTztBQU1QLE1BQU0sT0FBTyx5QkFBeUI7SUFLckMsNkRBQTZEO0lBQzdELElBQ1csT0FBTyxDQUFDLEtBQXdEO1FBQzFFLElBQUksQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFO1lBQ2hDLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUNwQyxDQUFDLENBQUMsQ0FBQztJQUNKLENBQUM7SUFDRCxJQUFXLE9BQU87UUFDakIsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQztJQUNuQyxDQUFDO0lBRUQsa0RBQWtEO0lBQ2xELElBQ1csSUFBSSxDQUFDLEtBQXFEO1FBQ3BFLElBQUksQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFO1lBQ2hDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztRQUNqQyxDQUFDLENBQUMsQ0FBQztJQUNKLENBQUM7SUFDRCxJQUFXLElBQUk7UUFDZCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDO0lBQ2hDLENBQUM7SUFFRCxZQUNDLGlCQUFvQyxFQUMxQixVQUE4RCxFQUM5RCxJQUFZO1FBRFosZUFBVSxHQUFWLFVBQVUsQ0FBb0Q7UUFDOUQsU0FBSSxHQUFKLElBQUksQ0FBUTtRQTVCdkIsNkNBQTZDO1FBQzdCLGtCQUFhLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUM7UUE2QjdELCtCQUErQixFQUFFLENBQUM7UUFDbEMsaUJBQWlCLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDNUIsQ0FBQzs4R0FsQ1cseUJBQXlCO2tHQUF6Qix5QkFBeUIsK0dBRjFCLDJCQUEyQjs7MkZBRTFCLHlCQUF5QjtrQkFMckMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsUUFBUSxFQUFFLDJCQUEyQjtpQkFDdEM7b0lBUVcsT0FBTztzQkFEakIsS0FBSztnQkFZSyxJQUFJO3NCQURkLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGNvZGUgd2FzIGdlbmVyYXRlZCBieSB0aGUgYW5ndWxhci1jdXN0b20tZWxlbWVudHMtc2NoZW1hdGljLiAgQW55IGNoYW5nZXMgd2lsbCBiZSBvdmVyd3JpdHRlbiBuZXh0IHRpbWUgaXQgcnVucy5cbmltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBOZ1pvbmUsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBcHBCYXJIZWxwQnV0dG9uQ29tcG9uZW50IGFzIEFwcEJhckhlbHBCdXR0b25Db21wb25lbnRDdXN0b21FbGVtZW50LCBkZWZpbmVBcHBCYXJIZWxwQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnQHR5bGVydGVjaC9mb3JnZSc7XG5cbi8qKiAgKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2ZvcmdlLWFwcC1iYXItaGVscC1idXR0b24nLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgdGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+J1xufSlcbmV4cG9ydCBjbGFzcyBBcHBCYXJIZWxwQnV0dG9uQ29tcG9uZW50IHtcblxuXHQvKiogVGhlIGZvcmdlLWFwcC1iYXItaGVscC1idXR0b24gZWxlbWVudC4gKi9cblx0cHVibGljIHJlYWRvbmx5IG5hdGl2ZUVsZW1lbnQgPSB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcblxuXHQvKiogVGhlIG1lbnUgb3B0aW9ucyB0byBkaXNwbGF5IHdoZW4gdGhlIGJ1dHRvbiBpcyBjbGlja2VkICovXG5cdEBJbnB1dCgpXG5cdHB1YmxpYyBzZXQgb3B0aW9ucyh2YWx1ZTogQXBwQmFySGVscEJ1dHRvbkNvbXBvbmVudEN1c3RvbUVsZW1lbnRbJ29wdGlvbnMnXSkge1xuXHRcdHRoaXMuem9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG5cdFx0XHR0aGlzLm5hdGl2ZUVsZW1lbnQub3B0aW9ucyA9IHZhbHVlO1xuXHRcdH0pO1xuXHR9XG5cdHB1YmxpYyBnZXQgb3B0aW9ucygpOiBBcHBCYXJIZWxwQnV0dG9uQ29tcG9uZW50Q3VzdG9tRWxlbWVudFsnb3B0aW9ucyddIHtcblx0XHRyZXR1cm4gdGhpcy5uYXRpdmVFbGVtZW50Lm9wdGlvbnM7XG5cdH1cblxuXHQvKiogVGhlIG5hbWUgb2YgYW4gYWx0ZXJuYXRpdmUgaWNvbiB0byBkaXNwbGF5LiAqL1xuXHRASW5wdXQoKVxuXHRwdWJsaWMgc2V0IGljb24odmFsdWU6IEFwcEJhckhlbHBCdXR0b25Db21wb25lbnRDdXN0b21FbGVtZW50WydpY29uJ10pIHtcblx0XHR0aGlzLnpvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuXHRcdFx0dGhpcy5uYXRpdmVFbGVtZW50Lmljb24gPSB2YWx1ZTtcblx0XHR9KTtcblx0fVxuXHRwdWJsaWMgZ2V0IGljb24oKTogQXBwQmFySGVscEJ1dHRvbkNvbXBvbmVudEN1c3RvbUVsZW1lbnRbJ2ljb24nXSB7XG5cdFx0cmV0dXJuIHRoaXMubmF0aXZlRWxlbWVudC5pY29uO1xuXHR9XG5cblx0Y29uc3RydWN0b3IoXG5cdFx0Y2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmLFxuXHRcdHByb3RlY3RlZCBlbGVtZW50UmVmOiBFbGVtZW50UmVmPEFwcEJhckhlbHBCdXR0b25Db21wb25lbnRDdXN0b21FbGVtZW50Pixcblx0XHRwcm90ZWN0ZWQgem9uZTogTmdab25lXG5cdCkge1xuXHRcdGRlZmluZUFwcEJhckhlbHBCdXR0b25Db21wb25lbnQoKTtcblx0XHRjaGFuZ2VEZXRlY3RvclJlZi5kZXRhY2goKTtcblx0fVxufVxuIl19