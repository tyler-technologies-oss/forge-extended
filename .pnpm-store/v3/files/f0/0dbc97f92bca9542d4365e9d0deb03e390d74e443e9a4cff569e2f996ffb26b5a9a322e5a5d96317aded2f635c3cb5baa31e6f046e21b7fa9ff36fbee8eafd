// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { defineSplitViewComponent } from '@tylertech/forge';
import { ForgeSplitViewPanelModule } from '../split-view-panel/split-view-panel.module';
import { SplitViewComponent } from './split-view.component';
import * as i0 from "@angular/core";
export class ForgeSplitViewModule {
    constructor() {
        defineSplitViewComponent();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeSplitViewModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.7", ngImport: i0, type: ForgeSplitViewModule, declarations: [SplitViewComponent], imports: [CommonModule, ForgeSplitViewPanelModule], exports: [SplitViewComponent, ForgeSplitViewPanelModule] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeSplitViewModule, imports: [CommonModule, ForgeSplitViewPanelModule, ForgeSplitViewPanelModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeSplitViewModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ForgeSplitViewPanelModule],
                    declarations: [SplitViewComponent],
                    exports: [SplitViewComponent, ForgeSplitViewPanelModule]
                }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsaXQtdmlldy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9mb3JnZS1hbmd1bGFyL3NyYy9saWIvc3BsaXQtdmlldy9zcGxpdC12aWV3Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3SEFBd0g7QUFDeEgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFNUQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDeEYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7O0FBTzVELE1BQU0sT0FBTyxvQkFBb0I7SUFDaEM7UUFDQyx3QkFBd0IsRUFBRSxDQUFDO0lBQzVCLENBQUM7OEdBSFcsb0JBQW9COytHQUFwQixvQkFBb0IsaUJBSGpCLGtCQUFrQixhQUR2QixZQUFZLEVBQUUseUJBQXlCLGFBRXZDLGtCQUFrQixFQUFFLHlCQUF5QjsrR0FFM0Msb0JBQW9CLFlBSnRCLFlBQVksRUFBRSx5QkFBeUIsRUFFbkIseUJBQXlCOzsyRkFFM0Msb0JBQW9CO2tCQUxoQyxRQUFRO21CQUFDO29CQUNULE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSx5QkFBeUIsQ0FBQztvQkFDbEQsWUFBWSxFQUFFLENBQUMsa0JBQWtCLENBQUM7b0JBQ2xDLE9BQU8sRUFBRSxDQUFDLGtCQUFrQixFQUFFLHlCQUF5QixDQUFDO2lCQUN4RCIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgY29kZSB3YXMgZ2VuZXJhdGVkIGJ5IHRoZSBhbmd1bGFyLWN1c3RvbS1lbGVtZW50cy1zY2hlbWF0aWMuICBBbnkgY2hhbmdlcyB3aWxsIGJlIG92ZXJ3cml0dGVuIG5leHQgdGltZSBpdCBydW5zLlxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7IFxuaW1wb3J0IHsgZGVmaW5lU3BsaXRWaWV3Q29tcG9uZW50IH0gZnJvbSAnQHR5bGVydGVjaC9mb3JnZSc7XG5cbmltcG9ydCB7IEZvcmdlU3BsaXRWaWV3UGFuZWxNb2R1bGUgfSBmcm9tICcuLi9zcGxpdC12aWV3LXBhbmVsL3NwbGl0LXZpZXctcGFuZWwubW9kdWxlJztcbmltcG9ydCB7IFNwbGl0Vmlld0NvbXBvbmVudCB9IGZyb20gJy4vc3BsaXQtdmlldy5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuXHRpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBGb3JnZVNwbGl0Vmlld1BhbmVsTW9kdWxlXSxcblx0ZGVjbGFyYXRpb25zOiBbU3BsaXRWaWV3Q29tcG9uZW50XSxcblx0ZXhwb3J0czogW1NwbGl0Vmlld0NvbXBvbmVudCwgRm9yZ2VTcGxpdFZpZXdQYW5lbE1vZHVsZV1cbn0pXG5leHBvcnQgY2xhc3MgRm9yZ2VTcGxpdFZpZXdNb2R1bGUge1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHRkZWZpbmVTcGxpdFZpZXdDb21wb25lbnQoKTtcblx0fVxufSJdfQ==