var e=require("@typescript-eslint/utils");const r=e.ESLintUtils.RuleCreator(()=>"https://github.com/tyler-technologies/eslint-rules"),t="invalid-relative-import-prefix";var i=r({name:t,meta:{type:"suggestion",docs:{description:"Avoids inconsistent import paths.",recommended:"recommended"},schema:[],messages:{invalidRelativeImportPrefix:'Relative import statements cannot start with "./../'},fixable:"code"},defaultOptions:[],create:function(e){return{ImportDeclaration(r){!function(r){const t=r.source.value.trim().substring(0,5);"string"==typeof t&&"./../"===t&&e.report({messageId:"invalidRelativeImportPrefix",node:r.source,fix:function(e){return e.replaceTextRange([r.source.range[0],r.source.range[0]+3],`${r.source.raw[0]}../`)}})}(r)}}}});const o="require-private-underscore";var n=r({name:o,meta:{type:"suggestion",docs:{description:"Requires properties or methods that start with an underscore to be marked with a private modifier.",recommended:"recommended"},schema:[],messages:{requirePrivateUnderscore:"Private {{type}} must start with an underscore: {{nodeInfo}}"},fixable:"code"},defaultOptions:[],create:function(r){const t=r.sourceCode;function i(i){const o=i.key.name;"private"!==i.accessibility&&"protected"!==i.accessibility&&i.key.name.startsWith("_")&&r.report({data:{type:i.type,nodeInfo:`_${o}`},messageId:"requirePrivateUnderscore",node:i,fix:function(r){const o=t.getTokens(i).find(r=>r.type===e.AST_TOKEN_TYPES.Keyword&&"public"===r.value);return o?r.replaceText(o,"private"):r.insertTextBefore(i,"private ")}})}return{PropertyDefinition(e){i(e)},MethodDefinition(e){i(e)}}}});const s="require-private-modifier";var a=r({name:s,meta:{type:"suggestion",docs:{description:"Requires properties or methods that start with an underscore to be marked with a private modifier.",recommended:"recommended"},schema:[],messages:{requirePrivateModifier:"{{type}} starting with an underscore must be marked as private: {{nodeInfo}}"},fixable:"code"},defaultOptions:[],create:function(e){function r(r){const t=r.key.name;("private"===r.accessibility||"protected"===r.accessibility)&&!t.startsWith("_")&&e.report({data:{type:r.type,nodeInfo:`_${t}`},messageId:"requirePrivateModifier",node:r,fix:function(e){return e.insertTextBefore(r.key,"_")}})}return{PropertyDefinition(e){r(e)},MethodDefinition(e){r(e)}}}});module.exports={configs:{recommended:{extends:"./configs/base.json",rules:{"@tylertech-eslint/invalid-relative-import-prefix":"error","@tylertech-eslint/require-private-modifier":"error","@tylertech-eslint/require-private-underscore":"error","@typescript-eslint/adjacent-overload-signatures":"error","@typescript-eslint/array-type":"off","@typescript-eslint/ban-types":["error",{types:{Object:{message:"Avoid using the `Object` type. Did you mean `object`?"},Function:{message:"Avoid using the `Function` type. Prefer a specific function type, like `() => void`."},Boolean:{message:"Avoid using the `Boolean` type. Did you mean `boolean`?"},Number:{message:"Avoid using the `Number` type. Did you mean `number`?"},String:{message:"Avoid using the `String` type. Did you mean `string`?"},Symbol:{message:"Avoid using the `Symbol` type. Did you mean `symbol`?"}}}],"@typescript-eslint/consistent-type-assertions":"error","@typescript-eslint/dot-notation":"error","@typescript-eslint/explicit-member-accessibility":["off",{accessibility:"explicit"}],"@typescript-eslint/explicit-function-return-type":["error",{allowExpressions:!0}],"@typescript-eslint/indent":["error",2,{SwitchCase:1,MemberExpression:"off",ignoredNodes:["ArrowFunctionExpression Identifier","ArrowFunctionExpression BlockStatement","TSTypeParameterInstantiation"]}],"@typescript-eslint/member-delimiter-style":["error",{multiline:{delimiter:"semi",requireLast:!0},singleline:{delimiter:"semi",requireLast:!1}}],"@typescript-eslint/member-ordering":"off","@typescript-eslint/naming-convention":"off","@typescript-eslint/no-empty-function":"off","@typescript-eslint/no-empty-interface":["error",{allowSingleExtends:!0}],"@typescript-eslint/no-explicit-any":"off","@typescript-eslint/no-inferrable-types":["error",{ignoreParameters:!0}],"@typescript-eslint/no-misused-new":"error","@typescript-eslint/no-namespace":"error","@typescript-eslint/no-non-null-assertion":"error","@typescript-eslint/no-parameter-properties":"off","@typescript-eslint/no-shadow":["error",{hoist:"all"}],"@typescript-eslint/no-unused-expressions":"error","@typescript-eslint/no-use-before-define":"off","@typescript-eslint/no-var-requires":"off","@typescript-eslint/no-extra-parens":["error","all",{nestedBinaryExpressions:!1}],"@typescript-eslint/prefer-for-of":"error","@typescript-eslint/prefer-function-type":"error","@typescript-eslint/prefer-namespace-keyword":"error","@typescript-eslint/quotes":["error","single",{allowTemplateLiterals:!0}],"@typescript-eslint/semi":["error","always"],"@typescript-eslint/triple-slash-reference":["error",{path:"always",types:"prefer-import",lib:"always"}],"@typescript-eslint/type-annotation-spacing":"error","@typescript-eslint/unified-signatures":"error","@typescript-eslint/comma-dangle":"off","@typescript-eslint/comma-spacing":["error"],"@typescript-eslint/arrow-body-style":"off","arrow-body-style":"off","arrow-parens":["off","always"],"comma-dangle":"off","comma-spacing":"error",complexity:"off","constructor-super":"error",curly:"error","eol-last":"error",eqeqeq:["error","smart"],"guard-for-in":"error","id-blacklist":["error","any","Number","number","String","string","Boolean","boolean","Undefined","undefined"],"id-match":"error","import/order":"off","max-classes-per-file":"off","max-len":"off","new-parens":"error","no-bitwise":"error","no-caller":"error","no-cond-assign":"error","no-console":["error",{allow:["log","warn","dir","timeLog","assert","clear","count","countReset","group","groupEnd","table","dirxml","error","groupCollapsed","Console","profile","profileEnd","timeStamp","context"]}],"no-debugger":"error","no-empty":"off","no-eval":"error","no-extra-parens":"off","no-fallthrough":"error","no-invalid-this":"off","no-multiple-empty-lines":"off","no-new-wrappers":"error","no-restricted-imports":["error","rxjs/Rx"],"no-throw-literal":"error","no-trailing-spaces":["error",{ignoreComments:!0,skipBlankLines:!0}],"no-undef-init":"error","no-underscore-dangle":"off","no-unsafe-finally":"error","no-unused-labels":"error","no-var":"error","object-shorthand":"error","one-var":["error","never"],"prefer-const":"error","quote-props":["error","as-needed",{unnecessary:!1}],radix:"error","space-before-function-paren":["error",{anonymous:"never",asyncArrow:"always",named:"never"}],"spaced-comment":["error","always",{markers:["/"]}],"use-isnan":"error","valid-typeof":"off"}}},rules:{[s]:a,[o]:n,[t]:i}};
