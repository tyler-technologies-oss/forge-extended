/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { BaseAdapter, IBaseAdapter } from '../../core/base';
import { IStepComponent } from '../step/step';
import { IStepperComponent } from './stepper';
import { StepperLayoutAlign, StepperLayoutMode } from './stepper-constants';
export interface IStepperAdapter extends IBaseAdapter {
    initializeAccessibility(): void;
    toggleDisabled(disabled: boolean): void;
    patchSafari(): void;
    getFocusedOrSelectedStep(): IStepComponent;
    applyConfiguredSteps(steps: IStepComponent[]): void;
    setLinearState(linear: boolean): void;
    setLayoutAlign(layoutAlign: StepperLayoutAlign): void;
    setLayoutMode(layoutMode: StepperLayoutMode): void;
    setAlternativeState(alternative: boolean): void;
    setVertical(vertical: boolean): void;
    assignIndices(): void;
    addRootListener(event: string, listener: EventListener): void;
    removeRootListener(event: string, listener: EventListener): void;
    setSelected(step: IStepComponent): void;
    setSelectedByIndex(index: number): void;
    assignFirstLastStep(): void;
    getStep(index: number): IStepComponent;
    getLastStep(): IStepComponent;
    addSlotChangeListener(listener: EventListener): void;
    removeSlotChangeListener(listener: EventListener): void;
    toggleRootClass(className: string, show: boolean): void;
    isStepperFocused(): boolean;
    setStepsListener(event: string, listener: EventListener): void;
    removeStepsListener(event: string, listener: EventListener): void;
}
export declare class StepperAdapter extends BaseAdapter<IStepperComponent> implements IStepperAdapter {
    private _rootElement;
    private _slotElement;
    constructor(component: IStepperComponent);
    initializeAccessibility(): void;
    patchSafari(): void;
    addSlotChangeListener(listener: EventListener): void;
    removeSlotChangeListener(listener: EventListener): void;
    getLastStep(): IStepComponent;
    setSelected(step: IStepComponent): void;
    assignIndices(): void;
    assignFirstLastStep(): void;
    setLayoutAlign(layoutAlign: StepperLayoutAlign): void;
    setLayoutMode(layoutMode: StepperLayoutMode): void;
    setAlternativeState(alternative: boolean): void;
    setVertical(vertical: boolean): void;
    setLinearState(linear: boolean): void;
    removeRootListener(event: string, listener: EventListener): void;
    addRootListener(event: string, listener: EventListener): void;
    setSelectedByIndex(index: number): void;
    applyConfiguredSteps(steps: IStepComponent[]): void;
    tryGetFocusedStep(): IStepComponent | undefined;
    getFocusedOrSelectedStep(): IStepComponent;
    getStep(index: number): IStepComponent;
    toggleDisabled(disabled: boolean): void;
    toggleRootClass(className: string, show: boolean): void;
    isStepperFocused(): boolean;
    setStepsListener(event: string, listener: EventListener): void;
    removeStepsListener(event: string, listener: EventListener): void;
    private _applyToSteps;
    private _getSteps;
}
