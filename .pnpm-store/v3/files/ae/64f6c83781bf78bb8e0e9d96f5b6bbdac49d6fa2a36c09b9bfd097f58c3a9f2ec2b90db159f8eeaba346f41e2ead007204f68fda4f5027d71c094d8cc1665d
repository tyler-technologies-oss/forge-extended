// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { defineAccordionComponent } from '@tylertech/forge';
import { ForgeExpansionPanelModule } from '../expansion-panel/expansion-panel.module';
import { AccordionComponent } from './accordion.component';
import * as i0 from "@angular/core";
export class ForgeAccordionModule {
    constructor() {
        defineAccordionComponent();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.7", ngImport: i0, type: ForgeAccordionModule, declarations: [AccordionComponent], imports: [CommonModule, ForgeExpansionPanelModule], exports: [AccordionComponent, ForgeExpansionPanelModule] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeAccordionModule, imports: [CommonModule, ForgeExpansionPanelModule, ForgeExpansionPanelModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeAccordionModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ForgeExpansionPanelModule],
                    declarations: [AccordionComponent],
                    exports: [AccordionComponent, ForgeExpansionPanelModule]
                }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZvcmdlLWFuZ3VsYXIvc3JjL2xpYi9hY2NvcmRpb24vYWNjb3JkaW9uLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3SEFBd0g7QUFDeEgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFNUQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDdEYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7O0FBTzNELE1BQU0sT0FBTyxvQkFBb0I7SUFDaEM7UUFDQyx3QkFBd0IsRUFBRSxDQUFDO0lBQzVCLENBQUM7OEdBSFcsb0JBQW9COytHQUFwQixvQkFBb0IsaUJBSGpCLGtCQUFrQixhQUR2QixZQUFZLEVBQUUseUJBQXlCLGFBRXZDLGtCQUFrQixFQUFFLHlCQUF5QjsrR0FFM0Msb0JBQW9CLFlBSnRCLFlBQVksRUFBRSx5QkFBeUIsRUFFbkIseUJBQXlCOzsyRkFFM0Msb0JBQW9CO2tCQUxoQyxRQUFRO21CQUFDO29CQUNULE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSx5QkFBeUIsQ0FBQztvQkFDbEQsWUFBWSxFQUFFLENBQUMsa0JBQWtCLENBQUM7b0JBQ2xDLE9BQU8sRUFBRSxDQUFDLGtCQUFrQixFQUFFLHlCQUF5QixDQUFDO2lCQUN4RCIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgY29kZSB3YXMgZ2VuZXJhdGVkIGJ5IHRoZSBhbmd1bGFyLWN1c3RvbS1lbGVtZW50cy1zY2hlbWF0aWMuICBBbnkgY2hhbmdlcyB3aWxsIGJlIG92ZXJ3cml0dGVuIG5leHQgdGltZSBpdCBydW5zLlxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7IFxuaW1wb3J0IHsgZGVmaW5lQWNjb3JkaW9uQ29tcG9uZW50IH0gZnJvbSAnQHR5bGVydGVjaC9mb3JnZSc7XG5cbmltcG9ydCB7IEZvcmdlRXhwYW5zaW9uUGFuZWxNb2R1bGUgfSBmcm9tICcuLi9leHBhbnNpb24tcGFuZWwvZXhwYW5zaW9uLXBhbmVsLm1vZHVsZSc7XG5pbXBvcnQgeyBBY2NvcmRpb25Db21wb25lbnQgfSBmcm9tICcuL2FjY29yZGlvbi5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuXHRpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBGb3JnZUV4cGFuc2lvblBhbmVsTW9kdWxlXSxcblx0ZGVjbGFyYXRpb25zOiBbQWNjb3JkaW9uQ29tcG9uZW50XSxcblx0ZXhwb3J0czogW0FjY29yZGlvbkNvbXBvbmVudCwgRm9yZ2VFeHBhbnNpb25QYW5lbE1vZHVsZV1cbn0pXG5leHBvcnQgY2xhc3MgRm9yZ2VBY2NvcmRpb25Nb2R1bGUge1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHRkZWZpbmVBY2NvcmRpb25Db21wb25lbnQoKTtcblx0fVxufSJdfQ==