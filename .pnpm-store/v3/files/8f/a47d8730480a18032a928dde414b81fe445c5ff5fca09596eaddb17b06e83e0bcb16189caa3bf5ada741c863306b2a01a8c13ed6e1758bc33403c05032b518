/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { IIconComponent } from '../../icon';
import { BaseComponent, IBaseComponent } from '../../core/base/base-component';
import { IBaseListDropdownOption, ListDropdownIconType } from '../../list-dropdown/list-dropdown-constants';
export interface IOptionComponent extends IBaseComponent, Required<IBaseListDropdownOption> {
}
declare global {
    interface HTMLElementTagNameMap {
        'forge-option': IOptionComponent;
    }
}
/**
 * @tag forge-option
 */
export declare class OptionComponent extends BaseComponent implements IOptionComponent {
    static get observedAttributes(): string[];
    private _core;
    constructor();
    attributeChangedCallback(name: string, oldValue: string, newValue: string): void;
    /**
     * Gets/sets the value of this option.
     * @attribute
     */
    value: any;
    /**
     * Gets/sets the label of this option.
     * @attribute
     */
    label: string;
    /**
     * Gets/sets the secondary label of this option.
     * @attribute secondary-label
     */
    secondaryLabel: string;
    /**
     * Gets/sets the disabled status of this option.
     * @default false
     * @attribute
     */
    disabled: boolean;
    /**
     * Gets/sets the whether this option is a divider.
     * @default false
     * @attribute
     */
    divider: boolean;
    /**
     * Gets/sets the classes of this option.
     * @attribute option-class
     */
    optionClass: string | string[];
    /**
     * Gets/sets the leading icon of this option.
     * @attribute leading-icon
     */
    leadingIcon: string;
    /**
     * Gets/sets the leading icon class of this option.
     * @attribute leading-icon-class
     */
    leadingIconClass: string;
    /**
     * Gets/sets the leading icon type of this option.
     * @default "font"
     * @attribute leading-icon-type
     */
    leadingIconType: ListDropdownIconType;
    /**
     * Gets/sets properties on leading icon component.
     */
    leadingIconComponentProps: Partial<IIconComponent>;
    /**
     * Gets/sets the trailing icon of this option.
     * @attribute trailing-icon
     */
    trailingIcon: string;
    /**
     * Gets/sets the trailing icon class of this option.
     * @attribute trailing-icon-class
     */
    trailingIconClass: string;
    /**
     * Gets/sets the trailing icon type of this option.
     * @default "font"
     * @attribute trailing-icon-type
     */
    trailingIconType: ListDropdownIconType;
    /**
     * Gets/sets properties on trailing icon component.
     */
    trailingIconComponentProps: Partial<IIconComponent>;
    /**
     * Gets/sets the leading builder of this option.
     */
    leadingBuilder: () => HTMLElement;
    /**
     * Gets/sets the trailing builder of this option.
     */
    trailingBuilder: () => HTMLElement;
}
