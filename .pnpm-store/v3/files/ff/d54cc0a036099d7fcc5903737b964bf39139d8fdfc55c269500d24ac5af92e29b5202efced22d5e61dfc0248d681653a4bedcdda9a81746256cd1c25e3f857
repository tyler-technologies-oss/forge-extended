import { ElementRef, ChangeDetectorRef, NgZone } from '@angular/core';
import { FilePickerComponent as FilePickerComponentCustomElement } from '@tylertech/forge';
import * as i0 from "@angular/core";
/**  */
export declare class FilePickerComponent {
    protected elementRef: ElementRef<FilePickerComponentCustomElement>;
    protected zone: NgZone;
    /** The forge-file-picker element. */
    readonly nativeElement: FilePickerComponentCustomElement;
    /** Gets/sets the allowed file types. */
    set accept(value: FilePickerComponentCustomElement['accept']);
    get accept(): FilePickerComponentCustomElement['accept'];
    /** Gets/sets the maximum allowed file size. */
    set maxSize(value: FilePickerComponentCustomElement['maxSize']);
    get maxSize(): FilePickerComponentCustomElement['maxSize'];
    /** Gets/sets the camera to use when capturing video or images. */
    set capture(value: FilePickerComponentCustomElement['capture']);
    get capture(): FilePickerComponentCustomElement['capture'];
    /** Gets/sets whether multiple files are allowed. */
    set multiple(value: FilePickerComponentCustomElement['multiple']);
    get multiple(): FilePickerComponentCustomElement['multiple'];
    /** Gets/sets whether the file picker is disabled. */
    set disabled(value: FilePickerComponentCustomElement['disabled']);
    get disabled(): FilePickerComponentCustomElement['disabled'];
    /** Gets/sets whether the file picker uses the compact variant. */
    set compact(value: FilePickerComponentCustomElement['compact']);
    get compact(): FilePickerComponentCustomElement['compact'];
    /** Gets and sets whether the file picker is borderless. */
    set borderless(value: FilePickerComponentCustomElement['borderless']);
    get borderless(): FilePickerComponentCustomElement['borderless'];
    constructor(changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef<FilePickerComponentCustomElement>, zone: NgZone);
    static ɵfac: i0.ɵɵFactoryDeclaration<FilePickerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<FilePickerComponent, "forge-file-picker", never, { "accept": { "alias": "accept"; "required": false; }; "maxSize": { "alias": "maxSize"; "required": false; }; "capture": { "alias": "capture"; "required": false; }; "multiple": { "alias": "multiple"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "compact": { "alias": "compact"; "required": false; }; "borderless": { "alias": "borderless"; "required": false; }; }, {}, never, ["*"], false, never>;
    static ngAcceptInputType_multiple: unknown;
    static ngAcceptInputType_disabled: unknown;
    static ngAcceptInputType_compact: unknown;
    static ngAcceptInputType_borderless: unknown;
}
