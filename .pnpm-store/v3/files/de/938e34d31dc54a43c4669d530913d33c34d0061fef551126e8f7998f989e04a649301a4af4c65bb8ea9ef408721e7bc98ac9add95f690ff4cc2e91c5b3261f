import { ElementRef, ChangeDetectorRef, NgZone } from '@angular/core';
import { AppBarProfileButtonComponent as AppBarProfileButtonComponentCustomElement } from '@tylertech/forge';
import * as i0 from "@angular/core";
/**  */
export declare class AppBarProfileButtonComponent {
    protected elementRef: ElementRef<AppBarProfileButtonComponentCustomElement>;
    protected zone: NgZone;
    /** The forge-app-bar-profile-button element. */
    readonly nativeElement: AppBarProfileButtonComponentCustomElement;
    /** The full name. */
    set fullName(value: AppBarProfileButtonComponentCustomElement['fullName']);
    get fullName(): AppBarProfileButtonComponentCustomElement['fullName'];
    /** The email address. */
    set email(value: AppBarProfileButtonComponentCustomElement['email']);
    get email(): AppBarProfileButtonComponentCustomElement['email'];
    /** The url of the avatar image to display. */
    set avatarImageUrl(value: AppBarProfileButtonComponentCustomElement['avatarImageUrl']);
    get avatarImageUrl(): AppBarProfileButtonComponentCustomElement['avatarImageUrl'];
    /** The number of letters to display in the avatar. */
    set avatarLetterCount(value: AppBarProfileButtonComponentCustomElement['avatarLetterCount']);
    get avatarLetterCount(): AppBarProfileButtonComponentCustomElement['avatarLetterCount'];
    /** The text to display in the avatar. */
    set avatarText(value: AppBarProfileButtonComponentCustomElement['avatarText']);
    get avatarText(): AppBarProfileButtonComponentCustomElement['avatarText'];
    /** The name of an alternative icon to display in the avatar. */
    set avatarIcon(value: AppBarProfileButtonComponentCustomElement['avatarIcon']);
    get avatarIcon(): AppBarProfileButtonComponentCustomElement['avatarIcon'];
    /** Whether to display the sign out button or not. Defaults to `true`. */
    set signOutButton(value: AppBarProfileButtonComponentCustomElement['signOutButton']);
    get signOutButton(): AppBarProfileButtonComponentCustomElement['signOutButton'];
    /** Whether to display the profile button or not. */
    set profileButton(value: AppBarProfileButtonComponentCustomElement['profileButton']);
    get profileButton(): AppBarProfileButtonComponentCustomElement['profileButton'];
    /** The text to display in the sign out button. */
    set signOutButtonText(value: AppBarProfileButtonComponentCustomElement['signOutButtonText']);
    get signOutButtonText(): AppBarProfileButtonComponentCustomElement['signOutButtonText'];
    /** The text to display in the profile button. */
    set profileButtonText(value: AppBarProfileButtonComponentCustomElement['profileButtonText']);
    get profileButtonText(): AppBarProfileButtonComponentCustomElement['profileButtonText'];
    /** Whether the profile card is open or not. */
    set open(value: AppBarProfileButtonComponentCustomElement['open']);
    get open(): AppBarProfileButtonComponentCustomElement['open'];
    /** The popup element when open. */
    get popupElement(): AppBarProfileButtonComponentCustomElement['popupElement'];
    /** Sets the profile card builder callback that will be used to add extra content to the profile card. */
    set profileCardBuilder(value: AppBarProfileButtonComponentCustomElement['profileCardBuilder']);
    get profileCardBuilder(): AppBarProfileButtonComponentCustomElement['profileCardBuilder'];
    constructor(changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef<AppBarProfileButtonComponentCustomElement>, zone: NgZone);
    static ɵfac: i0.ɵɵFactoryDeclaration<AppBarProfileButtonComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AppBarProfileButtonComponent, "forge-app-bar-profile-button", never, { "fullName": { "alias": "fullName"; "required": false; }; "email": { "alias": "email"; "required": false; }; "avatarImageUrl": { "alias": "avatarImageUrl"; "required": false; }; "avatarLetterCount": { "alias": "avatarLetterCount"; "required": false; }; "avatarText": { "alias": "avatarText"; "required": false; }; "avatarIcon": { "alias": "avatarIcon"; "required": false; }; "signOutButton": { "alias": "signOutButton"; "required": false; }; "profileButton": { "alias": "profileButton"; "required": false; }; "signOutButtonText": { "alias": "signOutButtonText"; "required": false; }; "profileButtonText": { "alias": "profileButtonText"; "required": false; }; "open": { "alias": "open"; "required": false; }; "profileCardBuilder": { "alias": "profileCardBuilder"; "required": false; }; }, {}, never, ["*"], false, never>;
    static ngAcceptInputType_avatarLetterCount: unknown;
    static ngAcceptInputType_signOutButton: unknown;
    static ngAcceptInputType_profileButton: unknown;
    static ngAcceptInputType_open: unknown;
}
