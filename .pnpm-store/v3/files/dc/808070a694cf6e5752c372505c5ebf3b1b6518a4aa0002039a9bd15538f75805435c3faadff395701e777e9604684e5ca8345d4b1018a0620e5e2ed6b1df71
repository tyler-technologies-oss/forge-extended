/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { __decorate } from "tslib";
import { coerceBoolean, customElement, coreProperty } from '@tylertech/forge-core';
import { BaseComponent } from '../../core/base/base-component';
import { OptionAdapter } from './option-adapter';
import { OPTION_CONSTANTS } from './option-constants';
import { OptionCore } from './option-core';
/**
 * @tag forge-option
 */
let OptionComponent = class OptionComponent extends BaseComponent {
    static get observedAttributes() {
        return [
            OPTION_CONSTANTS.attributes.VALUE,
            OPTION_CONSTANTS.attributes.LABEL,
            OPTION_CONSTANTS.attributes.SECONDARY_LABEL,
            OPTION_CONSTANTS.attributes.DISABLED,
            OPTION_CONSTANTS.attributes.DIVIDER,
            OPTION_CONSTANTS.attributes.OPTION_CLASS,
            OPTION_CONSTANTS.attributes.LEADING_ICON,
            OPTION_CONSTANTS.attributes.LEADING_ICON_CLASS,
            OPTION_CONSTANTS.attributes.LEADING_ICON_TYPE,
            OPTION_CONSTANTS.attributes.TRAILING_ICON,
            OPTION_CONSTANTS.attributes.TRAILING_ICON_CLASS,
            OPTION_CONSTANTS.attributes.TRAILING_ICON_TYPE
        ];
    }
    constructor() {
        super();
        this._core = new OptionCore(new OptionAdapter(this));
    }
    attributeChangedCallback(name, oldValue, newValue) {
        switch (name) {
            case OPTION_CONSTANTS.attributes.VALUE:
                this.value = newValue;
                break;
            case OPTION_CONSTANTS.attributes.LABEL:
                this.label = newValue;
                break;
            case OPTION_CONSTANTS.attributes.SECONDARY_LABEL:
                this.secondaryLabel = newValue;
                break;
            case OPTION_CONSTANTS.attributes.DISABLED:
                this.disabled = coerceBoolean(newValue);
                break;
            case OPTION_CONSTANTS.attributes.DIVIDER:
                this.divider = this.hasAttribute(OPTION_CONSTANTS.attributes.DIVIDER);
                break;
            case OPTION_CONSTANTS.attributes.OPTION_CLASS:
                this.optionClass = newValue;
                break;
            case OPTION_CONSTANTS.attributes.LEADING_ICON:
                this.leadingIcon = newValue;
                break;
            case OPTION_CONSTANTS.attributes.LEADING_ICON_CLASS:
                this.leadingIconClass = newValue;
                break;
            case OPTION_CONSTANTS.attributes.LEADING_ICON_TYPE:
                this.leadingIconType = newValue;
                break;
            case OPTION_CONSTANTS.attributes.TRAILING_ICON:
                this.trailingIcon = newValue;
                break;
            case OPTION_CONSTANTS.attributes.TRAILING_ICON_CLASS:
                this.trailingIconClass = newValue;
                break;
            case OPTION_CONSTANTS.attributes.TRAILING_ICON_TYPE:
                this.trailingIconType = newValue;
                break;
        }
    }
};
__decorate([
    coreProperty()
], OptionComponent.prototype, "value", void 0);
__decorate([
    coreProperty()
], OptionComponent.prototype, "label", void 0);
__decorate([
    coreProperty()
], OptionComponent.prototype, "secondaryLabel", void 0);
__decorate([
    coreProperty()
], OptionComponent.prototype, "disabled", void 0);
__decorate([
    coreProperty()
], OptionComponent.prototype, "divider", void 0);
__decorate([
    coreProperty()
], OptionComponent.prototype, "optionClass", void 0);
__decorate([
    coreProperty()
], OptionComponent.prototype, "leadingIcon", void 0);
__decorate([
    coreProperty()
], OptionComponent.prototype, "leadingIconClass", void 0);
__decorate([
    coreProperty()
], OptionComponent.prototype, "leadingIconType", void 0);
__decorate([
    coreProperty()
], OptionComponent.prototype, "leadingIconComponentProps", void 0);
__decorate([
    coreProperty()
], OptionComponent.prototype, "trailingIcon", void 0);
__decorate([
    coreProperty()
], OptionComponent.prototype, "trailingIconClass", void 0);
__decorate([
    coreProperty()
], OptionComponent.prototype, "trailingIconType", void 0);
__decorate([
    coreProperty()
], OptionComponent.prototype, "trailingIconComponentProps", void 0);
__decorate([
    coreProperty()
], OptionComponent.prototype, "leadingBuilder", void 0);
__decorate([
    coreProperty()
], OptionComponent.prototype, "trailingBuilder", void 0);
OptionComponent = __decorate([
    customElement({
        name: OPTION_CONSTANTS.elementName
    })
], OptionComponent);
export { OptionComponent };
