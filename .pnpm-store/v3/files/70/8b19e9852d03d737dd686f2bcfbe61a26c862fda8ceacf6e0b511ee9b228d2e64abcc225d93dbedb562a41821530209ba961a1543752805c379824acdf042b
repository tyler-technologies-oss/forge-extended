import { Renderer2, ElementRef } from '@angular/core';
import { StaticProvider } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { IAutocompleteComponent, IOption } from '@tylertech/forge';
import * as i0 from "@angular/core";
export declare const AUTOCOMPLETE_VALUE_ACCESSOR: StaticProvider;
export declare class AutocompleteValueAccessor implements ControlValueAccessor {
    private _elementRef;
    private _renderer;
    autocompleteChange(event: CustomEvent): void;
    blur(): void;
    onChange: (_: any) => void;
    onTouched: () => void;
    constructor(_elementRef: ElementRef<IAutocompleteComponent>, _renderer: Renderer2);
    writeValue(value: any): void;
    registerOnChange(fn: (_: boolean) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisabled: boolean): void;
    change(value: any | any[] | IOption | IOption[]): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AutocompleteValueAccessor, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AutocompleteValueAccessor, "forge-autocomplete[formControlName],forge-autocomplete[formControl],forge-autocomplete[ngModel]", never, {}, {}, never, never, false, never>;
}
