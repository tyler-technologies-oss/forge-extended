// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { booleanAttribute, Component, ChangeDetectionStrategy, Input } from '@angular/core';
import { defineBadgeComponent } from '@tylertech/forge';
import * as i0 from "@angular/core";
/**  */
export class BadgeComponent {
    /** Controls whether the badge will be a small dot without any content visible. */
    set dot(value) {
        this.zone.runOutsideAngular(() => {
            this.nativeElement.dot = value;
        });
    }
    get dot() {
        return this.nativeElement.dot;
    }
    /** The theme of the badge. */
    set theme(value) {
        this.zone.runOutsideAngular(() => {
            this.nativeElement.theme = value;
        });
    }
    get theme() {
        return this.nativeElement.theme;
    }
    /** Controls whether the badge will have a stronger visual appearance. */
    set strong(value) {
        this.zone.runOutsideAngular(() => {
            this.nativeElement.strong = value;
        });
    }
    get strong() {
        return this.nativeElement.strong;
    }
    /** Controls whether the badge is visible. */
    set hide(value) {
        this.zone.runOutsideAngular(() => {
            this.nativeElement.hide = value;
        });
    }
    get hide() {
        return this.nativeElement.hide;
    }
    constructor(changeDetectorRef, elementRef, zone) {
        this.elementRef = elementRef;
        this.zone = zone;
        /** The forge-badge element. */
        this.nativeElement = this.elementRef.nativeElement;
        defineBadgeComponent();
        changeDetectorRef.detach();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: BadgeComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "16.1.0", version: "17.3.7", type: BadgeComponent, selector: "forge-badge", inputs: { dot: ["dot", "dot", booleanAttribute], theme: "theme", strong: ["strong", "strong", booleanAttribute], hide: ["hide", "hide", booleanAttribute] }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: BadgeComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'forge-badge',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { dot: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], theme: [{
                type: Input
            }], strong: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], hide: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFkZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZm9yZ2UtYW5ndWxhci9zcmMvbGliL2JhZGdlL2JhZGdlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3SEFBd0g7QUFDeEgsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFNBQVMsRUFBYyx1QkFBdUIsRUFBNkIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25JLE9BQU8sRUFBaUQsb0JBQW9CLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7QUFFdkcsT0FBTztBQU1QLE1BQU0sT0FBTyxjQUFjO0lBSzFCLGtGQUFrRjtJQUNsRixJQUNXLEdBQUcsQ0FBQyxLQUF5QztRQUN2RCxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRTtZQUNoQyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUM7UUFDaEMsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDO0lBQ0QsSUFBVyxHQUFHO1FBQ2IsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQztJQUMvQixDQUFDO0lBRUQsOEJBQThCO0lBQzlCLElBQ1csS0FBSyxDQUFDLEtBQTJDO1FBQzNELElBQUksQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFO1lBQ2hDLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNsQyxDQUFDLENBQUMsQ0FBQztJQUNKLENBQUM7SUFDRCxJQUFXLEtBQUs7UUFDZixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDO0lBQ2pDLENBQUM7SUFFRCx5RUFBeUU7SUFDekUsSUFDVyxNQUFNLENBQUMsS0FBNEM7UUFDN0QsSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUU7WUFDaEMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ25DLENBQUMsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUNELElBQVcsTUFBTTtRQUNoQixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDO0lBQ2xDLENBQUM7SUFFRCw2Q0FBNkM7SUFDN0MsSUFDVyxJQUFJLENBQUMsS0FBMEM7UUFDekQsSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUU7WUFDaEMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO1FBQ2pDLENBQUMsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUNELElBQVcsSUFBSTtRQUNkLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUM7SUFDaEMsQ0FBQztJQUVELFlBQ0MsaUJBQW9DLEVBQzFCLFVBQW1ELEVBQ25ELElBQVk7UUFEWixlQUFVLEdBQVYsVUFBVSxDQUF5QztRQUNuRCxTQUFJLEdBQUosSUFBSSxDQUFRO1FBbER2QiwrQkFBK0I7UUFDZixrQkFBYSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDO1FBbUQ3RCxvQkFBb0IsRUFBRSxDQUFDO1FBQ3ZCLGlCQUFpQixDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQzVCLENBQUM7OEdBeERXLGNBQWM7a0dBQWQsY0FBYyx5REFNTixnQkFBZ0IsZ0RBc0JoQixnQkFBZ0IsMEJBV2hCLGdCQUFnQiw2QkF6Q3pCLDJCQUEyQjs7MkZBRTFCLGNBQWM7a0JBTDFCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGFBQWE7b0JBQ3ZCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxRQUFRLEVBQUUsMkJBQTJCO2lCQUN0QztvSUFRVyxHQUFHO3NCQURiLEtBQUs7dUJBQUMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUU7Z0JBWTNCLEtBQUs7c0JBRGYsS0FBSztnQkFZSyxNQUFNO3NCQURoQixLQUFLO3VCQUFDLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFO2dCQVkzQixJQUFJO3NCQURkLEtBQUs7dUJBQUMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGNvZGUgd2FzIGdlbmVyYXRlZCBieSB0aGUgYW5ndWxhci1jdXN0b20tZWxlbWVudHMtc2NoZW1hdGljLiAgQW55IGNoYW5nZXMgd2lsbCBiZSBvdmVyd3JpdHRlbiBuZXh0IHRpbWUgaXQgcnVucy5cbmltcG9ydCB7IGJvb2xlYW5BdHRyaWJ1dGUsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBOZ1pvbmUsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYWRnZUNvbXBvbmVudCBhcyBCYWRnZUNvbXBvbmVudEN1c3RvbUVsZW1lbnQsIGRlZmluZUJhZGdlQ29tcG9uZW50IH0gZnJvbSAnQHR5bGVydGVjaC9mb3JnZSc7XG5cbi8qKiAgKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2ZvcmdlLWJhZGdlJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50Pidcbn0pXG5leHBvcnQgY2xhc3MgQmFkZ2VDb21wb25lbnQge1xuXG5cdC8qKiBUaGUgZm9yZ2UtYmFkZ2UgZWxlbWVudC4gKi9cblx0cHVibGljIHJlYWRvbmx5IG5hdGl2ZUVsZW1lbnQgPSB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcblxuXHQvKiogQ29udHJvbHMgd2hldGhlciB0aGUgYmFkZ2Ugd2lsbCBiZSBhIHNtYWxsIGRvdCB3aXRob3V0IGFueSBjb250ZW50IHZpc2libGUuICovXG5cdEBJbnB1dCh7IHRyYW5zZm9ybTogYm9vbGVhbkF0dHJpYnV0ZSB9KVxuXHRwdWJsaWMgc2V0IGRvdCh2YWx1ZTogQmFkZ2VDb21wb25lbnRDdXN0b21FbGVtZW50Wydkb3QnXSkge1xuXHRcdHRoaXMuem9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG5cdFx0XHR0aGlzLm5hdGl2ZUVsZW1lbnQuZG90ID0gdmFsdWU7XG5cdFx0fSk7XG5cdH1cblx0cHVibGljIGdldCBkb3QoKTogQmFkZ2VDb21wb25lbnRDdXN0b21FbGVtZW50Wydkb3QnXSB7XG5cdFx0cmV0dXJuIHRoaXMubmF0aXZlRWxlbWVudC5kb3Q7XG5cdH1cblxuXHQvKiogVGhlIHRoZW1lIG9mIHRoZSBiYWRnZS4gKi9cblx0QElucHV0KClcblx0cHVibGljIHNldCB0aGVtZSh2YWx1ZTogQmFkZ2VDb21wb25lbnRDdXN0b21FbGVtZW50Wyd0aGVtZSddKSB7XG5cdFx0dGhpcy56b25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHtcblx0XHRcdHRoaXMubmF0aXZlRWxlbWVudC50aGVtZSA9IHZhbHVlO1xuXHRcdH0pO1xuXHR9XG5cdHB1YmxpYyBnZXQgdGhlbWUoKTogQmFkZ2VDb21wb25lbnRDdXN0b21FbGVtZW50Wyd0aGVtZSddIHtcblx0XHRyZXR1cm4gdGhpcy5uYXRpdmVFbGVtZW50LnRoZW1lO1xuXHR9XG5cblx0LyoqIENvbnRyb2xzIHdoZXRoZXIgdGhlIGJhZGdlIHdpbGwgaGF2ZSBhIHN0cm9uZ2VyIHZpc3VhbCBhcHBlYXJhbmNlLiAqL1xuXHRASW5wdXQoeyB0cmFuc2Zvcm06IGJvb2xlYW5BdHRyaWJ1dGUgfSlcblx0cHVibGljIHNldCBzdHJvbmcodmFsdWU6IEJhZGdlQ29tcG9uZW50Q3VzdG9tRWxlbWVudFsnc3Ryb25nJ10pIHtcblx0XHR0aGlzLnpvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuXHRcdFx0dGhpcy5uYXRpdmVFbGVtZW50LnN0cm9uZyA9IHZhbHVlO1xuXHRcdH0pO1xuXHR9XG5cdHB1YmxpYyBnZXQgc3Ryb25nKCk6IEJhZGdlQ29tcG9uZW50Q3VzdG9tRWxlbWVudFsnc3Ryb25nJ10ge1xuXHRcdHJldHVybiB0aGlzLm5hdGl2ZUVsZW1lbnQuc3Ryb25nO1xuXHR9XG5cblx0LyoqIENvbnRyb2xzIHdoZXRoZXIgdGhlIGJhZGdlIGlzIHZpc2libGUuICovXG5cdEBJbnB1dCh7IHRyYW5zZm9ybTogYm9vbGVhbkF0dHJpYnV0ZSB9KVxuXHRwdWJsaWMgc2V0IGhpZGUodmFsdWU6IEJhZGdlQ29tcG9uZW50Q3VzdG9tRWxlbWVudFsnaGlkZSddKSB7XG5cdFx0dGhpcy56b25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHtcblx0XHRcdHRoaXMubmF0aXZlRWxlbWVudC5oaWRlID0gdmFsdWU7XG5cdFx0fSk7XG5cdH1cblx0cHVibGljIGdldCBoaWRlKCk6IEJhZGdlQ29tcG9uZW50Q3VzdG9tRWxlbWVudFsnaGlkZSddIHtcblx0XHRyZXR1cm4gdGhpcy5uYXRpdmVFbGVtZW50LmhpZGU7XG5cdH1cblxuXHRjb25zdHJ1Y3Rvcihcblx0XHRjaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYsXG5cdFx0cHJvdGVjdGVkIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY8QmFkZ2VDb21wb25lbnRDdXN0b21FbGVtZW50Pixcblx0XHRwcm90ZWN0ZWQgem9uZTogTmdab25lXG5cdCkge1xuXHRcdGRlZmluZUJhZGdlQ29tcG9uZW50KCk7XG5cdFx0Y2hhbmdlRGV0ZWN0b3JSZWYuZGV0YWNoKCk7XG5cdH1cbn1cbiJdfQ==