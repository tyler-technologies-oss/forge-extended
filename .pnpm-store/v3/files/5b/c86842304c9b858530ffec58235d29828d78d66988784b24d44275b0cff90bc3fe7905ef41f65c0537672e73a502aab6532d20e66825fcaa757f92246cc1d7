/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { ISelectDropdownComponent } from './select-dropdown';
import { BaseSelectAdapter, IBaseSelectAdapter } from '../core/base-select-adapter';
import { IListDropdownConfig } from '../../list-dropdown/list-dropdown-constants';
import { type IBaseComponent } from '../../core/base/base-component';
export interface ISelectDropdownAdapter<T extends IBaseComponent = ISelectDropdownComponent> extends IBaseSelectAdapter<T> {
    attach(selector: string): void;
    detach(): void;
    setTargetDisconnectedListener(cb: () => void): () => void;
    isAttached(): boolean;
    setTargetText(text: string, selector: string): void;
    getTargetText(selector: string): string;
}
export declare class SelectDropdownAdapter extends BaseSelectAdapter<ISelectDropdownComponent> implements ISelectDropdownAdapter {
    constructor(component: ISelectDropdownComponent);
    initializeAccessibility(): void;
    addClickListener(listener: (evt: Event) => void): void;
    removeClickListener(listener: (evt: Event) => void): void;
    addTargetListener(type: string, listener: (evt: Event) => void): void;
    removeTargetListener(type: string, listener: (evt: Event) => void): void;
    updateActiveDescendant(id: string): void;
    open(config: IListDropdownConfig): void;
    close(): Promise<void>;
    attach(selector: string): void;
    detach(): void;
    setTargetDisconnectedListener(cb: () => void): () => void;
    isAttached(): boolean;
    setTargetText(text: string, selector: string): void;
    getTargetText(selector: string): string;
    private _getElementBySelector;
    private _getRootNode;
    setAriaControls(): void;
}
