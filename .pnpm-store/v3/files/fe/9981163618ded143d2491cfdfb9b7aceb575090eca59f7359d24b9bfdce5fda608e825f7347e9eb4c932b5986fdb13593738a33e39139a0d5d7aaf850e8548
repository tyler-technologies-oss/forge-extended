export class Subject {
    get value() {
        return this.source;
    }
    constructor(value) {
        this.subscribers = [];
        this.source = value;
    }
    subscribe(observer) {
        const subscription = new Subscription(this.subscribers, observer);
        this.subscribers.push(subscription);
        observer?.(this.source);
        return subscription;
    }
    // eslint-disable-next-line @tylertech-eslint/require-private-modifier
    next(value) {
        this.source = value;
        for (const subscriber of this.subscribers) {
            // eslint-disable-next-line @typescript-eslint/dot-notation
            subscriber.observer?.(value);
        }
    }
    // eslint-disable-next-line @tylertech-eslint/require-private-modifier
    complete() {
        this.subscribers = [];
    }
}
export class Subscription {
    get closed() {
        return this._closed;
    }
    ;
    constructor(parent, observer) {
        this._closed = false;
        this.observer = observer;
        this._parent = parent;
    }
    unsubscribe() {
        if (this._closed) {
            return;
        }
        const index = this._parent.findIndex(subscription => subscription === this);
        if (index > -1) {
            this._parent.splice(index, 1);
            this._closed = true;
            return;
        }
        console.error('Subscription is not present in parent array.', { subscription: this, parent: this._parent });
    }
}
