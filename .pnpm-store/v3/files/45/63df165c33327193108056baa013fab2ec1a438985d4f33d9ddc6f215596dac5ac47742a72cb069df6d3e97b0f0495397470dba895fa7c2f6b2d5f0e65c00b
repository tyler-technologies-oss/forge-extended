export interface ICorePropertyOptions {
    /**
     * Allow Binding to a different naming convention in the core
     * @example coreProperty({name: '_foo'}) foo;
     */
    name?: string;
    /**
     * When false, skips calling the core property setter
     * @default true
     * @example coreProperty({set: true}) foo;
     */
    set?: boolean;
    /**
     * When false, skips calling the core property getter
     * @default true
     * @example coreProperty({get: true}) foo;
     */
    get?: boolean;
}
/**
 * This decorator is intended to be used on properties of a class that extends `HTMLElement` to dynamically
 * create getters and setters that interact with the `_core` member of the class.
 *
 * @param options The core property options.
 * @returns
 */
export declare function coreProperty(options?: ICorePropertyOptions): any;
