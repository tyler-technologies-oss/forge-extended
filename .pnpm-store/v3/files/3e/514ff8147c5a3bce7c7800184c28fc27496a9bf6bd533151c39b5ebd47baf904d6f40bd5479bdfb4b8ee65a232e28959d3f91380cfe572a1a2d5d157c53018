import { ElementRef, ChangeDetectorRef, NgZone } from '@angular/core';
import { ButtonAreaComponent as ButtonAreaComponentCustomElement } from '@tylertech/forge';
import * as i0 from "@angular/core";
/**  */
export declare class ButtonAreaComponent {
    protected elementRef: ElementRef<ButtonAreaComponentCustomElement>;
    protected zone: NgZone;
    /** The forge-button-area element. */
    readonly nativeElement: ButtonAreaComponentCustomElement;
    /** Sets whether the button area and slotted button are disabled. Setting this on one will also set it on the other. */
    set disabled(value: ButtonAreaComponentCustomElement['disabled']);
    get disabled(): ButtonAreaComponentCustomElement['disabled'];
    constructor(changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef<ButtonAreaComponentCustomElement>, zone: NgZone);
    static ɵfac: i0.ɵɵFactoryDeclaration<ButtonAreaComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ButtonAreaComponent, "forge-button-area", never, { "disabled": { "alias": "disabled"; "required": false; }; }, {}, never, ["*"], false, never>;
    static ngAcceptInputType_disabled: unknown;
}
