/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { __decorate } from "tslib";
import { attachShadowTemplate, customElement } from '@tylertech/forge-core';
import { tylIconInsertInvitation } from '@tylertech/tyler-icons/standard';
import { CalendarComponent } from '../calendar';
import { IconComponent, IconRegistry } from '../icon';
import { IconButtonComponent } from '../icon-button';
import { PopoverComponent } from '../popover';
import { BaseDatePickerComponent } from './base/base-date-picker';
import { BASE_DATE_PICKER_CONSTANTS } from './base/base-date-picker-constants';
import { DatePickerAdapter } from './date-picker-adapter';
import { DATE_PICKER_CONSTANTS } from './date-picker-constants';
import { DatePickerCore } from './date-picker-core';
const template = '<template><slot></slot></template>';
const styles = ':host{display:block}:host([hidden]){display:none}';
/**
 * @tag forge-date-picker
 *
 * @attribute {string} [value] - The value of the date picker.
 *
 * @event {CustomEvent<Date | string | null>} forge-date-picker-change - Emits when the value of the date picker changes.
 * @event {CustomEvent<void>} forge-date-picker-open - Emits when the date picker opens.
 * @event {CustomEvent<void>} forge-date-picker-close - Emits when the date picker closes.
 * @event {CustomEvent<string>} forge-date-picker-input - Emits when the user inputs a value into the date picker.
 */
let DatePickerComponent = class DatePickerComponent extends BaseDatePickerComponent {
    static get observedAttributes() {
        return [...Object.values(BASE_DATE_PICKER_CONSTANTS.observedAttributes), DATE_PICKER_CONSTANTS.observedAttributes.VALUE];
    }
    constructor() {
        super();
        IconRegistry.define(tylIconInsertInvitation);
        attachShadowTemplate(this, template, styles);
        this._core = new DatePickerCore(new DatePickerAdapter(this));
    }
    attributeChangedCallback(name, oldValue, newValue) {
        switch (name) {
            case DATE_PICKER_CONSTANTS.observedAttributes.VALUE:
                this.value = newValue;
                return;
        }
        super.attributeChangedCallback(name, oldValue, newValue);
    }
};
DatePickerComponent = __decorate([
    customElement({
        name: DATE_PICKER_CONSTANTS.elementName,
        dependencies: [PopoverComponent, CalendarComponent, IconButtonComponent, IconComponent]
    })
], DatePickerComponent);
export { DatePickerComponent };
