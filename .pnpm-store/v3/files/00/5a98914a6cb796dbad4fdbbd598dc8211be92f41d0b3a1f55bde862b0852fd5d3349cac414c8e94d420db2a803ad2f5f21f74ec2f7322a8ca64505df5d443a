/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { IBaseComponentDelegateConfig } from '../core/delegates/base-component-delegate';
import { FormFieldComponentDelegate, IFormFieldComponentDelegateOptions } from '../core/delegates/form-field-component-delegate';
import { ITextFieldComponent, ITextFieldComponentDelegateConfig } from '../text-field';
import { IDatePickerComponent } from './date-picker';
export type DatePickerComponentDelegateProps = Partial<IDatePickerComponent>;
export interface IDatePickerComponentDelegateOptions extends IFormFieldComponentDelegateOptions {
    useDropdownIcon?: boolean;
    textFieldDelegateConfig?: ITextFieldComponentDelegateConfig;
}
export interface IDatePickerComponentDelegateConfig extends IBaseComponentDelegateConfig<IDatePickerComponent, IDatePickerComponentDelegateOptions> {
}
export declare class DatePickerComponentDelegate extends FormFieldComponentDelegate<IDatePickerComponent, IDatePickerComponentDelegateOptions> {
    private _textFieldDelegate;
    constructor(config?: IDatePickerComponentDelegateConfig);
    protected _build(): IDatePickerComponent;
    getInputElement(): HTMLInputElement;
    getTextFieldElement(): ITextFieldComponent;
    get value(): any;
    set value(value: any);
    get disabled(): boolean;
    set disabled(value: boolean);
    get invalid(): boolean;
    set invalid(value: boolean);
    onChange(listener: (value: string) => void): void;
    onInput(listener: (value: string) => void): void;
    onFocus(listener: (evt: FocusEvent) => void): void;
    onBlur(listener: (evt: FocusEvent) => void): void;
    private _attachTextField;
}
