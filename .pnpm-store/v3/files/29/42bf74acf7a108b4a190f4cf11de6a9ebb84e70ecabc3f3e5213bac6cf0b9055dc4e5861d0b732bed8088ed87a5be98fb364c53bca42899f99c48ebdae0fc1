/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { BaseField, IBaseField } from '../field/base/base-field';
import { TextFieldCore } from './text-field-core';
export interface ITextFieldComponent extends IBaseField {
    showClear: boolean;
    readonly popoverTargetElement: HTMLElement;
}
declare global {
    interface HTMLElementTagNameMap {
        'forge-text-field': ITextFieldComponent;
    }
    interface HTMLElementEventMap {
        'forge-text-field-clear': CustomEvent<void>;
    }
}
/**
 * @tag forge-text-field
 *
 * @summary The Forge Text Field component wraps and styles an input or textarea element.
 *
 * @dependency forge-field
 * @dependency forge-icon-button
 * @dependency forge-tooltip
 *
 * @property {boolean} [showClear=false] - Whether the clear button appears when text has been entered.
 * @property {HTMLElement} popoverTargetElement - Gets a reference to the element that the popover should target for best alignment.
 *
 * @attribute {boolean} [show-clear=false] - Whether the clear button appears when text has been entered.
 *
 * @globalconfig labelPosition
 * @globalconfig variant
 *
 * @event {CustomEvent<void>} forge-text-field-clear - Dispatched when the clear button is clicked.
 *
 * @csspart root - The root container element.
 * @csspart label - The label element.
 * @csspart container - The container element surrounding the input.
 * @csspart input - The element containing te input slot.
 * @csspart start - The element containing the start slot.
 * @csspart end - The element containing the end slot.
 * @csspart popover-icon - The popover icon element.
 * @csspart accessory - The element containing the accessory slot.
 * @csspart support-text - The support text element.
 * @csspart support-text - The element containing the support text slot.
 * @csspart support-text-end - The element containing the support text end slot.
 * @csspart focus-indicator - The focus indicator element.
 *
 * @slot - The default/unnamed slot for the field's input.
 * @slot label - Renders its content as a positioned label.
 * @slot start - Typically reserved for content/icons that render logically before the default slot content.
 * @slot end - Typically reserved content/icons that render logically after the default slot content.
 * @slot clear-button - Content slotted here replaces the default clear button.
 * @slot clear-button-tooltip - Sets the text content of the clear button's tooltip and accessible label.
 * @slot accessory - Used for content such as a button that is logically connected to the field but should appear distinct from the input.
 * @slot support-text - Used for content that provides additional information about the field. Aligns to the inline start of the field.
 * @slot support-text-end - Used for content that provides additional information about the field. Aligns to the inline end of the field.
 */
export declare class TextFieldComponent extends BaseField<TextFieldCore> implements ITextFieldComponent {
    static get observedAttributes(): string[];
    protected readonly _core: TextFieldCore;
    constructor();
    connectedCallback(): void;
    disconnectedCallback(): void;
    attributeChangedCallback(name: string, oldValue: string, newValue: string): void;
    get popoverTargetElement(): HTMLElement;
    showClear: boolean;
}
