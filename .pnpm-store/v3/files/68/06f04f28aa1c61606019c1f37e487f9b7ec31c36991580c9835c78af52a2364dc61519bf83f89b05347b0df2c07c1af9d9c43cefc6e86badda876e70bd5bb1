/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
export declare const PAGINATOR_CONSTANTS: {
    elementName: "forge-paginator";
    observedAttributes: {
        PAGE_INDEX: string;
        PAGE_SIZE: string;
        OFFSET: string;
        TOTAL: string;
        PAGE_SIZE_OPTIONS: string;
        LABEL: string;
        FIRST_LAST: string;
        FIRST: string;
        DISABLED: string;
        ALTERNATIVE: string;
    };
    attributes: {
        PAGE_INDEX: string;
        PAGE_SIZE: string;
        OFFSET: string;
        TOTAL: string;
        PAGE_SIZE_OPTIONS: string;
        LABEL: string;
        FIRST_LAST: string;
        FIRST: string;
        DISABLED: string;
        ALTERNATIVE: string;
    };
    selectors: {
        LABEL: string;
        PAGE_SIZE_SELECT: string;
        RANGE_LABEL: string;
        FIRST_PAGE_BUTTON: string;
        FIRST_PAGE_CONTAINER: string;
        PREVIOUS_PAGE_BUTTON: string;
        PREVIOUS_PAGE_CONTAINER: string;
        NEXT_PAGE_BUTTON: string;
        NEXT_PAGE_CONTAINER: string;
        LAST_PAGE_BUTTON: string;
        LAST_PAGE_CONTAINER: string;
        RANGE_LABEL_ALTERNATIVE: string;
    };
    events: {
        readonly CHANGE: "forge-paginator-change";
    };
    numbers: {
        DEFAULT_PAGE_INDEX: number;
        DEFAULT_TOTAL: number;
        DEFAULT_PAGE_SIZE: number;
        DEFAULT_PAGE_SIZE_OPTIONS: number[];
    };
    strings: {
        DEFAULT_LABEL: string;
        RANGE_SEPARATOR_LABEL: string;
    };
};
export interface IPaginatorChangeEventData {
    type: 'previous-page' | 'next-page' | 'first-page' | 'last-page' | 'page-size';
    pageSize: number;
    pageIndex: number;
    offset: number;
}
export interface IPaginatorRangeState {
    pageSize: number;
    pageIndex: number;
    offset: number;
    pageStart: number;
    pageEnd: number;
    total: number;
}
export type PaginatorRangeLabelBuilder = ((state: IPaginatorRangeState) => string) | undefined | null;
