/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { BaseComponent, IBaseComponent } from '../../core/base/base-component';
import { DrawerDirection } from './base-drawer-constants';
import { BaseDrawerCore } from './base-drawer-core';
export interface IBaseDrawerComponent extends IBaseComponent {
    open: boolean;
    direction: DrawerDirection;
}
declare global {
    interface HTMLElementEventMap {
        'forge-drawer-after-open': CustomEvent<void>;
        'forge-drawer-after-close': CustomEvent<void>;
    }
}
/**
 * @event {CustomEvent<void>} forge-drawer-after-open - Dispatched after the drawer has opened.
 * @event {CustomEvent<void>} forge-drawer-after-close - Dispatched after the drawer has closed.
 */
export declare abstract class BaseDrawerComponent<T extends BaseDrawerCore> extends BaseComponent implements IBaseDrawerComponent {
    static get observedAttributes(): string[];
    protected abstract _core: T;
    connectedCallback(): void;
    disconnectedCallback(): void;
    attributeChangedCallback(name: string, oldValue: string, newValue: string): void;
    /**
     * Toggles whether the drawer is visible or not.
     * @default false
     * @attribute
     */
    open: boolean;
    /**
     * Controls the layout and animation direction of the drawer for positioning on the left vs. right side of the screen when toggling the `open` attribute.
     * @default "left"
     * @attribute
     */
    direction: DrawerDirection;
}
