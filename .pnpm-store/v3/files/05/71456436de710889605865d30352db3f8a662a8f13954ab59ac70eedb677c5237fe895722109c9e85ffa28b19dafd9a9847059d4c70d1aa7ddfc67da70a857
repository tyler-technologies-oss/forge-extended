/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { BaseAdapter, IBaseAdapter } from '../../core/base/base-adapter';
import { IIconButtonComponent } from '../../icon-button';
import { IChipComponent } from './chip';
import { IChipState } from './chip-constants';
export interface IChipAdapter extends IBaseAdapter {
    readonly removeButtonElement: IIconButtonComponent | undefined;
    readonly isAnchor: boolean;
    clickTrigger(): void;
    addRootListener(type: string, listener: EventListener): void;
    removeRootListener(type: string, listener: EventListener): void;
    setAnchor(value: boolean): void;
    setAnchorProperty<T extends keyof HTMLAnchorElement>(name: T, value: HTMLAnchorElement[T]): void;
    setCheckmarkVisibility(value: boolean): void;
    setDeleteButtonVisibility(value: boolean): void;
    setStartSlotVisibility(value: boolean): void;
    toggleFieldVariant(value: boolean): void;
    getChipSetState(): IChipState | null;
    setDisabled(value: boolean): void;
    setSelected(value: boolean): void;
    focusTrigger(options?: FocusOptions): void;
    tryFocusRemoveButton(): void;
    clickRemoveButton(): void;
    animateStateLayer(): void;
}
export declare class ChipAdapter extends BaseAdapter<IChipComponent> implements IChipAdapter {
    protected _component: IChipComponent;
    private _rootElement;
    private _triggerElement;
    private _removeButtonElement;
    private _startSlotElement;
    private _checkmarkElement;
    private _focusIndicatorElement;
    private _stateLayerElement;
    constructor(_component: IChipComponent);
    get removeButtonElement(): IIconButtonComponent | undefined;
    get isAnchor(): boolean;
    clickTrigger(): void;
    addRootListener(type: string, listener: EventListener): void;
    removeRootListener(type: string, listener: EventListener): void;
    setAnchor(value: boolean): void;
    setAnchorProperty<T extends keyof HTMLAnchorElement>(name: T, value: HTMLAnchorElement[T]): void;
    setCheckmarkVisibility(value: boolean): void;
    setDisabled(value: boolean): void;
    setSelected(value: boolean): void;
    toggleFieldVariant(value: boolean): void;
    setDeleteButtonVisibility(value: boolean): void;
    setStartSlotVisibility(value: boolean): void;
    getChipSetState(): IChipState | null;
    focusTrigger(options?: FocusOptions): void;
    tryFocusRemoveButton(): void;
    clickRemoveButton(): void;
    animateStateLayer(): void;
    private _createRemoveButton;
    private _createAnchorElement;
    private _createButtonElement;
}
