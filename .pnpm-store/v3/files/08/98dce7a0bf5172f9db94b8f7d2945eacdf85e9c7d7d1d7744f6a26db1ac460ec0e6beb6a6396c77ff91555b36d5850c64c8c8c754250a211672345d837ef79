import { ElementRef, Renderer2, StaticProvider } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { IRadioComponent } from '@tylertech/forge';
import * as i0 from "@angular/core";
export declare const RADIO_VALUE_ACCESSOR: StaticProvider;
export declare class RadioValueAccessor implements ControlValueAccessor {
    private _elementRef;
    private _renderer;
    switchChange(evt: CustomEvent<void>): void;
    blur(): void;
    onChange: (_: any) => void;
    onTouched: () => void;
    constructor(_elementRef: ElementRef<IRadioComponent>, _renderer: Renderer2);
    writeValue(value: string): void;
    registerOnChange(fn: (_: string) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(value: boolean): void;
    change(value: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RadioValueAccessor, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<RadioValueAccessor, "forge-radio[formControlName],forge-radio[formControl],forge-radio[ngModel]", never, {}, {}, never, never, false, never>;
}
