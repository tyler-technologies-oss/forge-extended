export class EventAware {
    constructor() {
        this._listenerMap = new Map();
    }
    _emit(type, data) {
        const listeners = this._listenerMap.get(type);
        if (listeners && listeners.length) {
            listeners.forEach(cb => cb({ type, data }));
        }
    }
    hasListeners(type) {
        return type ? this._listenerMap.has(type) : this._listenerMap.size > 0;
    }
    addListener(type, listener) {
        if (!this._listenerMap.has(type)) {
            this._listenerMap.set(type, [listener]);
        }
        else {
            const listeners = this._listenerMap.get(type);
            if (listeners) {
                listeners.push(listener);
            }
        }
    }
    removeListener(type, listener) {
        const listeners = this._listenerMap.get(type);
        if (listeners && listeners.length && listeners.includes(listener)) {
            listeners.splice(listeners.indexOf(listener), 1);
            if (!listeners.length) {
                this._listenerMap.delete(type);
            }
        }
    }
}
