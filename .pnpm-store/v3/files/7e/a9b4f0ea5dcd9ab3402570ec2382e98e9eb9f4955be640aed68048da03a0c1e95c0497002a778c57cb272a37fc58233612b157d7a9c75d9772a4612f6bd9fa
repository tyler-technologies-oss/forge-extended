/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { FormFieldComponentDelegate, IFormFieldComponentDelegateOptions } from '../core';
import { IBaseComponentDelegateConfig } from '../core/delegates/base-component-delegate';
import { ISliderComponent } from '../slider';
import { ISliderChangeEventData, ISliderRangeChangeEventData } from './slider-constants';
export type SliderComponentDelegateProps = Partial<ISliderComponent>;
export interface ISliderComponentDelegateOptions extends IFormFieldComponentDelegateOptions {
}
export interface ISliderComponentDelegateConfig extends IBaseComponentDelegateConfig<ISliderComponent, ISliderComponentDelegateOptions> {
}
export declare class SliderComponentDelegate extends FormFieldComponentDelegate<ISliderComponent, ISliderComponentDelegateOptions> {
    constructor(config?: ISliderComponentDelegateConfig);
    get value(): number;
    set value(value: number);
    get valueStart(): number;
    set valueStart(value: number);
    get valueEnd(): number;
    set valueEnd(value: number);
    get disabled(): boolean;
    set disabled(value: boolean);
    get min(): number;
    set min(value: number);
    get max(): number;
    set max(value: number);
    get step(): number;
    get range(): boolean;
    set range(value: boolean);
    get tickmarks(): boolean;
    set tickmarks(value: boolean);
    get labeled(): boolean;
    set labeled(value: boolean);
    get labelBuilder(): (value: number, which?: 'start' | 'end') => string;
    set labelBuilder(value: (value: number, which?: 'start' | 'end') => string);
    onInput(listener: (value: ISliderChangeEventData) => void): void;
    onChange(listener: (value: ISliderChangeEventData) => void): void;
    onRangeInput(listener: (value: ISliderRangeChangeEventData) => void): void;
    onRangeChange(listener: (value: ISliderRangeChangeEventData) => void): void;
    onFocus(listener: (evt: Event) => void): void;
    onBlur(listener: (evt: Event) => void): void;
    protected _build(): ISliderComponent;
}
