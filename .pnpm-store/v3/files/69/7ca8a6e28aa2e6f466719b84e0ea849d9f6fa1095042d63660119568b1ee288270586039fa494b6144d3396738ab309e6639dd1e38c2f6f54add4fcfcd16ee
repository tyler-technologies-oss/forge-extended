/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { BaseAdapter, IBaseAdapter } from '../core/base/base-adapter';
import { IExpansionPanelComponent } from './expansion-panel';
export interface IExpansionPanelAdapter extends IBaseAdapter {
    setAnimationCompleteListener(listener: () => void): void;
    addHeaderListener(type: keyof HTMLElementEventMap, listener: EventListener): void;
    tryToggleOpenIcon(value: boolean): void;
    setContentVisibility(visible: boolean): void;
    animationStart(): void;
    animationEnd(): void;
}
export declare class ExpansionPanelAdapter extends BaseAdapter<IExpansionPanelComponent> implements IExpansionPanelAdapter {
    private _headerElement;
    private _contentElement;
    private _innerElement;
    private _transitionStartListener;
    private _transitionEndListener;
    private _transitionCompleteListener;
    constructor(component: IExpansionPanelComponent);
    setAnimationCompleteListener(listener: () => void): void;
    addHeaderListener(type: keyof HTMLElementEventMap, listener: EventListener): void;
    tryToggleOpenIcon(value: boolean): void;
    setContentVisibility(visible: boolean): void;
    private _onTransitionStart;
    private _onTransitionEnd;
    animationStart(): void;
    animationEnd(): void;
}
