/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { IBaseComponentDelegateConfig } from '../core/delegates/base-component-delegate';
import { FormFieldComponentDelegate, IFormFieldComponentDelegateOptions } from '../core/delegates/form-field-component-delegate';
import { IChipFieldComponent } from './chip-field';
export type ChipFieldComponentDelegateProps = Partial<IChipFieldComponent>;
export interface IChipFieldComponentDelegateOptions extends IFormFieldComponentDelegateOptions {
    id?: string;
    label?: string;
    type?: string;
    value?: string;
    helperText?: string;
    placeholder?: string;
    leadingElement?: HTMLElement;
    trailingElement?: HTMLElement;
}
export interface IChipFieldComponentDelegateConfig extends IBaseComponentDelegateConfig<IChipFieldComponent, IChipFieldComponentDelegateOptions> {
}
export declare class ChipFieldComponentDelegate extends FormFieldComponentDelegate<IChipFieldComponent, IChipFieldComponentDelegateOptions> {
    private _inputElement;
    private _labelElement;
    private _helperTextElement;
    constructor(config?: IChipFieldComponentDelegateConfig);
    protected _build(): IChipFieldComponent;
    protected _configure(): void;
    get value(): string;
    set value(value: string);
    get disabled(): boolean;
    set disabled(value: boolean);
    get invalid(): boolean;
    set invalid(value: boolean);
    get inputElement(): HTMLInputElement;
    get labelElement(): HTMLLabelElement | undefined;
    onChange(listener: (value: string) => void): void;
    onFocus(listener: (evt: Event) => void): void;
    onBlur(listener: (evt: Event) => void): void;
    setLabel(text: string | null): void;
    setHelperText(text: string | null): void;
    floatLabel(value: boolean): void;
    private _createLabel;
    private _buildInputElement;
}
