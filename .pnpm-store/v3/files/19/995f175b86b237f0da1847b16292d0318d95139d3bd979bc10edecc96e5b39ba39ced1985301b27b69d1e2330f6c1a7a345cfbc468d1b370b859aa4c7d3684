/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { __decorate } from "tslib";
import { coerceBoolean, coreProperty } from '@tylertech/forge-core';
import { BaseComponent } from '../../core/base/base-component';
import { BASE_DRAWER_CONSTANTS } from './base-drawer-constants';
/**
 * @event {CustomEvent<void>} forge-drawer-after-open - Dispatched after the drawer has opened.
 * @event {CustomEvent<void>} forge-drawer-after-close - Dispatched after the drawer has closed.
 */
export class BaseDrawerComponent extends BaseComponent {
    static get observedAttributes() {
        return Object.values(BASE_DRAWER_CONSTANTS.observedAttributes);
    }
    connectedCallback() {
        this._core.initialize();
    }
    disconnectedCallback() {
        this._core.destroy();
    }
    attributeChangedCallback(name, oldValue, newValue) {
        switch (name) {
            case BASE_DRAWER_CONSTANTS.observedAttributes.OPEN:
                this.open = coerceBoolean(newValue);
                break;
            case BASE_DRAWER_CONSTANTS.observedAttributes.DIRECTION:
                this.direction = newValue;
                break;
        }
    }
}
__decorate([
    coreProperty()
], BaseDrawerComponent.prototype, "open", void 0);
__decorate([
    coreProperty()
], BaseDrawerComponent.prototype, "direction", void 0);
