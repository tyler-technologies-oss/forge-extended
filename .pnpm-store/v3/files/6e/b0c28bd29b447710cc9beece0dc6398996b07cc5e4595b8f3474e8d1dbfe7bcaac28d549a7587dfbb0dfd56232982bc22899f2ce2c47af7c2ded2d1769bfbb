/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { getShadowElement } from '@tylertech/forge-core';
import { setDefaultAria } from '../constants';
import { BaseAdapter } from '../core/base/base-adapter';
import { LINEAR_PROGRESS_CONSTANTS } from './linear-progress-constants';
export class LinearProgressAdapter extends BaseAdapter {
    constructor(component) {
        super(component);
        this._rootElement = getShadowElement(component, LINEAR_PROGRESS_CONSTANTS.selectors.ROOT);
        this._trackElement = getShadowElement(component, LINEAR_PROGRESS_CONSTANTS.selectors.TRACK);
        this._progressElement = getShadowElement(component, LINEAR_PROGRESS_CONSTANTS.selectors.PROGRESS);
    }
    initialize() {
        this._component[setDefaultAria]({
            role: 'progressbar',
            ariaValueMin: '0',
            ariaValueMax: '1',
            ariaValueNow: this._component.determinate ? `${this._component.progress}` : null
        });
    }
    setDeterminate(value) {
        this._component[setDefaultAria]({ ariaValueNow: value ? `${this._component.progress}` : null });
        if (value) {
            this.setProgress(this._component.progress);
        }
        else {
            this._trackElement.style.transform = 'scaleX(100%)';
            this._progressElement.style.transform = '';
        }
        this._rootElement.classList.toggle(LINEAR_PROGRESS_CONSTANTS.classes.INDETERMINATE, !value);
    }
    setProgress(value) {
        this._component[setDefaultAria]({ ariaValueNow: `${value}` });
        this._progressElement.style.transform = `scaleX(${value * 100}%)`;
    }
    setBuffer(value) {
        this._trackElement.style.transform = `scaleX(${value * 100}%)`;
    }
}
