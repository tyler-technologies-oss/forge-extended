/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { internals } from '../../constants';
import { BaseComponent, IBaseComponent } from './base-component';
export interface IBaseFormComponent<T = string> extends IBaseComponent {
    value: T;
    disabled: boolean;
    readonly: boolean;
    name: string;
    readonly form: HTMLFormElement | null;
    readonly labels: NodeList;
    readonly [internals]: ElementInternals;
    formResetCallback(): void;
    formStateRestoreCallback(state: unknown, reason: 'restore' | 'autocomplete'): void;
    formDisabledCallback(isDisabled: boolean): void;
}
/**
 * Any form associated Custom HTML element.
 */
export declare abstract class BaseFormComponent<T = string> extends BaseComponent implements IBaseFormComponent<T> {
    static formAssociated: boolean;
    /** @ignore */
    abstract value: T;
    /** @ignore */
    abstract disabled: boolean;
    /** @ignore */
    abstract readonly: boolean;
    /** @ignore */
    abstract name: string;
    /** @ignore */
    abstract get form(): HTMLFormElement | null;
    /** @ignore */
    abstract get labels(): NodeList;
    /** @ignore */
    abstract get [internals](): ElementInternals;
    /** @ignore */
    abstract formResetCallback(): void;
    /** @ignore */
    abstract formStateRestoreCallback(state: unknown, reason: 'restore' | 'autocomplete'): void;
    /** @ignore */
    abstract formDisabledCallback(isDisabled: boolean): void;
}
