/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { BaseAdapter, IBaseAdapter } from '../core';
import { ISwitchComponent } from './switch';
import { SwitchIconVisibility, SwitchLabelPosition } from './switch-constants';
export interface ISwitchAdapter extends IBaseAdapter {
    setOn(value: boolean): void;
    setDisabled(value: boolean): void;
    setRequired(value: boolean): void;
    setReadonly(value: boolean): void;
    setIconVisibility(value: SwitchIconVisibility): void;
    setLabelPosition(value: SwitchLabelPosition): void;
    syncValue(value: string | null): void;
}
export declare class SwitchAdapter extends BaseAdapter<ISwitchComponent> implements ISwitchAdapter {
    private readonly _rootElement;
    private readonly _labelElement;
    private readonly _iconOnElement;
    private readonly _iconOffElement;
    private readonly _stateLayerElement;
    constructor(component: ISwitchComponent);
    setOn(value: boolean): void;
    setDisabled(value: boolean): void;
    setRequired(value: boolean): void;
    setReadonly(value: boolean): void;
    setIconVisibility(value: SwitchIconVisibility): void;
    setLabelPosition(value: SwitchLabelPosition): void;
    syncValue(value: string | null): void;
}
