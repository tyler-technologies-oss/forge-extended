{"version":3,"file":"imask.js","sources":["../src/core/holder.js","../src/core/change-details.js","../src/core/utils.js","../src/core/action-details.js","../src/core/continuous-tail-details.js","../src/masked/base.js","../src/masked/factory.js","../src/masked/pattern/input-definition.js","../src/masked/pattern/fixed-definition.js","../src/masked/pattern/chunk-tail-details.js","../src/masked/pattern/cursor.js","../src/masked/regexp.js","../src/masked/pattern.js","../src/masked/range.js","../src/masked/date.js","../src/controls/mask-element.js","../src/controls/html-mask-element.js","../src/controls/html-contenteditable-mask-element.js","../src/controls/input.js","../src/masked/enum.js","../src/masked/number.js","../src/masked/function.js","../src/masked/dynamic.js","../src/masked/pipe.js","../src/index.js"],"sourcesContent":["/**\n * Applies mask on element.\n * @constructor\n * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\n * @param {Object} opts - Custom mask options\n * @return {InputMask}\n */\nexport default\nfunction IMask (el, opts={}) {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n","// @flow\n\n\nimport IMask from \"./holder\";\n\n/**\n  Provides details of changing model value\n  @param {Object} [details]\n  @param {string} [details.inserted] - Inserted symbols\n  @param {boolean} [details.skip] - Can skip chars\n  @param {number} [details.removeCount] - Removed symbols count\n  @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\n*/\nexport default\nclass ChangeDetails {\n  /** Inserted symbols */\n  inserted: string;\n  /** Can skip chars */\n  skip: boolean;\n  /** Additional offset if any changes occurred before tail */\n  tailShift: number;\n  /** Raw inserted is used by dynamic mask */\n  rawInserted: string;\n\n  constructor (details?: {\n    inserted?: $PropertyType<ChangeDetails, 'inserted'>,\n    rawInserted?: $PropertyType<ChangeDetails, 'rawInserted'>,\n    skip?: $PropertyType<ChangeDetails, 'skip'>,\n    tailShift?: $PropertyType<ChangeDetails, 'tailShift'>,\n  }) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      skip: false,\n      tailShift: 0,\n    }, details);\n  }\n\n  /**\n    Aggregate changes\n    @returns {ChangeDetails} `this`\n  */\n  aggregate (details: ChangeDetails): ChangeDetails {\n    this.rawInserted += details.rawInserted;\n    this.skip = this.skip || details.skip;\n    this.inserted += details.inserted;\n    this.tailShift += details.tailShift;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset (): number {\n    return this.tailShift + this.inserted.length;\n  }\n}\n\nIMask.ChangeDetails = ChangeDetails;\n","// @flow\nimport ChangeDetails from './change-details.js';\n\n\n/** Checks if value is string */\nexport\nfunction isString (str: mixed): boolean %checks {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/**\n  Direction\n  @prop {string} NONE\n  @prop {string} LEFT\n  @prop {string} FORCE_LEFT\n  @prop {string} RIGHT\n  @prop {string} FORCE_RIGHT\n*/\nexport\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT',\n}\n/**\n  Direction\n  @enum {string}\n*/\nexport\ntype Direction = $Values<typeof DIRECTION>;\n\n/** Returns next char index in direction */\nexport\nfunction indexInDirection (pos: number, direction: Direction): number {\n  if (direction === DIRECTION.LEFT) --pos;\n  return pos;\n}\n\n/** Returns next char position in direction */\nexport\nfunction posInDirection (pos: number, direction: Direction): number {\n  switch (direction) {\n    case DIRECTION.LEFT:\n    case DIRECTION.FORCE_LEFT:\n      return --pos;\n    case DIRECTION.RIGHT:\n    case DIRECTION.FORCE_RIGHT:\n      return ++pos;\n    default:\n      return pos;\n  }\n}\n\n/** */\nexport\nfunction forceDirection (direction: Direction): Direction {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nexport\nfunction escapeRegExp (str: string): string {\n  return str.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\n\nexport\nfunction normalizePrepare (prep: string | [string, ChangeDetails]): [string, ChangeDetails] {\n  return Array.isArray(prep) ? prep : [\n    prep,\n    new ChangeDetails(),\n  ];\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nexport\nfunction objectIncludes (b: any, a: any): boolean {\n  if (a === b) return true;\n\n  var arrA = Array.isArray(a)\n    , arrB = Array.isArray(b)\n    , i;\n\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++)\n      if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n\n  if (arrA != arrB) return false;\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n\n    var keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++)\n      // $FlowFixMe ... ???\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = 0; i < keys.length; i++)\n      if(!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n      return a.toString() === b.toString()\n  }\n\n  return false;\n}\n\n/** Selection range */\nexport\ntype Selection = {\n  start: number;\n  end: number;\n};\n","// @flow\nimport {type Direction, type Selection, DIRECTION} from './utils.js';\n\n\n/** Provides details of changing input */\nexport default\nclass ActionDetails {\n  /** Current input value */\n  value: string;\n  /** Current cursor position */\n  cursorPos: number;\n  /** Old input value */\n  oldValue: string;\n  /** Old selection */\n  oldSelection: Selection;\n\n  constructor (\n    value: string,\n    cursorPos: number,\n    oldValue: string,\n    oldSelection: Selection\n  ) {\n    this.value = value;\n    this.cursorPos = cursorPos;\n    this.oldValue = oldValue;\n    this.oldSelection = oldSelection;\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n  }\n\n  /**\n    Start changing position\n    @readonly\n  */\n  get startChangePos (): number {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /**\n    Inserted symbols count\n    @readonly\n  */\n  get insertedCount (): number {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /**\n    Inserted symbols\n    @readonly\n  */\n  get inserted (): string {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /**\n    Removed symbols count\n    @readonly\n  */\n  get removedCount (): number {\n    // Math.max for opposite operation\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\n      // for Delete\n      this.oldValue.length - this.value.length, 0);\n  }\n\n  /**\n    Removed symbols\n    @readonly\n  */\n  get removed (): string {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /**\n    Unchanged head symbols\n    @readonly\n  */\n  get head (): string {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /**\n    Unchanged tail symbols\n    @readonly\n  */\n  get tail (): string {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /**\n    Remove direction\n    @readonly\n  */\n  get removeDirection (): Direction {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (\n      (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n      // if not range removed (event with backspace)\n      this.oldSelection.end === this.oldSelection.start\n    ) ?\n      DIRECTION.RIGHT :\n      DIRECTION.LEFT;\n  }\n}\n","// @flow\nimport type { TailDetails, AppendTail } from './tail-details.js';\nimport type ChangeDetails from './change-details.js';\n\n\ntype ContinuousTailState = {\n  value: $PropertyType<ContinuousTailDetails, 'value'>,\n  from: $PropertyType<ContinuousTailDetails, 'from'>,\n  stop?: $PropertyType<ContinuousTailDetails, 'stop'>,\n};\n\n/** Provides details of continuous extracted tail */\nexport default\nclass ContinuousTailDetails implements TailDetails {\n  /** Tail value as string */\n  value: string;\n  /** Tail start position */\n  from: number;\n  /** Start position */\n  stop: ?number;\n\n  constructor (value?: string='', from?: number=0, stop?: number) {\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n\n  toString (): string { return this.value; }\n\n  extend (tail: string | TailDetails): void {\n    this.value += String(tail);\n  }\n\n  appendTo (masked: AppendTail): ChangeDetails {\n    return masked.append(this.toString(), { tail: true })\n      .aggregate(masked._appendPlaceholder());\n  }\n\n  get state (): ContinuousTailState {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop,\n    };\n  }\n\n  set state (state: ContinuousTailState) {\n    Object.assign(this, state);\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.value.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n\n  shift (): string {\n    if (!this.value.length) return '';\n\n    const shiftChar = this.value[this.value.length-1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n","// @flow\nimport ChangeDetails from '../core/change-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { type Direction, DIRECTION, isString, normalizePrepare, forceDirection } from '../core/utils.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport IMask from '../core/holder.js';\n\n\n/** Supported mask type */\nexport\ntype Mask =\n  string |\n  String |\n  RegExp |\n  Class<Number> |\n  Class<Date> |\n  Array<any> |\n  $PropertyType<Masked<*>, 'validate'> |\n  Masked<*> |\n  Class<Masked<*>>;\n\nexport\ntype MaskedState = {|\n  _value: string,\n|};\n\n/** Append flags */\nexport\ntype AppendFlags = {\n  input?: boolean,\n  tail?: boolean,\n  raw?: boolean,\n  _beforeTailState?: any,  // TODO types...\n};\n\n/** Extract flags */\nexport\ntype ExtractFlags = {\n  raw?: boolean\n};\n\nexport\ntype MaskedOptions<MaskType> = {\n  mask: $PropertyType<Masked<MaskType>, 'mask'>,\n  parent?: $PropertyType<Masked<*>, 'parent'>,\n  prepare?: $PropertyType<Masked<MaskType>, 'prepare'>,\n  validate?: $PropertyType<Masked<MaskType>, 'validate'>,\n  commit?: $PropertyType<Masked<MaskType>, 'commit'>,\n  overwrite?: $PropertyType<Masked<MaskType>, 'overwrite'>,\n  eager?: $PropertyType<Masked<MaskType>, 'eager'>,\n  format?: $PropertyType<Masked<MaskType>, 'format'>,\n  parse?: $PropertyType<Masked<MaskType>, 'parse'>,\n  skipInvalid?: $PropertyType<Masked<MaskType>, 'skipInvalid'>,\n};\n\n\n/** Provides common masking stuff */\nexport default\nclass Masked<MaskType> {\n  static DEFAULTS: any; // $Shape<MaskedOptions>; TODO after fix https://github.com/facebook/flow/issues/4773\n  static EMPTY_VALUES: any;\n\n  /** @type {Mask} */\n  mask: MaskType;\n  /** */ // $FlowFixMe no ideas\n  parent: ?Masked<*>;\n  /** Transforms value before mask processing */\n  prepare: (string, Masked<MaskType>, AppendFlags) => string | [string, ChangeDetails];\n  /** Validates if value is acceptable */\n  validate: (string, Masked<MaskType>, AppendFlags) => boolean;\n  /** Does additional processing in the end of editing */\n  commit: (string, Masked<MaskType>) => void;\n  /** Format typed value to string */\n  format: (any, Masked<MaskType>) => string;\n  /** Parse strgin to get typed value */\n  parse: (string, Masked<MaskType>) => any;\n  /** Enable characters overwriting */\n  overwrite: ?boolean | 'shift';\n  /** */\n  eager: boolean | 'remove' | 'append';\n  /** */\n  skipInvalid: boolean;\n  /** */\n  isInitialized: boolean;\n  _value: string;\n  _refreshing: ?boolean;\n  _isolated: ?boolean;\n\n  constructor (opts: {[string]: any}) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts,\n    });\n    this.isInitialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions (opts: {[string]: any}) {\n    if (!Object.keys(opts).length) return;\n    // $FlowFixMe\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /**\n    Sets new options\n    @protected\n  */\n  _update (opts: {[string]: any}) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state (): any {\n    return {\n      _value: this.value,\n    };\n  }\n\n  set state (state: any) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset () {\n    this._value = '';\n  }\n\n  /** */\n  get value (): string {\n    return this._value;\n  }\n\n  set value (value: string) {\n    this.resolve(value);\n  }\n\n  /** Resolve new value */\n  resolve (value: string, flags: AppendFlags = {input: true}): string {\n    this.reset();\n    this.append(value, flags, '');\n    this.doCommit();\n    return this.value;\n  }\n\n  /** */\n  get unmaskedValue (): string {\n    return this.value;\n  }\n\n  set unmaskedValue (value: string) {\n    this.reset();\n    this.append(value, {}, '');\n    this.doCommit();\n  }\n\n  /** */\n  get typedValue (): any {\n    return this.doParse(this.value);\n  }\n\n  set typedValue (value: any) {\n    this.value = this.doFormat(value);\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue (): string {\n    return this.extractInput(0, this.value.length, {raw: true});\n  }\n\n  set rawInputValue (value: string) {\n    this.reset();\n    this.append(value, {raw: true}, '');\n    this.doCommit();\n  }\n\n  get displayValue (): string {\n    return this.value;\n  }\n\n  /** */\n  get isComplete (): boolean {\n    return true;\n  }\n\n  /** */\n  get isFilled (): boolean {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\n    return cursorPos;\n  }\n\n  totalInputPositions (fromPos?: number=0, toPos?: number=this.value.length): number {\n    return Math.min(this.value.length, toPos - fromPos);\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    return this.value.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): TailDetails {\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  // $FlowFixMe no ideas\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return tail.appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!ch) return new ChangeDetails();\n\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch,\n    });\n  }\n\n  /** Appends char */\n  _appendChar (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): ChangeDetails {\n    const consistentState: MaskedState = this.state;\n    let details: ChangeDetails;\n    [ch, details] = normalizePrepare(this.doPrepare(ch, flags));\n\n    details = details.aggregate(this._appendCharRaw(ch, flags));\n\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          checkTail.unshift(this.value.length - details.tailShift);\n        }\n\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted === checkTail.toString();\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          checkTail.shift();\n\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted === checkTail.toString();\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at end */\n  _appendPlaceholder (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at end */\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  // $FlowFixMe no ideas\n  append (str: string, flags?: AppendFlags, tail?: string | String | TailDetails): ChangeDetails {\n    if (!isString(str)) throw new Error('value should be string');\n    const details = new ChangeDetails();\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n    if (flags?.tail) flags._beforeTailState = this.state;\n\n    for (let ci=0; ci<str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n\n    if ((this.eager === true || this.eager === 'append') && flags?.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n\n    return details;\n  }\n\n  /** */\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    this._value = this.value.slice(0, fromPos) + this.value.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh<T>(fn: () => T): T {\n    if (this._refreshing || !this.isInitialized) return fn();\n    this._refreshing = true;\n\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n\n    const ret = fn();\n\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.value.length), {}, '');\n    }\n\n    delete this._refreshing;\n    return ret;\n  }\n\n  /** */\n  runIsolated<T>(fn: (masked: any) => T): T {\n    if (this._isolated || !this.isInitialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n\n    const ret = fn(this);\n\n    this.state = state;\n    delete this._isolated;\n\n    return ret;\n  }\n\n  /** */\n  doSkipInvalid (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): boolean {\n    return this.skipInvalid;\n  }\n\n  /**\n    Prepares string before mask processing\n    @protected\n  */\n  doPrepare (str: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    return this.prepare ?\n      this.prepare(str, this, flags) :\n      str;\n  }\n\n  /**\n    Validates if value is acceptable\n    @protected\n  */\n  doValidate (flags: AppendFlags): boolean {\n    return (!this.validate || this.validate(this.value, this, flags)) &&\n      (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /**\n    Does additional processing in the end of editing\n    @protected\n  */\n  doCommit () {\n    if (this.commit) this.commit(this.value, this);\n  }\n\n  /** */\n  doFormat (value: any): string {\n    return this.format ? this.format(value, this) : value;\n  }\n\n  /** */\n  doParse (str: string): any {\n    return this.parse ? this.parse(str, this) : str;\n  }\n\n  /** */\n  splice (start: number, deleteCount: number, inserted: string, removeDirection: Direction, flags: AppendFlags = { input: true }): ChangeDetails {\n    const tailPos: number = start + deleteCount;\n    const tail: TailDetails = this.extractTail(tailPos);\n\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n\n    let oldRawValue;\n    if (eagerRemove)  {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {raw: true});\n    }\n\n    let startChangePos: number = start;\n    const details: ChangeDetails = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start,\n        deleteCount > 1 && start !== 0 && !eagerRemove ?\n        DIRECTION.NONE :\n        removeDirection\n      );\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n\n    details.aggregate(this.remove(startChangePos));\n\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.value.length)) {\n          details\n            .aggregate(new ChangeDetails({ tailShift: -1 }))\n            .aggregate(this.remove(valLength-1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n\n  maskEquals (mask: any): boolean {\n    return this.mask === mask;\n  }\n\n  typedValueEquals (value: any): boolean {\n    const tval = this.typedValue;\n\n    return value === tval ||\n      Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) ||\n      this.doFormat(value) === this.doFormat(this.typedValue);\n  }\n}\nMasked.DEFAULTS = {\n  format: String,\n  parse: v => v,\n  skipInvalid: true,\n};\nMasked.EMPTY_VALUES = [undefined, null, ''];\n\n\nIMask.Masked = Masked;\n","// @flow\nimport { isString } from '../core/utils.js';\nimport type Masked from './base.js';\nimport { type Mask } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Get Masked class by mask type */\nexport\nfunction maskedClass (mask: Mask): Class<Masked<*>> {\n  if (mask == null) {\n    throw new Error('mask property should be defined');\n  }\n\n  // $FlowFixMe\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  // $FlowFixMe\n  if (isString(mask)) return IMask.MaskedPattern;\n  // $FlowFixMe\n  if (mask instanceof Date || mask === Date) return IMask.MaskedDate;\n  // $FlowFixMe\n  if (mask instanceof Number || typeof mask === 'number' || mask === Number) return IMask.MaskedNumber;\n  // $FlowFixMe\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  // $FlowFixMe\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n  // $FlowFixMe\n  if (mask instanceof IMask.Masked) return mask.constructor;\n  // $FlowFixMe\n  if (mask instanceof Function) return IMask.MaskedFunction;\n\n  console.warn('Mask not found for mask', mask);  // eslint-disable-line no-console\n  // $FlowFixMe\n  return IMask.Masked;\n}\n\n/** Creates new {@link Masked} depending on mask type */\nexport default\nfunction createMask (opts: {mask: Mask} | Masked<*>): Masked<*> {\n  // $FlowFixMe\n  if (IMask.Masked && (opts instanceof IMask.Masked)) return opts;\n\n  opts = {...opts};\n  const mask = opts.mask;\n\n  // $FlowFixMe\n  if (IMask.Masked && (mask instanceof IMask.Masked)) return mask;\n\n  const MaskedClass = maskedClass(mask);\n  if (!MaskedClass) throw new Error('Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.');\n  return new MaskedClass(opts);\n}\n\n\nIMask.createMask = createMask;\n","// @flow\nimport createMask from '../factory.js';\nimport type Masked from '../base.js';\nimport type MaskedPattern from '../pattern.js';\nimport { type TailDetails } from '../../core/tail-details.js';\nimport { type Mask, type ExtractFlags, type AppendFlags } from '../base.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, type Direction } from '../../core/utils.js';\nimport { type PatternBlock } from './block.js';\n\n\nexport\ntype Definitions = {\n  [string]: any, // TODO\n};\n\n/** */\ntype PatternInputDefinitionOptions = {\n  parent: $PropertyType<PatternInputDefinition, 'parent'>,\n  isOptional: $PropertyType<PatternInputDefinition, 'isOptional'>,\n  lazy: $PropertyType<PatternInputDefinition, 'lazy'>,\n  eager: $PropertyType<PatternInputDefinition, 'eager'>,\n  placeholderChar: $PropertyType<PatternInputDefinition, 'placeholderChar'>,\n  displayChar: $PropertyType<PatternInputDefinition, 'displayChar'>,\n  mask: Mask,\n  [string]: any, // TODO\n};\n\ntype PatternInputDefinitionState = {\n  masked: *,\n  isFilled: boolean,\n};\n\nexport\nconst DEFAULT_INPUT_DEFINITIONS: { [string]: RegExp } = {\n  '0': /\\d/,\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\n  '*': /./\n};\n\n\n/** */\nexport default\nclass PatternInputDefinition implements PatternBlock {\n  /** */\n  +masked: Masked<*>;\n  /** */\n  parent: Masked<*>;\n  /** */\n  isOptional: boolean;\n  /** */\n  isFilled: boolean;\n  /** */\n  lazy: $PropertyType<MaskedPattern, 'lazy'>;\n  /** */\n  eager: $PropertyType<Masked<string>, 'eager'>;\n  /** */\n  placeholderChar: $PropertyType<MaskedPattern, 'placeholderChar'>;\n  /** */\n  displayChar: $PropertyType<MaskedPattern, 'displayChar'>;\n\n\n  constructor(opts: PatternInputDefinitionOptions) {\n    const { parent, isOptional, placeholderChar, displayChar, lazy, eager, ...maskOpts } = opts;\n\n    this.masked = createMask(maskOpts);\n    Object.assign(this, { parent, isOptional, placeholderChar, displayChar, lazy, eager });\n  }\n\n  reset () {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n\n    return new ChangeDetails();\n  }\n\n  get value (): string {\n    return this.masked.value ||\n      (this.isFilled && !this.isOptional ?\n        this.placeholderChar :\n        '');\n  }\n\n  get unmaskedValue (): string {\n    return this.masked.unmaskedValue;\n  }\n\n  get displayValue (): string {\n    return this.masked.value && this.displayChar || this.value;\n  }\n\n  get isComplete (): boolean {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n\n  _appendChar (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (this.isFilled) return new ChangeDetails();\n\n    const state = this.masked.state;\n    // simulate input\n    const details = this.masked._appendChar(ch, flags);\n\n    if (details.inserted && this.doValidate(flags) === false) {\n      details.inserted = details.rawInserted = '';\n      this.masked.state = state;\n    }\n\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n\n    return details;\n  }\n\n  append (...args: *): ChangeDetails {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(...args);\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this.isFilled || this.isOptional) return details;\n\n    this.isFilled = true;\n    details.inserted = this.placeholderChar;\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  extractTail (...args: *): TailDetails {\n    return this.masked.extractTail(...args);\n  }\n\n  appendTail (...args: *): ChangeDetails {\n    return this.masked.appendTail(...args);\n  }\n\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default: return boundPos;\n    }\n  }\n\n  totalInputPositions (fromPos?: number=0, toPos?: number=this.value.length): number {\n    return this.value.slice(fromPos, toPos).length;\n  }\n\n  doValidate (...args: *): boolean {\n    return this.masked.doValidate(...args) && (\n      !this.parent || this.parent.doValidate(...args));\n  }\n\n  doCommit () {\n    this.masked.doCommit();\n  }\n\n  get state (): PatternInputDefinitionState {\n    return {\n      masked: this.masked.state,\n      isFilled: this.isFilled,\n    };\n  }\n\n  set state (state: PatternInputDefinitionState) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n}\n","// @flow\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, type Direction, isString } from '../../core/utils.js';\nimport { type TailDetails } from '../../core/tail-details.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport { type ExtractFlags, type AppendFlags, type MaskedState } from '../base.js';\nimport { type PatternBlock } from './block.js';\n\n\n/** */\ntype PatternFixedDefinitionOptions = {\n  char: $PropertyType<PatternFixedDefinition, 'char'>,\n  isUnmasking?: $PropertyType<PatternFixedDefinition, 'isUnmasking'>,\n};\n\ntype PatternFixedDefinitionState = {|\n  ...MaskedState,\n  _isRawInput: ?boolean,\n|};\n\nexport default\nclass PatternFixedDefinition implements PatternBlock {\n  /** */\n  _value: string;\n  /** */\n  char: string;\n  /** */\n  isUnmasking: ?boolean;\n  /** */\n  eager: boolean | 'remove' | 'append';\n  /** */\n  _isRawInput: ?boolean;\n  /** */\n  isFixed: boolean;\n\n  constructor(opts: PatternFixedDefinitionOptions) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n\n  get value (): string {\n    return this._value;\n  }\n\n  get unmaskedValue (): string {\n    return this.isUnmasking ? this.value : '';\n  }\n\n  get displayValue (): string {\n    return this.value;\n  }\n\n  reset () {\n    this._isRawInput = false;\n    this._value = '';\n  }\n\n  remove (fromPos?: number=0, toPos?: number=this._value.length): ChangeDetails {\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n\n    return new ChangeDetails();\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this._value.length;\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n\n  totalInputPositions (fromPos?: number=0, toPos?: number=this._value.length): number {\n    return this._isRawInput ? (toPos - fromPos) : 0;\n  }\n\n  extractInput (fromPos?: number=0, toPos?: number=this._value.length, flags?: ExtractFlags={}): string {\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n\n  get isComplete (): boolean {\n    return true;\n  }\n\n  get isFilled (): boolean {\n    return Boolean(this._value);\n  }\n\n  _appendChar (ch: string, flags?: AppendFlags={}): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this.isFilled) return details;\n    const appendEager = this.eager === true || this.eager === 'append';\n\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    if (isResolved) details.rawInserted = this.char;\n    this._value = details.inserted = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return this._appendChar(this.char, { tail: true });\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n\n    this._value = details.inserted = this.char;\n    return details;\n  }\n\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): TailDetails {\n    return new ContinuousTailDetails('');\n  }\n\n  // $FlowFixMe no ideas\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return tail.appendTo(this);\n  }\n\n  append (str: string, flags?: AppendFlags, tail?: TailDetails): ChangeDetails {\n    const details = this._appendChar(str[0], flags);\n\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n\n    return details;\n  }\n\n  doCommit () {}\n\n  get state (): PatternFixedDefinitionState {\n    return {\n      _value: this._value,\n      _isRawInput: this._isRawInput,\n    };\n  }\n\n  set state (state: PatternFixedDefinitionState) {\n    Object.assign(this, state);\n  }\n}\n","// @flow\nimport type { TailDetails, AppendTail } from '../../core/tail-details.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\n\ntype ChunksTailState = {\n  chunks: $PropertyType<ChunksTailDetails, 'chunks'>,\n  from: $PropertyType<ChunksTailDetails, 'from'>,\n  stop?: $PropertyType<ChunksTailDetails, 'stop'>,\n  blockIndex?: $PropertyType<ChunksTailDetails, 'blockIndex'>,\n};\n\nexport default\nclass ChunksTailDetails implements TailDetails {\n  chunks: Array<TailDetails>;\n  from: number;\n  stop: ?number;\n  /** */\n  blockIndex: ?number;\n\n  constructor (chunks?: Array<TailDetails>=[], from?: number=0) {\n    this.chunks = chunks;\n    this.from = from;\n  }\n\n  toString (): string {\n    return this.chunks.map(String).join('');\n  }\n\n  // $FlowFixMe no ideas\n  extend (tailChunk: string | String | TailDetails): void {\n    if (!String(tailChunk)) return;\n    if (isString(tailChunk)) tailChunk = new ContinuousTailDetails(String(tailChunk));\n\n    const lastChunk = this.chunks[this.chunks.length-1];\n    const extendLast = lastChunk &&\n      // if stops are same or tail has no stop\n      (lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n      // if tail chunk goes just after last chunk\n      tailChunk.from === (lastChunk.from + lastChunk.toString().length);\n\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift();\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n\n  appendTo (masked: AppendTail): ChangeDetails {\n    // $FlowFixMe\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n\n    const details = new ChangeDetails();\n\n    for (let ci=0; ci < this.chunks.length && !details.skip; ++ci) {\n      const chunk = this.chunks[ci];\n\n      const lastBlockIter = masked._mapPosToBlock(masked.value.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null &&\n        // if block not found or stop is behind lastBlock\n        (!lastBlockIter || lastBlockIter.index <= stop)\n      ) {\n        if (\n          chunk instanceof ChunksTailDetails ||\n          // for continuous block also check if stop is exist\n          masked._stops.indexOf(stop) >= 0\n        ) {\n          const phDetails = masked._appendPlaceholder(stop);\n          details.aggregate(phDetails);\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        tailDetails.skip = false; // always ignore skip, it will be set on last\n        details.aggregate(tailDetails);\n        masked._value += tailDetails.inserted;\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, { tail: true }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), { tail: true }));\n      }\n    };\n\n    return details;\n  }\n\n  get state (): ChunksTailState {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex,\n    };\n  }\n\n  set state (state: ChunksTailState) {\n    const { chunks, ...props } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ?\n        new ChunksTailDetails() :\n        new ContinuousTailDetails();\n      // $FlowFixMe already checked above\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.chunks.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci=0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n\n  shift (): string {\n    if (!this.chunks.length) return '';\n\n    let ci=this.chunks.length-1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n}\n","// @flow\nimport { DIRECTION } from '../../core/utils.js';\nimport type MaskedPattern from '../pattern.js';\nimport { type PatternBlock } from './block.js';\n\n\ntype PatternCursorState = { offset: number, index: number, ok: boolean };\n\nexport default\nclass PatternCursor {\n  masked: MaskedPattern;\n  offset: number;\n  index: number;\n  ok: boolean;\n  _log: PatternCursorState[];\n\n  constructor (masked: MaskedPattern, pos: number) {\n    this.masked = masked;\n    this._log = [];\n\n    const { offset, index } = masked._mapPosToBlock(pos) || (\n      pos < 0 ?\n        // first\n        { index: 0, offset: 0 } :\n        // last\n        { index: this.masked._blocks.length, offset: 0 }\n    );\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n\n  get block (): PatternBlock {\n    return this.masked._blocks[this.index];\n  }\n\n  get pos (): number {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n\n  get state (): PatternCursorState {\n    return { index: this.index, offset: this.offset, ok: this.ok };\n  }\n\n  set state (s: PatternCursorState) {\n    Object.assign(this, s);\n  }\n\n  pushState () {\n    this._log.push(this.state);\n  }\n\n  popState (): PatternCursorState {\n    const s = this._log.pop();\n    this.state = s;\n    return s;\n  }\n\n  bindBlock () {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.value.length;\n    }\n  }\n\n  _pushLeft(fn: () => ?boolean): boolean {\n    this.pushState();\n    for (this.bindBlock(); 0<=this.index; --this.index, this.offset=this.block?.value.length || 0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  _pushRight (fn: () => ?boolean): boolean {\n    this.pushState();\n    for (this.bindBlock(); this.index<this.masked._blocks.length; ++this.index, this.offset=0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  pushLeftBeforeFilled (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n\n  pushLeftBeforeInput (): boolean {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushLeftBeforeRequired (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushRightBeforeFilled (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n\n  pushRightBeforeInput (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n\n  pushRightBeforeRequired (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n","// @flow\nimport Masked, { type MaskedOptions } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Masking by RegExp */\nexport default\nclass MaskedRegExp extends Masked<RegExp> {\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: $Shape<MaskedOptions<RegExp>>) {\n    if (opts.mask) opts.validate = (value) => value.search(opts.mask) >= 0;\n    super._update(opts);\n  }\n}\n\n\nIMask.MaskedRegExp = MaskedRegExp;\n","// @flow\nimport {DIRECTION, type Direction, forceDirection} from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport Masked, { type AppendFlags, type ExtractFlags, type MaskedOptions, type MaskedState } from './base.js';\nimport PatternInputDefinition, { DEFAULT_INPUT_DEFINITIONS, type Definitions } from './pattern/input-definition.js';\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { type PatternBlock } from './pattern/block.js';\nimport PatternCursor from './pattern/cursor.js';\nimport createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport './regexp.js';  // support for default definitions which are regexp's\n\n\ntype MaskedPatternOptions = {\n  ...MaskedOptions<string>,\n  definitions?: $PropertyType<MaskedPattern, 'definitions'>,\n  blocks?: $PropertyType<MaskedPattern, 'blocks'>,\n  placeholderChar?: $PropertyType<MaskedPattern, 'placeholderChar'>,\n  displayChar?: $PropertyType<MaskedPattern, 'displayChar'>,\n  lazy?: $PropertyType<MaskedPattern, 'lazy'>,\n};\n\ntype MaskedPatternState = {|\n  ...MaskedState,\n  _blocks: Array<*>,\n|};\n\ntype BlockPosData = {\n  index: number,\n  offset: number,\n};\n\n/**\n  Pattern mask\n  @param {Object} opts\n  @param {Object} opts.blocks\n  @param {Object} opts.definitions\n  @param {string} opts.placeholderChar\n  @param {string} opts.displayChar\n  @param {boolean} opts.lazy\n*/\nexport default\nclass MaskedPattern extends Masked<string> {\n  static DEFAULTS: any;\n  static STOP_CHAR: string;\n  static ESCAPE_CHAR: string;\n  static InputDefinition: Class<PatternInputDefinition>;\n  static FixedDefinition: Class<PatternFixedDefinition>;\n\n  /** */\n  blocks: {[string]: MaskedOptions<any>};\n  /** */\n  definitions: Definitions;\n  /** Single char for empty input */\n  placeholderChar: string;\n  /** Single char for filled input */\n  displayChar: string;\n  /** Show placeholder only when needed */\n  lazy: boolean;\n  _blocks: Array<PatternBlock>;\n  _maskedBlocks: {[string]: Array<number>};\n  _stops: Array<number>;\n\n  constructor (opts: any={}) {  // TODO type $Shape<MaskedPatternOptions>={} does not work\n    opts.definitions = Object.assign({}, DEFAULT_INPUT_DEFINITIONS, opts.definitions);\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n    });\n  }\n\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: $Shape<MaskedPatternOptions>={}) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n\n  /** */\n  _rebuildMask () {\n    const defs = this.definitions;\n    this._blocks = [];\n    this._stops = [];\n    this._maskedBlocks = {};\n\n    let pattern = this.mask;\n    if (!pattern || !defs) return;\n\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n\n    for (let i=0; i<pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          // $FlowFixMe no ideas\n          const maskedBlock = createMask({\n            parent: this,\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            displayChar: this.displayChar,\n            overwrite: this.overwrite,\n            ...this.blocks[bName],\n          });\n\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n\n          i += bName.length - 1;\n          continue;\n        }\n      }\n\n      let char = pattern[i];\n      let isInput = char in defs;\n\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n\n      const maskOpts = defs[char]?.mask && !(defs[char]?.mask.prototype instanceof IMask.Masked) ? defs[char] : { mask: defs[char] };\n      const def = isInput ?\n        new PatternInputDefinition({\n          parent: this,\n          isOptional: optionalBlock,\n          lazy: this.lazy,\n          eager: this.eager,\n          placeholderChar: this.placeholderChar,\n          displayChar: this.displayChar,\n          ...maskOpts,\n        }) :\n        new PatternFixedDefinition({\n          char,\n          eager: this.eager,\n          isUnmasking: unmaskingBlock,\n        });\n\n      this._blocks.push(def);\n    }\n  }\n\n  /**\n    @override\n  */\n  get state (): MaskedPatternState {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state),\n    };\n  }\n\n  set state (state: MaskedPatternState) {\n    const {_blocks, ...maskedState} = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n\n  /**\n    @override\n  */\n  reset () {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return this._blocks.every(b => b.isComplete);\n  }\n\n  /**\n    @override\n  */\n  get isFilled (): boolean {\n    return this._blocks.every(b => b.isFilled);\n  }\n\n  get isFixed (): boolean {\n    return this._blocks.every(b => b.isFixed);\n  }\n\n  get isOptional (): boolean {\n    return this._blocks.every(b => b.isOptional);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get value (): string {\n    // TODO return _value when not in change?\n    return this._blocks.reduce((str, b) => str += b.value, '');\n  }\n\n  set value (value: string) {\n    super.value = value;\n  }\n\n  get displayValue (): string {\n    return this._blocks.reduce((str, b) => str += b.displayValue, '');\n  }\n\n  /**\n    @override\n  */\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n\n  /**\n    @override\n  */\n  _appendEager (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    let startBlockIndex = this._mapPosToBlock(this.value.length)?.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n\n    for (let bi=startBlockIndex; bi<this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n\n      details.aggregate(d);\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    const blockIter = this._mapPosToBlock(this.value.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n\n    for (let bi=blockIter.index; ; ++bi) {\n      const block = this._blocks[bi];\n      if (!block) break;\n\n      const blockDetails = block._appendChar(ch, { ...flags, _beforeTailState: flags._beforeTailState?._blocks?.[bi] });\n\n      const skip = blockDetails.skip;\n      details.aggregate(blockDetails);\n\n      if (skip || blockDetails.rawInserted) break; // go next char\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): ChunksTailDetails {\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n\n      chunkTail.extend(blockChunk);\n    });\n\n    return chunkTail;\n  }\n\n  /**\n    @override\n  */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags: ExtractFlags={}): string {\n    if (fromPos === toPos) return '';\n\n    let input = '';\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n\n    return input;\n  }\n\n  _findStopBefore (blockIndex: number): ?number {\n    let stopBefore;\n    for (let si=0; si<this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;\n      else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder (toBlockIndex: ?number): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n\n    const startBlockIter = this._mapPosToBlock(this.value.length);\n    if (!startBlockIter) return details;\n\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n\n    this._blocks.slice(startBlockIndex, endBlockIndex)\n      .forEach(b => {\n        if (!b.lazy || toBlockIndex != null) {\n          // $FlowFixMe `_blocks` may not be present\n          const args = b._blocks != null ? [b._blocks.length] : [];\n          const bDetails = b._appendPlaceholder(...args);\n          this._value += bDetails.inserted;\n          details.aggregate(bDetails);\n        }\n      });\n\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock (pos: number): ?BlockPosData {\n    let accVal = '';\n    for (let bi=0; bi<this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n\n      accVal += block.value;\n\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos,\n        };\n      }\n    }\n  }\n\n  /** */\n  _blockStartPos (blockIndex: number): number {\n    return this._blocks\n      .slice(0, blockIndex)\n      .reduce((pos, b) => pos += b.value.length, 0);\n  }\n\n  /** */\n  _forEachBlocksInRange (fromPos: number, toPos: number=this.value.length, fn: (block: PatternBlock, blockIndex: number, fromPos: number, toPos: number) => void) {\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ?\n        toBlockIter.offset :\n        this._blocks[fromBlockIter.index].value.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi=fromBlockIter.index+1; bi<toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].value.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n\n  /**\n    @override\n  */\n  remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.value.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      // cursor.popState();\n      // if (\n      //   cursor.pushRightBeforeInput() &&\n      //   // TODO HACK for lazy if has aligned left inside fixed and has came to the start - use start position\n      //   (!this.lazy || this.extractInput())\n      // ) return cursor.pos;\n\n      return 0;\n    }\n\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.value.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n\n    return cursorPos;\n  }\n\n  /**\n    @override\n  */\n  totalInputPositions (fromPos?: number=0, toPos?: number=this.value.length): number {\n    let total = 0;\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      total += b.totalInputPositions(bFromPos, bToPos);\n    });\n    return total;\n  }\n\n  /** Get block by name */\n  maskedBlock (name: string): ?PatternBlock {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks (name: string): Array<PatternBlock> {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n}\nMaskedPattern.DEFAULTS = {\n  lazy: true,\n  placeholderChar: '_'\n};\nMaskedPattern.STOP_CHAR = '`';\nMaskedPattern.ESCAPE_CHAR = '\\\\';\nMaskedPattern.InputDefinition = PatternInputDefinition;\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\n\n\nIMask.MaskedPattern = MaskedPattern;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { normalizePrepare } from '../core/utils.js';\nimport { type AppendFlags } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Pattern which accepts ranges */\nexport default\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n  maxLength: number;\n  /** Min bound */\n  from: number;\n  /** Max bound */\n  to: number;\n  /** */\n  autofix: boolean | 'pad';\n\n  get _matchFrom (): number {\n    return this.maxLength - String(this.from).length;\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {  // TODO type\n    opts = {\n      to: this.to || 0,\n      from: this.from || 0,\n      maxLength: this.maxLength || 0,\n      ...opts,\n    };\n\n    let maxLength = String(opts.to).length;\n    if (opts.maxLength != null) maxLength = Math.max(maxLength, opts.maxLength);\n    opts.maxLength = maxLength;\n\n    const fromStr = String(opts.from).padStart(maxLength, '0');\n    const toStr = String(opts.to).padStart(maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    opts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(maxLength - sameCharsCount);\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return super.isComplete && Boolean(this.value);\n  }\n\n  boundaries (str: string): [string, string] {\n    let minstr = '';\n    let maxstr = '';\n\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n\n    return [minstr, maxstr];\n  }\n\n  // TODO str is a single char everytime\n  /**\n    @override\n  */ \n  doPrepare (ch: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    let details: ChangeDetails;\n    [ch, details] = normalizePrepare(super.doPrepare(ch.replace(/\\D/g, ''), flags));\n\n    if (!this.autofix || !ch) return ch;\n\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n\n    let nextVal = this.value + ch;\n    if (nextVal.length > this.maxLength) return '';\n\n    const [minstr, maxstr] = this.boundaries(nextVal);\n\n    if (Number(maxstr) < this.from) return fromStr[nextVal.length - 1];\n\n    if (Number(minstr) > this.to) {\n      if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\n        return ['', details.aggregate(this.append(fromStr[nextVal.length - 1]+ch, flags))];\n      }\n      return toStr[nextVal.length - 1];\n    }\n\n    return ch;\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    const str = this.value;\n\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n\n    const [minstr, maxstr] = this.boundaries(str);\n\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to &&\n      super.doValidate(...args);\n  }\n}\n\n\nIMask.MaskedRange = MaskedRange;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\n\n\n/** Date mask */\nexport default\nclass MaskedDate extends MaskedPattern {\n  static GET_DEFAULT_BLOCKS: () => {[string]: any};\n  static DEFAULTS: any;\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n  pattern: string;\n  /** Start date */\n  min: ?Date;\n  /** End date */\n  max: ?Date;\n  /** */\n  autofix: boolean | 'pad';\n\n  /**\n    @param {Object} opts\n  */\n  constructor (opts: any) {\n    super({\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    });\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {\n    if (opts.mask === Date) delete opts.mask;\n    if (opts.pattern) opts.mask = opts.pattern;\n\n    const blocks = opts.blocks;\n    opts.blocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) opts.blocks.Y.from = opts.min.getFullYear();\n    if (opts.max) opts.blocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && opts.blocks.Y.from === opts.blocks.Y.to\n    ) {\n      opts.blocks.m.from = opts.min.getMonth() + 1;\n      opts.blocks.m.to = opts.max.getMonth() + 1;\n\n      if (opts.blocks.m.from === opts.blocks.m.to) {\n        opts.blocks.d.from = opts.min.getDate();\n        opts.blocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(opts.blocks, this.blocks, blocks);\n\n    // add autofix\n    Object.keys(opts.blocks).forEach(bk => {\n      const b = opts.blocks[bk];\n      if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\n    });\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    const date = this.date;\n\n    return super.doValidate(...args) &&\n      (!this.isComplete ||\n        this.isDateExist(this.value) && date != null &&\n        (this.min == null || this.min <= date) &&\n        (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist (str: string): boolean {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date (): ?Date {\n    return this.typedValue;\n  }\n  set date (date: Date) {\n    this.typedValue = date;\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): ?Date {\n    return this.isComplete ? super.typedValue : null;\n  }\n  set typedValue (value: Date) {\n    super.typedValue = value;\n  }\n\n  /**\n    @override\n  */\n  maskEquals (mask: any): boolean {\n    return mask === Date || super.maskEquals(mask);\n  }\n}\nMaskedDate.DEFAULTS = {\n  pattern: 'd{.}`m{.}`Y',\n  format: date => {\n    if (!date) return '';\n\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n\n    return [day, month, year].join('.');\n  },\n  parse: str => {\n    const [day, month, year] = str.split('.');\n    return new Date(year, month - 1, day);\n  },\n};\nMaskedDate.GET_DEFAULT_BLOCKS = () => ({\n  d: {\n    mask: MaskedRange,\n    from: 1,\n    to: 31,\n    maxLength: 2,\n  },\n  m: {\n    mask: MaskedRange,\n    from: 1,\n    to: 12,\n    maxLength: 2,\n  },\n  Y: {\n    mask: MaskedRange,\n    from: 1900,\n    to: 9999,\n  }\n});\n\n\nIMask.MaskedDate = MaskedDate;\n","// @flow\nimport IMask from '../core/holder.js';\n\n\nexport\ntype ElementEvent =\n  'selectionChange' |\n  'input' |\n  'drop' |\n  'click' |\n  'focus' |\n  'commit';\n\n/**\n  Generic element API to use with mask\n  @interface\n*/\nexport default\nclass MaskElement {\n  /** */\n  +_unsafeSelectionStart: number;\n  /** */\n  +_unsafeSelectionEnd: number;\n  /** */\n  value: string;\n\n  /** Safely returns selection start */\n  get selectionStart (): number {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch (e) {}\n\n    return start != null ?\n      start :\n      this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd (): number {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch (e) {}\n\n    return end != null ?\n      end :\n      this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select (start: number, end: number) {\n    if (start == null || end == null ||\n      start === this.selectionStart && end === this.selectionEnd) return;\n\n    try {\n      this._unsafeSelect(start, end);\n    } catch (e) {}\n  }\n\n  /** Should be overriden in subclasses */\n  _unsafeSelect (start: number, end: number): void {}\n  /** Should be overriden in subclasses */\n  get isActive (): boolean { return false; }\n  /** Should be overriden in subclasses */\n  bindEvents (handlers: {[ElementEvent]: Function}) {}\n  /** Should be overriden in subclasses */\n  unbindEvents (): void {}\n}\n\n\nIMask.MaskElement = MaskElement;\n","// @flow\nimport MaskElement, {type ElementEvent} from './mask-element.js';\nimport IMask from '../core/holder.js';\n\n\n/** Bridge between HTMLElement and {@link Masked} */\nexport default\nclass HTMLMaskElement extends MaskElement {\n  /** Mapping between HTMLElement events and mask internal events */\n  static EVENTS_MAP: {[ElementEvent]: string};\n  /** HTMLElement to use mask on */\n  input: HTMLTextAreaElement | HTMLInputElement;\n  _handlers: {[string]: Function};\n\n  /**\n    @param {HTMLInputElement|HTMLTextAreaElement} input\n  */\n  constructor (input: HTMLTextAreaElement | HTMLInputElement) {\n    super();\n    this.input = input;\n    this._handlers = {};\n  }\n\n  /** */\n  // $FlowFixMe https://github.com/facebook/flow/issues/2839\n  get rootElement (): HTMLDocument {\n    return this.input.getRootNode?.() ?? document;\n  }\n\n  /**\n    Is element in focus\n    @readonly\n  */\n  get isActive (): boolean {\n    //$FlowFixMe\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /**\n    Returns HTMLElement selection start\n    @override\n  */\n  get _unsafeSelectionStart (): number {\n    return this.input.selectionStart;\n  }\n\n  /**\n    Returns HTMLElement selection end\n    @override\n  */\n  get _unsafeSelectionEnd (): number {\n    return this.input.selectionEnd;\n  }\n\n  /**\n    Sets HTMLElement selection\n    @override\n  */\n  _unsafeSelect (start: number, end: number) {\n    this.input.setSelectionRange(start, end);\n  }\n\n  /**\n    HTMLElement value\n    @override\n  */\n  get value (): string {\n    return this.input.value;\n  }\n  set value (value: string) {\n    this.input.value = value;\n  }\n\n  /**\n    Binds HTMLElement events to mask internal events\n    @override\n  */\n  bindEvents (handlers: {[ElementEvent]: Function}) {\n    Object.keys(handlers)\n      .forEach(event => this._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]));\n  }\n\n  /**\n    Unbinds HTMLElement events to mask internal events\n    @override\n  */\n  unbindEvents () {\n    Object.keys(this._handlers)\n      .forEach(event => this._toggleEventHandler(event));\n  }\n\n  /** */\n  _toggleEventHandler (event: string, handler?: Function): void {\n    if (this._handlers[event]) {\n      this.input.removeEventListener(event, this._handlers[event]);\n      delete this._handlers[event];\n    }\n\n    if (handler) {\n      this.input.addEventListener(event, handler);\n      this._handlers[event] = handler;\n    }\n  }\n}\nHTMLMaskElement.EVENTS_MAP = {\n  selectionChange: 'keydown',\n  input: 'input',\n  drop: 'drop',\n  click: 'click',\n  focus: 'focus',\n  commit: 'blur',\n};\n\n\nIMask.HTMLMaskElement = HTMLMaskElement;\n","// @flow\nimport HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\n\n\nexport default\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  /**\n    Returns HTMLElement selection start\n    @override\n  */\n  get _unsafeSelectionStart (): number {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /**\n    Returns HTMLElement selection end\n    @override\n  */\n  get _unsafeSelectionEnd (): number {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /**\n    Sets HTMLElement selection\n    @override\n  */\n  _unsafeSelect (start: number, end: number) {\n    if (!this.rootElement.createRange) return;\n\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /**\n    HTMLElement value\n    @override\n  */\n  get value (): string {\n    // $FlowFixMe\n    return this.input.textContent;\n  }\n  set value (value: string) {\n    this.input.textContent = value;\n  }\n}\n\n\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n","// @flow\nimport {objectIncludes, DIRECTION, type Selection} from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport MaskedDate from '../masked/date.js';\nimport createMask, {maskedClass} from '../masked/factory.js';\nimport type Masked from '../masked/base.js';\nimport {type Mask} from '../masked/base.js';\nimport MaskElement from './mask-element.js';\nimport HTMLMaskElement from './html-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\n\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nexport default\nclass InputMask {\n  /**\n    View element\n    @readonly\n  */\n  el: MaskElement;\n\n  /**\n    Internal {@link Masked} model\n    @readonly\n  */\n  masked: Masked<*>;\n  alignCursor: () => void;\n  alignCursorFriendly: () => void;\n\n  _listeners: {[string]: Array<Function>};\n  _value: string;\n  _changingCursorPos: number;\n  _unmaskedValue: string;\n  _saveSelection: (?Event) => void;\n  _selection: Selection;\n  _onInput: () => void;\n  _onChange: () => void;\n  _onDrop: (Event) => void;\n  _onFocus: (Event) => void;\n  _onClick: (Event) => void;\n  _cursorChanging: ?TimeoutID;\n  _inputEvent: ?InputEvent;\n\n  /**\n    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\n    @param {Object} opts\n  */\n  constructor (el: MaskElement | HTMLTextAreaElement | HTMLInputElement, opts: {[string]: any} | Masked<*>) {\n    this.el =\n      (el instanceof MaskElement) ? el :\n      (el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA') ? new HTMLContenteditableMaskElement(el) :\n      new HTMLMaskElement(el);\n    this.masked = createMask(opts);\n\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n\n  /** Read or update mask */\n  get mask (): Mask {\n    return this.masked.mask;\n  }\n\n  maskEquals (mask: Mask): boolean {\n    return mask == null || this.masked?.maskEquals(mask);\n  }\n\n  set mask (mask: Mask) {\n    if (this.maskEquals(mask)) return;\n\n    // $FlowFixMe No ideas ... after update\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      this.masked.updateOptions({mask});\n      return;\n    }\n\n    const masked = createMask({mask});\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value (): string {\n    return this._value;\n  }\n\n  set value (str: string) {\n    if (this.value === str) return;\n\n    this.masked.value = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Unmasked value */\n  get unmaskedValue (): string {\n    return this._unmaskedValue;\n  }\n\n  set unmaskedValue (str: string) {\n    if (this.unmaskedValue === str) return;\n\n    this.masked.unmaskedValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue (): any {\n    return this.masked.typedValue;\n  }\n\n  set typedValue (val: any) {\n    if (this.masked.typedValueEquals(val)) return;\n\n    this.masked.typedValue = val;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Display value */\n  get displayValue (): string {\n    return this.masked.displayValue;\n  }\n\n  /**\n    Starts listening to element events\n    @protected\n  */\n  _bindEvents () {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n    });\n  }\n\n  /**\n    Stops listening to element events\n    @protected\n   */\n  _unbindEvents () {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /**\n    Fires custom event\n    @protected\n   */\n  _fireEvent (ev: string, ...args: *) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n\n    listeners.forEach(l => l(...args));\n  }\n\n  /**\n    Current selection start\n    @readonly\n  */\n  get selectionStart (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionEnd;\n  }\n  set cursorPos (pos: number) {\n    if (!this.el || !this.el.isActive) return;\n\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /**\n    Stores current selection\n    @protected\n  */\n  _saveSelection (/* ev */) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue () {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl () {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newDisplayValue = this.displayValue;\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\n      this.value !== newValue);\n\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (isChanged) this._fireChangeEvents();\n  }\n\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\n  updateOptions (opts: {[string]: any}) {\n    const { mask, ...restOpts } = opts;\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = !objectIncludes(this.masked, restOpts);\n\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts);\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor (cursorPos: number) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /**\n    Delays cursor update to support mobile browsers\n    @private\n  */\n  _delayUpdateCursor (cursorPos: number) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /**\n    Fires custom events\n    @protected\n  */\n  _fireChangeEvents () {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /**\n    Aborts delayed cursor update\n    @private\n  */\n  _abortUpdateCursor () {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor () {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly () {\n    if (this.selectionStart !== this.cursorPos) return;  // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on (ev: string, handler: Function): this {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off (ev: string, handler: Function): this {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput (e: InputEvent): void {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n\n    // fix strange IE behavior\n    if (!this._selection) return this.updateValue();\n\n    const details = new ActionDetails(\n      // new state\n      this.el.value, this.cursorPos,\n      // old state\n      this.displayValue, this._selection,\n    );\n\n    const oldRawValue = this.masked.rawInputValue;\n\n    const offset = this.masked.splice(\n      details.startChangePos,\n      details.removed.length,\n      details.inserted,\n      details.removeDirection,\n      { input: true, raw: true },\n    ).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ?\n      details.removeDirection :\n      DIRECTION.NONE;\n\n    let cursorPos = this.masked.nearestInputPos(\n      details.startChangePos + offset,\n      removeDirection,\n    );\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n\n    this.updateControl();\n    this.updateCursor(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange () {\n    if (this.displayValue !== this.el.value) {\n      this.updateValue();\n    }\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop (ev: Event) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy () {\n    this._unbindEvents();\n    // $FlowFixMe why not do so?\n    this._listeners.length = 0;\n    // $FlowFixMe\n    delete this.el;\n  }\n}\n\n\nIMask.InputMask = InputMask;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\n\n\n/** Pattern which validates enum values */\nexport default\nclass MaskedEnum extends MaskedPattern {\n  enum: Array<string>;\n\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: any) {  // TODO type\n    if (opts.enum) opts.mask = '*'.repeat(opts.enum[0].length);\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) >= 0) &&\n      super.doValidate(...args);\n  }\n}\n\n\nIMask.MaskedEnum = MaskedEnum;\n","// @flow\nimport { escapeRegExp, indexInDirection, posInDirection, type Direction, DIRECTION, normalizePrepare } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { type TailDetails } from '../core/tail-details.js';\n\nimport Masked, { type MaskedOptions, type ExtractFlags, type AppendFlags } from './base.js';\nimport IMask from '../core/holder.js';\n\n\ntype MaskedNumberOptions = {\n  ...MaskedOptions<Class<Number>>,\n  radix: $PropertyType<MaskedNumber, 'radix'>,\n  thousandsSeparator: $PropertyType<MaskedNumber, 'thousandsSeparator'>,\n  mapToRadix: $PropertyType<MaskedNumber, 'mapToRadix'>,\n  scale: $PropertyType<MaskedNumber, 'scale'>,\n  signed: $PropertyType<MaskedNumber, 'signed'>,\n  normalizeZeros: $PropertyType<MaskedNumber, 'normalizeZeros'>,\n  padFractionalZeros: $PropertyType<MaskedNumber, 'padFractionalZeros'>,\n};\n\n/**\n  Number mask\n  @param {Object} opts\n  @param {string} opts.radix - Single char\n  @param {string} opts.thousandsSeparator - Single char\n  @param {Array<string>} opts.mapToRadix - Array of single chars\n  @param {number} opts.min\n  @param {number} opts.max\n  @param {number} opts.scale - Digits after point\n  @param {boolean} opts.signed - Allow negative\n  @param {boolean} opts.normalizeZeros - Flag to remove leading and trailing zeros in the end of editing\n  @param {boolean} opts.padFractionalZeros - Flag to pad trailing zeros after point in the end of editing\n*/\nexport default\nclass MaskedNumber extends Masked<Class<Number>> {\n  static DEFAULTS: $Shape<MaskedNumberOptions>;\n  static UNMASKED_RADIX: string;\n\n  /** Single char */\n  radix: string;\n  /** Single char */\n  thousandsSeparator: string;\n  /** Array of single chars */\n  mapToRadix: Array<string>;\n  /** */\n  min: number;\n  /** */\n  max: number;\n  /** Digits after point */\n  scale: number;\n  /** */\n  signed: boolean;\n  /** Flag to remove leading and trailing zeros in the end of editing */\n  normalizeZeros: boolean;\n  /** Flag to pad trailing zeros after point in the end of editing */\n  padFractionalZeros: boolean;\n\n  _numberRegExp: RegExp;\n  _thousandsSeparatorRegExp: RegExp;\n  _mapToRadixRegExp: RegExp;\n  _separatorsProcessed: boolean;\n\n  constructor (opts: $Shape<MaskedNumberOptions>) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts\n    });\n  }\n\n  /**\n    @override\n  */\n  _update (opts: MaskedNumberOptions) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n\n  /** */\n  _updateRegExps () {\n    let start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    let mid = '\\\\d*';\n    let end = (this.scale ?\n      `(${escapeRegExp(this.radix)}\\\\d{0,${this.scale}})?` :\n      '') + '$';\n\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(`[${this.mapToRadix.map(escapeRegExp).join('')}]`, 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n\n  /** */\n  _removeThousandsSeparators (value: string): string {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n\n  /** */\n  _insertThousandsSeparators (value: string): string {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n\n  /**\n    @override\n  */\n  doPrepare (ch: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    ch = this._removeThousandsSeparators(\n      this.scale && this.mapToRadix.length && (\n        /*\n          radix should be mapped when\n          1) input is done from keyboard = flags.input && flags.raw\n          2) unmasked value is set = !flags.input && !flags.raw\n          and should not be mapped when\n          1) value is set = flags.input && !flags.raw\n          2) raw value is set = !flags.input && flags.raw\n        */\n        flags.input && flags.raw ||\n        !flags.input && !flags.raw\n      ) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch\n    );\n    const [prepCh, details] = normalizePrepare(super.doPrepare(ch, flags));\n    if (ch && !prepCh) details.skip = true;\n    return [prepCh, details];\n  }\n\n  /** */\n  _separatorsCount (to: number, extendOnSeparators: boolean=false): number {\n    let count = 0;\n\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n\n    return count;\n  }\n\n  /** */\n  _separatorsCountFromSlice (slice: string=this._value): number {\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n\n  /**\n    @override\n  */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!this.thousandsSeparator) return super._appendCharRaw(ch, flags);\n\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n\n    const appendDetails = super._appendCharRaw(ch, flags);\n\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    appendDetails.skip = !appendDetails.rawInserted && ch === this.thousandsSeparator;\n    return appendDetails;\n  }\n\n  /** */\n  _findSeparatorAround (pos: number): number {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n\n    return -1;\n  }\n\n  _adjustRangeWithSeparators (from: number, to: number): [number, number] {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n\n  /**\n    @override\n  */\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length,\n    });\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\n    if (!this.thousandsSeparator) return cursorPos;\n\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT: {\n        const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n        if (separatorAtLeftPos >= 0) {\n          const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n          if (cursorPos < separatorAtLeftEndPos ||\n            this.value.length <= separatorAtLeftEndPos ||\n            direction === DIRECTION.FORCE_LEFT\n          ) {\n            return separatorAtLeftPos;\n          }\n        }\n        break;\n      }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT: {\n        const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n        if (separatorAtRightPos >= 0) {\n          return separatorAtRightPos + this.thousandsSeparator.length;\n        }\n      }\n    }\n\n    return cursorPos;\n  }\n\n  /**\n    @override\n  */\n  doValidate (flags: AppendFlags): boolean {\n    // validate as string\n    let valid = Boolean(this._removeThousandsSeparators(this.value).match(this._numberRegExp));\n\n    if (valid) {\n      // validate as number\n      const number = this.number;\n      valid = valid && !isNaN(number) &&\n        // check min bound for negative values\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\n        // check max bound for positive values\n        (this.max == null || this.max <= 0 || this.number <= this.max);\n    }\n\n    return valid && super.doValidate(flags);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n\n      if (validnum !== number) this.unmaskedValue = this.doFormat(validnum);\n\n      let formatted = this.value;\n\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n\n      this._value = formatted;\n    }\n\n    super.doCommit();\n  }\n\n  /** */\n  _normalizeZeros (value: string): string {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\n      if (!parts[1].length) parts.length = 1;  // remove fractional\n    }\n\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n\n  /** */\n  _padFractionalZeros (value: string): string {\n    if (!value) return value;\n\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n\n  /** */\n  doSkipInvalid (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): boolean {\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (\n      ch === this.radix ||\n      ch === MaskedNumber.UNMASKED_RADIX ||\n      this.mapToRadix.includes(ch)\n    )\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this._removeThousandsSeparators(\n      this._normalizeZeros(\n        this.value))\n      .replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): number {\n    return this.doParse(this.unmaskedValue);\n  }\n\n  set typedValue (n: number) {\n    this.rawInputValue = this.doFormat(n).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number (): number {\n    return this.typedValue;\n  }\n\n  set number (number: number) {\n    this.typedValue = number;\n  }\n\n  /**\n    Is negative allowed\n    @readonly\n  */\n  get allowNegative (): boolean {\n    return this.signed ||\n      (this.min != null && this.min < 0) ||\n      (this.max != null && this.max < 0);\n  }\n\n  /**\n    @override\n  */\n  typedValueEquals (value: any): boolean {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (\n      super.typedValueEquals(value) ||\n      MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)\n    ) && !(value === 0 && this.value === '');\n  }\n}\n\nMaskedNumber.UNMASKED_RADIX = '.';\nMaskedNumber.DEFAULTS = {\n  radix: ',',\n  thousandsSeparator: '',\n  mapToRadix: [MaskedNumber.UNMASKED_RADIX],\n  scale: 2,\n  signed: false,\n  normalizeZeros: true,\n  padFractionalZeros: false,\n  parse: Number,\n  format: n => n.toLocaleString('en-US', { useGrouping: false, maximumFractionDigits: 20 }),\n};\nMaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\n\nIMask.MaskedNumber = MaskedNumber;\n","// @flow\nimport Masked, { type MaskedOptions } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Masking by custom Function */\nexport default\nclass MaskedFunction extends Masked<Function> {\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: MaskedOptions<Function>) {\n    if (opts.mask) opts.validate = opts.mask;\n    super._update(opts);\n  }\n}\n\n\nIMask.MaskedFunction = MaskedFunction;\n","// @flow\nimport { objectIncludes } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask from './factory.js';\nimport Masked, { type AppendFlags, type MaskedState } from './base.js';\nimport { normalizePrepare, DIRECTION } from '../core/utils.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport IMask from '../core/holder.js';\n\n\ntype MaskedDynamicState = {|\n  ...MaskedState,\n  _rawInputValue: string,\n  compiledMasks: Array<*>,\n  currentMaskRef: ?Masked<*>,\n  currentMask: *,\n|};\n\ntype DynamicMaskType = Array<{[string]: any}>;\n/** Dynamic mask for choosing apropriate mask in run-time */\nexport default\nclass MaskedDynamic extends Masked<DynamicMaskType> {\n  /** Currently chosen mask */\n  currentMask: ?Masked<*>;\n  /** Compliled {@link Masked} options */\n  compiledMasks: Array<Masked<*>>;\n  /** Chooses {@link Masked} depending on input value */\n  dispatch: (string, Masked<*>, AppendFlags, string | String | TailDetails) => Masked<*>;\n\n  /**\n    @param {Object} opts\n  */\n  constructor (opts: any) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n\n    this.currentMask = null;\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {\n    super._update(opts);\n    if ('mask' in opts) {\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ?\n        opts.mask.map(m => createMask(m)) :\n        [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    const details = this._applyDispatch(ch, flags);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n\n    return details;\n  }\n\n  _applyDispatch (appended: string='', flags: AppendFlags={}, tail: string | String | TailDetails = ''): ChangeDetails {\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ?\n      flags._beforeTailState._value :\n      this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ?\n      // $FlowFixMe - tired to fight with type system\n      flags._beforeTailState._rawInputValue :\n      inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n\n    const prevMaskState = prevMask?.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, { ...flags }, tail);\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n\n        if (insertValue) {\n          // $FlowFixMe - it's ok, we don't change current mask above\n          const d = this.currentMask.append(insertValue, {raw: true});\n          details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n        }\n\n        if (tailValue) {\n          // $FlowFixMe - it's ok, we don't change current mask above\n          details.tailShift += this.currentMask.append(tailValue, {raw: true, tail: true}).tailShift;\n        }\n      } else {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n\n    return details;\n  }\n\n  _appendPlaceholder (...args: *): ChangeDetails {\n    const details = this._applyDispatch(...args);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n\n    return details;\n  }\n\n   /**\n    @override\n  */\n  _appendEager (...args: *): ChangeDetails {\n    const details = this._applyDispatch(...args);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n\n    return details;\n  }\n\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    const details = new ChangeDetails();\n    if (tail) details.aggregate(this._applyDispatch('', {}, tail));\n\n    return details.aggregate(this.currentMask ?\n      this.currentMask.appendTail(tail) :\n      super.appendTail(tail));\n  }\n\n  currentMaskFlags (flags: AppendFlags): AppendFlags {\n    return {\n      ...flags,\n      _beforeTailState: flags._beforeTailState?.currentMaskRef === this.currentMask && flags._beforeTailState?.currentMask ||\n        flags._beforeTailState,\n    };\n  }\n\n  /**\n    @override\n  */\n  doDispatch(appended: string, flags: AppendFlags={}, tail: string | String | TailDetails=''): ?Masked<*> {\n    return this.dispatch(appended, this, flags, tail);\n  }\n\n  /**\n    @override\n  */\n  doValidate (flags: AppendFlags): boolean {\n    return super.doValidate(flags) && (\n      !this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags))\n    );\n  }\n\n  /**\n    @override\n  */\n  doPrepare (str: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    let [s, details] = normalizePrepare(super.doPrepare(str, flags));\n\n    if (this.currentMask) {\n      let currentDetails;\n      ([s, currentDetails] = normalizePrepare(super.doPrepare(s, this.currentMaskFlags(flags))));\n      details = details.aggregate(currentDetails);\n    }\n\n    return [s, details];\n  }\n\n  /**\n    @override\n  */\n  reset () {\n    this.currentMask?.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n\n  /**\n    @override\n  */\n  get value (): string {\n    return this.currentMask ? this.currentMask.value : '';\n  }\n\n  set value (value: string) {\n    super.value = value;\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): any {\n    return this.currentMask ? this.currentMask.typedValue : '';\n  }\n\n  // probably typedValue should not be used with dynamic\n  set typedValue (value: any) {\n    let unmaskedValue = String(value);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = value;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n\n  get displayValue (): string {\n    return this.currentMask ? this.currentMask.displayValue : '';\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return Boolean(this.currentMask?.isComplete);\n  }\n\n  /**\n    @override\n  */\n  get isFilled (): boolean {\n    return Boolean(this.currentMask?.isFilled);\n  }\n\n  /**\n    @override\n  */\n  remove (...args: *): ChangeDetails {\n    const details: ChangeDetails = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(...args))\n        // update with dispatch\n        .aggregate(this._applyDispatch());\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  get state (): MaskedDynamicState {\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: this.currentMask?.state,\n    };\n  }\n\n  set state (state: MaskedDynamicState) {\n    const {compiledMasks, currentMaskRef, currentMask, ...maskedState} = state;\n    this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n\n  /**\n    @override\n  */\n  extractInput (...args: *): string {\n    return this.currentMask ?\n      this.currentMask.extractInput(...args) :\n      '';\n  }\n\n  /**\n    @override\n  */\n  extractTail (...args: *): TailDetails {\n    return this.currentMask ?\n      this.currentMask.extractTail(...args) :\n      super.extractTail(...args);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos(...args: *): number {\n    return this.currentMask ?\n      this.currentMask.nearestInputPos(...args) :\n      super.nearestInputPos(...args);\n  }\n\n  get overwrite (): ?boolean | 'shift' {\n    return this.currentMask ?\n      this.currentMask.overwrite :\n      super.overwrite;\n  }\n\n  set overwrite (overwrite: *) {\n    console.warn('\"overwrite\" option is not available in dynamic mask, use this option in siblings');\n  }\n\n  get eager (): boolean | 'remove' | 'append' {\n    return this.currentMask ?\n      this.currentMask.eager :\n      super.eager;\n  }\n\n  set eager (eager: *) {\n    console.warn('\"eager\" option is not available in dynamic mask, use this option in siblings');\n  }\n\n  get skipInvalid (): boolean {\n    return this.currentMask ?\n      this.currentMask.skipInvalid :\n      super.skipInvalid;\n  }\n\n  set skipInvalid (skipInvalid: boolean) {\n    if (this.isInitialized || skipInvalid !== Masked.DEFAULTS.skipInvalid) {\n      console.warn('\"skipInvalid\" option is not available in dynamic mask, use this option in siblings');\n    }\n  }\n\n  /**\n    @override\n  */\n  maskEquals (mask: any): boolean {\n    return Array.isArray(mask) &&\n      this.compiledMasks.every((m, mi) => {\n        if (!mask[mi]) return;\n\n        const { mask: oldMask, ...restOpts } = mask[mi];\n        return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n      });\n  }\n\n  /**\n    @override\n  */\n  typedValueEquals (value: any): boolean {\n    return Boolean(this.currentMask?.typedValueEquals(value));\n  }\n}\n\nMaskedDynamic.DEFAULTS = {\n  dispatch: (appended, masked, flags, tail) => {\n    if (!masked.compiledMasks.length) return;\n\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      const isCurrent = masked.currentMask === m;\n      const startInputPos = isCurrent ? m.value.length : m.nearestInputPos(m.value.length, DIRECTION.FORCE_LEFT);\n\n      if (m.rawInputValue !== inputValue) {\n        m.reset();\n        m.append(inputValue, { raw: true });\n      } else if (!isCurrent) {\n        m.remove(startInputPos);\n      }\n      m.append(appended, masked.currentMaskFlags(flags));\n      m.appendTail(tail);\n\n      return {\n        index,\n        weight: m.rawInputValue.length,\n        totalInputPositions: m.totalInputPositions(\n          0,\n          Math.max(startInputPos, m.nearestInputPos(m.value.length, DIRECTION.FORCE_LEFT)),\n        ),\n      };\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight || i2.totalInputPositions - i1.totalInputPositions);\n\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\n\n\nIMask.MaskedDynamic = MaskedDynamic;\n","import createMask from './factory';\nimport IMask from '../core/holder.js';\n\n\n/** Mask pipe source and destination types */\nexport\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue',\n};\n\n/** Creates new pipe function depending on mask type, source and destination options */\nexport\nfunction createPipe (mask, from=PIPE_TYPE.MASKED, to=PIPE_TYPE.MASKED) {\n  const masked = createMask(mask);\n  return (value) => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nexport\nfunction pipe (value, ...pipeArgs) {\n  return createPipe(...pipeArgs)(value);\n}\n\n\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n","import IMask from './imask.js';\nexport { default as InputMask } from './controls/input.js';\n\nexport { default as Masked } from './masked/base.js';\nexport { default as MaskedPattern } from './masked/pattern.js';\nexport { default as MaskedEnum } from './masked/enum.js';\nexport { default as MaskedRange } from './masked/range.js';\nexport { default as MaskedNumber } from './masked/number.js';\nexport { default as MaskedDate } from './masked/date.js';\nexport { default as MaskedRegExp } from './masked/regexp.js';\nexport { default as MaskedFunction } from './masked/function.js';\nexport { default as MaskedDynamic } from './masked/dynamic.js';\nexport { default as createMask } from './masked/factory.js';\nexport { default as MaskElement } from './controls/mask-element.js';\nexport { default as HTMLMaskElement } from './controls/html-mask-element.js';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element.js';\nexport { createPipe, pipe, PIPE_TYPE } from './masked/pipe.js';\n\nexport { default as ChangeDetails } from './core/change-details.js';\n\n\ntry {\n  globalThis.IMask = IMask;\n} catch(e) {}\nexport default IMask;\n"],"names":["IMask","el","opts","arguments","length","undefined","InputMask","ChangeDetails","constructor","details","Object","assign","inserted","rawInserted","skip","tailShift","aggregate","offset","isString","str","String","DIRECTION","NONE","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","forceDirection","direction","escapeRegExp","replace","normalizePrepare","prep","Array","isArray","objectIncludes","b","a","arrA","arrB","i","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","keys","prototype","hasOwnProperty","call","ActionDetails","value","cursorPos","oldValue","oldSelection","slice","startChangePos","start","Math","min","insertedCount","substr","removedCount","max","end","removed","head","substring","tail","removeDirection","ContinuousTailDetails","from","stop","extend","appendTo","masked","append","_appendPlaceholder","state","unshift","beforePos","shiftChar","shift","Masked","_value","_update","DEFAULTS","isInitialized","updateOptions","withValueRefresh","bind","reset","resolve","flags","input","doCommit","unmaskedValue","typedValue","doParse","doFormat","rawInputValue","extractInput","raw","displayValue","isComplete","isFilled","nearestInputPos","totalInputPositions","fromPos","toPos","extractTail","appendTail","_appendCharRaw","ch","_appendChar","checkTail","consistentState","doPrepare","consistentTail","appended","doValidate","beforeTailState","overwrite","tailDetails","_appendEager","Error","_beforeTailState","ci","d","doSkipInvalid","eager","remove","fn","_refreshing","rawInput","ret","indexOf","runIsolated","_isolated","skipInvalid","prepare","validate","parent","commit","format","parse","splice","deleteCount","tailPos","eagerRemove","oldRawValue","valLength","maskEquals","mask","typedValueEquals","tval","EMPTY_VALUES","includes","v","maskedClass","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","Function","MaskedFunction","console","warn","createMask","MaskedClass","DEFAULT_INPUT_DEFINITIONS","PatternInputDefinition","isOptional","placeholderChar","displayChar","lazy","maskOpts","_objectWithoutPropertiesLoose","_excluded","Boolean","minPos","maxPos","boundPos","PatternFixedDefinition","isFixed","isUnmasking","_isRawInput","appendEager","char","isResolved","ChunksTailDetails","chunks","map","join","tailChunk","lastChunk","extendLast","push","firstTailChunk","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","index","_stops","phDetails","_blocks","remainChars","c","props","cstate","chunkShiftPos","PatternCursor","pos","_log","ok","block","_blockStartPos","s","pushState","popState","pop","bindBlock","_pushLeft","_this$block","_pushRight","pushLeftBeforeFilled","pushLeftBeforeInput","pushLeftBeforeRequired","pushRightBeforeFilled","pushRightBeforeInput","pushRightBeforeRequired","search","definitions","_rebuildMask","defs","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","_defs$char","_defs$char2","blocks","p","bNames","filter","bName","sort","maskedBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","forEach","bi","every","reduce","_this$_mapPosToBlock","startBlockIndex","blockIter","_flags$_beforeTailSta","_flags$_beforeTailSta2","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","_","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","args","bDetails","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","total","name","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","MaskedRange","_matchFrom","maxLength","to","fromStr","padStart","toStr","sameCharsCount","repeat","boundaries","minstr","maxstr","placeholder","num","match","padEnd","autofix","nextVal","firstNonZero","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","getDate","bk","date","isDateExist","day","month","year","split","MaskElement","selectionStart","_unsafeSelectionStart","e","selectionEnd","_unsafeSelectionEnd","select","_unsafeSelect","isActive","bindEvents","handlers","unbindEvents","HTMLMaskElement","_handlers","rootElement","_this$input$getRootNo","_this$input$getRootNo2","_this$input","getRootNode","document","activeElement","setSelectionRange","event","_toggleEventHandler","EVENTS_MAP","handler","removeEventListener","addEventListener","selectionChange","drop","click","focus","HTMLContenteditableMaskElement","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","isContentEditable","tagName","_listeners","_unmaskedValue","_saveSelection","_onInput","_onChange","_onDrop","_onFocus","_onClick","alignCursor","alignCursorFriendly","_bindEvents","updateValue","_this$masked","updateControl","val","_unbindEvents","_fireEvent","ev","_len","_key","listeners","l","_cursorChanging","_changingCursorPos","_selection","newUnmaskedValue","newValue","newDisplayValue","isChanged","_fireChangeEvents","restOpts","updateMask","updateOpts","updateCursor","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_inputEvent","clearTimeout","on","off","hIndex","preventDefault","stopPropagation","destroy","MaskedEnum","enum","some","_updateRegExps","allowNegative","mid","scale","concat","radix","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","_removeThousandsSeparators","_insertThousandsSeparators","parts","prepCh","_separatorsCount","extendOnSeparators","count","_separatorsCountFromSlice","_adjustRangeWithSeparators","prevBeforeTailValue","prevBeforeTailSeparatorsCount","appendDetails","beforeTailValue","beforeTailSeparatorsCount","_findSeparatorAround","searchFrom","separatorPos","separatorAroundFromPos","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","valid","number","isNaN","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","test","dropFractional","UNMASKED_RADIX","n","signed","toLocaleString","useGrouping","maximumFractionDigits","currentMask","compiledMasks","_applyDispatch","currentMaskFlags","prevValueBeforeTail","inputValue","insertValue","_rawInputValue","tailValue","prevMask","prevMaskState","doDispatch","currentMaskRef","dispatch","currentDetails","_this$currentMask","_this$currentMask2","_this$currentMask3","_this$currentMask4","mi","_mask$mi","oldMask","_excluded2","_this$currentMask5","inputs","isCurrent","startInputPos","weight","i1","i2","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","pipe","pipeArgs","globalThis"],"mappings":"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"}