import { ElementRef, Renderer2, StaticProvider } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { IDatePickerRange, IDateRangePickerChangeEventData } from '@tylertech/forge';
import * as i0 from "@angular/core";
export declare const DATE_RANGE_PICKER_VALUE_ACCESSOR: StaticProvider;
export declare class DateRangePickerValueAccessor implements ControlValueAccessor {
    private _elementRef;
    private _renderer;
    dateRangePickerChange(event: CustomEvent<IDateRangePickerChangeEventData>): void;
    blur(): void;
    onChange: (_: any) => void;
    onTouched: () => void;
    constructor(_elementRef: ElementRef, _renderer: Renderer2);
    writeValue(value: any): void;
    registerOnChange(fn: (_: boolean) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisabled: boolean): void;
    change(value: IDatePickerRange): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DateRangePickerValueAccessor, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<DateRangePickerValueAccessor, "forge-date-range-picker[formControlName],forge-date-range-picker[formControl],forge-date-range-picker[ngModel]", never, {}, {}, never, never, false, never>;
}
