import { ElementRef, ChangeDetectorRef, NgZone } from '@angular/core';
import { LinearProgressComponent as LinearProgressComponentCustomElement } from '@tylertech/forge';
import * as i0 from "@angular/core";
/**  */
export declare class LinearProgressComponent {
    protected elementRef: ElementRef<LinearProgressComponentCustomElement>;
    protected zone: NgZone;
    /** The forge-linear-progress element. */
    readonly nativeElement: LinearProgressComponentCustomElement;
    /** Controls the determinate state. */
    set determinate(value: LinearProgressComponentCustomElement['determinate']);
    get determinate(): LinearProgressComponentCustomElement['determinate'];
    /** Controls the progress while in a determinate state. Accepts values from `0` to `1`. */
    set progress(value: LinearProgressComponentCustomElement['progress']);
    get progress(): LinearProgressComponentCustomElement['progress'];
    /** Controls the buffer progress while in a determinate state. Accepts values from `0` to `1`. */
    set buffer(value: LinearProgressComponentCustomElement['buffer']);
    get buffer(): LinearProgressComponentCustomElement['buffer'];
    /** Sets the theme. */
    set theme(value: LinearProgressComponentCustomElement['theme']);
    get theme(): LinearProgressComponentCustomElement['theme'];
    constructor(changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef<LinearProgressComponentCustomElement>, zone: NgZone);
    static ɵfac: i0.ɵɵFactoryDeclaration<LinearProgressComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LinearProgressComponent, "forge-linear-progress", never, { "determinate": { "alias": "determinate"; "required": false; }; "progress": { "alias": "progress"; "required": false; }; "buffer": { "alias": "buffer"; "required": false; }; "theme": { "alias": "theme"; "required": false; }; }, {}, never, ["*"], false, never>;
    static ngAcceptInputType_determinate: unknown;
    static ngAcceptInputType_progress: unknown;
    static ngAcceptInputType_buffer: unknown;
}
