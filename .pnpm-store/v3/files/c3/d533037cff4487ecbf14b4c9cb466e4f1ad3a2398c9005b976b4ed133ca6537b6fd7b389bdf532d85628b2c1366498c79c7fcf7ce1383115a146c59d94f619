import { Subject } from 'rxjs';
import { ElementRef } from '@angular/core';
export class DialogRef {
    constructor(instance) {
        this._afterClosed = new Subject();
        this.afterClosed = this._afterClosed.asObservable();
        this._beforeClose = new Subject();
        this.beforeClose = this._beforeClose.asObservable();
        this._elementRef = new ElementRef(instance);
        instance.addEventListener('forge-dialog-before-close', evt => this._beforeClose.next(evt));
    }
    close(result) {
        this.nativeElement.open = false;
        this._afterClosed.next(result);
        this._afterClosed.complete();
        this._beforeClose.complete();
    }
    get nativeElement() {
        return this._elementRef.nativeElement;
    }
    get isClosed() {
        return this._afterClosed.closed;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLXJlZi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZvcmdlLWFuZ3VsYXIvc3JjL2xpYi9kaWFsb2cvZGlhbG9nLXJlZi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWMsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsTUFBTSxPQUFPLFNBQVM7SUFXcEIsWUFBWSxRQUEwQjtRQVJyQixpQkFBWSxHQUFHLElBQUksT0FBTyxFQUF1QixDQUFDO1FBQzVELGdCQUFXLEdBQW9DLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxFQUFFLENBQUM7UUFFdEUsaUJBQVksR0FBRyxJQUFJLE9BQU8sRUFBcUIsQ0FBQztRQUMxRCxnQkFBVyxHQUFrQyxJQUFJLENBQUMsWUFBWSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBS25GLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDNUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLDJCQUEyQixFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUM3RixDQUFDO0lBRU0sS0FBSyxDQUFDLE1BQWdCO1FBQzNCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztRQUNoQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMvQixJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQzdCLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDL0IsQ0FBQztJQUVELElBQVcsYUFBYTtRQUN0QixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDO0lBQ3hDLENBQUM7SUFFRCxJQUFXLFFBQVE7UUFDakIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQztJQUNsQyxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnQHR5bGVydGVjaC9mb3JnZSc7XG5cbmV4cG9ydCBjbGFzcyBEaWFsb2dSZWY8VENvbXBvbmVudCA9IGFueSwgVFJlc3VsdCA9IGFueT4ge1xuICBwcml2YXRlIHJlYWRvbmx5IF9lbGVtZW50UmVmOiBFbGVtZW50UmVmPElEaWFsb2dDb21wb25lbnQ+O1xuICBcbiAgcHJpdmF0ZSByZWFkb25seSBfYWZ0ZXJDbG9zZWQgPSBuZXcgU3ViamVjdDxUUmVzdWx0IHwgdW5kZWZpbmVkPigpO1xuICBwdWJsaWMgYWZ0ZXJDbG9zZWQ6IE9ic2VydmFibGU8VFJlc3VsdCB8IHVuZGVmaW5lZD4gPSB0aGlzLl9hZnRlckNsb3NlZC5hc09ic2VydmFibGUoKTtcblxuICBwcml2YXRlIHJlYWRvbmx5IF9iZWZvcmVDbG9zZSA9IG5ldyBTdWJqZWN0PEN1c3RvbUV2ZW50PHZvaWQ+PigpO1xuICBwdWJsaWMgYmVmb3JlQ2xvc2U6IE9ic2VydmFibGU8Q3VzdG9tRXZlbnQ8dm9pZD4+ID0gdGhpcy5fYmVmb3JlQ2xvc2UuYXNPYnNlcnZhYmxlKCk7XG5cbiAgcHVibGljIGNvbXBvbmVudEluc3RhbmNlOiBUQ29tcG9uZW50O1xuXG4gIGNvbnN0cnVjdG9yKGluc3RhbmNlOiBJRGlhbG9nQ29tcG9uZW50KSB7XG4gICAgdGhpcy5fZWxlbWVudFJlZiA9IG5ldyBFbGVtZW50UmVmKGluc3RhbmNlKTtcbiAgICBpbnN0YW5jZS5hZGRFdmVudExpc3RlbmVyKCdmb3JnZS1kaWFsb2ctYmVmb3JlLWNsb3NlJywgZXZ0ID0+IHRoaXMuX2JlZm9yZUNsb3NlLm5leHQoZXZ0KSk7XG4gIH1cblxuICBwdWJsaWMgY2xvc2UocmVzdWx0PzogVFJlc3VsdCk6IHZvaWQge1xuICAgIHRoaXMubmF0aXZlRWxlbWVudC5vcGVuID0gZmFsc2U7XG4gICAgdGhpcy5fYWZ0ZXJDbG9zZWQubmV4dChyZXN1bHQpO1xuICAgIHRoaXMuX2FmdGVyQ2xvc2VkLmNvbXBsZXRlKCk7XG4gICAgdGhpcy5fYmVmb3JlQ2xvc2UuY29tcGxldGUoKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgbmF0aXZlRWxlbWVudCgpOiBJRGlhbG9nQ29tcG9uZW50IHtcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xuICB9XG5cbiAgcHVibGljIGdldCBpc0Nsb3NlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fYWZ0ZXJDbG9zZWQuY2xvc2VkO1xuICB9XG59XG4iXX0=