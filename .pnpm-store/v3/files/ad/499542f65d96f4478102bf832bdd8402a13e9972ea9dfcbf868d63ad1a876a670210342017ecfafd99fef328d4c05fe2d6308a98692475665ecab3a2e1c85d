/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { BaseAdapter, IBaseAdapter } from '../../core/base/';
import { IRadioComponent } from './radio';
import { RadioLabelPosition } from './radio-constants';
export interface IRadioAdapter extends IBaseAdapter {
    setChecked(checked: boolean, value: string): void;
    trySetDisabled(value: boolean): boolean;
    setRequired(value: boolean): void;
    setReadonly(value: boolean): void;
    setLabelPosition(value: RadioLabelPosition): void;
    disableStateLayer(value: boolean): void;
    setUncheckedRadioGroupFocus(event: 'focus' | 'blur'): void;
    focusNext(): void;
    focusPrevious(): void;
}
export declare class RadioAdapter extends BaseAdapter<IRadioComponent> implements IRadioAdapter {
    private readonly _rootElement;
    private readonly _labelElement;
    private readonly _stateLayerElement;
    constructor(component: IRadioComponent);
    setChecked(checked: boolean, value: string): void;
    /**
     * Attempts to set the disabled state of the radio. If the radio is in a disabled radio group, it
     * can't be enabled.
     *
     * @param value Whether the radio should be disabled.
     * @returns Whether the disabled state was set.
     */
    trySetDisabled(value: boolean): boolean;
    setRequired(): void;
    setReadonly(value: boolean): void;
    disableStateLayer(value: boolean): void;
    setLabelPosition(value: RadioLabelPosition): void;
    setUncheckedRadioGroupFocus(event: 'focus' | 'blur'): void;
    focusNext(): void;
    focusPrevious(): void;
}
