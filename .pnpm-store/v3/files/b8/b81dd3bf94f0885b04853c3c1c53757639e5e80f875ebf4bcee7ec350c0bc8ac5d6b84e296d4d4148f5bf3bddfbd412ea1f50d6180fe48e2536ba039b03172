import { DIALOG_CONSTANTS } from '@tylertech/forge';
import { useDynamicForgeComponent } from './useDynamicForgeComponent';
export const useForgeDialog = (component, componentProps) => {
    const delegate = {
        show: instance => {
            document.body.appendChild(instance); // TODO: make the parent element configurable
            instance.open = true;
        },
        hide: instance => new Promise(resolve => {
            const complete = () => {
                instance.remove();
                resolve();
            };
            if (!instance.open) {
                complete();
                return;
            }
            instance.open = false;
            instance.addEventListener(DIALOG_CONSTANTS.events.CLOSE, () => complete(), { once: true });
        })
    };
    const controller = useDynamicForgeComponent('forge-dialog', component, componentProps, delegate);
    function show({ dialogAttributes, dialogClass, ...options } = {}, dismissCallback) {
        const dialogElement = controller.show(options);
        if (dialogAttributes) {
            dialogAttributes.forEach((value, key) => dialogElement.setAttribute(key, value));
        }
        if (dialogClass) {
            dialogElement.classList.add(dialogClass);
        }
        dialogElement.addEventListener(DIALOG_CONSTANTS.events.CLOSE, () => {
            controller.hide();
            if (typeof dismissCallback === 'function') {
                dismissCallback();
            }
        });
        return dialogElement;
    }
    return [show, controller.hide];
};
