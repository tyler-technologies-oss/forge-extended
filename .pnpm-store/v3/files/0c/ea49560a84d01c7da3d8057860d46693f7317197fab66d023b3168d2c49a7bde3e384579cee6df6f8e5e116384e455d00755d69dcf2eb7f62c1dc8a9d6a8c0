/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { BaseComponent, IBaseComponent } from '../core/base/base-component';
export interface IBackdropComponent extends IBaseComponent {
    visible: boolean;
    fixed: boolean;
    show(): void;
    hide(): void;
    fadeIn(): Promise<void>;
    fadeOut(): Promise<void>;
}
declare global {
    interface HTMLElementTagNameMap {
        'forge-backdrop': IBackdropComponent;
    }
}
/**
 * @tag forge-backdrop
 *
 * @property {boolean} [visible=false] - Whether the backdrop is visible.
 * @property {boolean} [fixed=false] - Whether the backdrop uses "fixed" or "relative" positioning.
 *
 * @attribute {boolean} [visible=false] - Whether the backdrop is visible.
 * @attribute {boolean} [fixed=false] - Whether the backdrop uses "fixed" or "relative" positioning.
 *
 * @cssproperty --forge-backdrop-background - The backdrop background color.
 * @cssproperty --forge-backdrop-opacity - The backdrop opacity.
 * @cssproperty --forge-backdrop-z-index - The backdrop z-index.
 * @cssproperty --forge-backdrop-enter-animation-duration - The animation duration for the enter animation.
 * @cssproperty --forge-backdrop-enter-animation-easing - The animation easing for the enter animation.
 * @cssproperty --forge-backdrop-exit-animation-duration - The animation duration for the exit animation.
 * @cssproperty --forge-backdrop-exit-animation-easing - The animation easing for the exit animation.
 *
 * @csspart root - The root element of the backdrop.
 */
export declare class BackdropComponent extends BaseComponent {
    static get observedAttributes(): string[];
    private _visible;
    private _fixed;
    private _rootElement;
    private _animationController;
    constructor();
    disconnectedCallback(): void;
    attributeChangedCallback(name: string, oldValue: string, newValue: string): void;
    private _applyVisibility;
    /** Immediately shows the backdrop by setting the `visibility` to `true` without animations. */
    show(): void;
    /** Immediately hides the backdrop by setting the `visibility` to `false` without animations. */
    hide(): void;
    /** Sets the `visibility` to `true` and animates in. */
    fadeIn(): Promise<void>;
    /** Sets the `visibility` to `false` and animates out. */
    fadeOut(): Promise<void>;
    get visible(): boolean;
    set visible(value: boolean);
    get fixed(): boolean;
    set fixed(value: boolean);
}
