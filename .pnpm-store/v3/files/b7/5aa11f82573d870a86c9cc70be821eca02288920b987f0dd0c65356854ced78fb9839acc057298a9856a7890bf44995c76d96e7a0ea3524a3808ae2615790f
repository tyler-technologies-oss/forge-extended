/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { BaseAdapter, IBaseAdapter } from '../core';
import { IFocusIndicatorComponent } from './focus-indicator';
export interface IFocusIndicatorAdapter extends IBaseAdapter {
    destroy(): void;
    hasTargetElement(): boolean;
    addTargetListener(type: string, listener: EventListener): void;
    removeTargetListener(type: string, listener: EventListener): void;
    getTargetElement(): HTMLElement | null;
    setTargetElement(el: HTMLElement | null): void;
    trySetTarget(value: string | null): void;
    isActive(selector: string, el?: HTMLElement | null): boolean;
}
export declare class FocusIndicatorAdapter extends BaseAdapter<IFocusIndicatorComponent> implements IFocusIndicatorAdapter {
    private _targetElement;
    constructor(component: IFocusIndicatorComponent);
    destroy(): void;
    hasTargetElement(): boolean;
    addTargetListener(type: string, listener: EventListener): void;
    removeTargetListener(type: string, listener: EventListener): void;
    getTargetElement(): HTMLElement | null;
    setTargetElement(el: HTMLElement | null): void;
    trySetTarget(value: string | null): void;
    isActive(selector: string, el?: HTMLElement | null): boolean;
}
