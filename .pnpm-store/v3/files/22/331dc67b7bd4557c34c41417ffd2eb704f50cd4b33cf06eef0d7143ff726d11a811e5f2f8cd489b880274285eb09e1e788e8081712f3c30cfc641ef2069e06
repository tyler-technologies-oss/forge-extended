/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { IBaseComponentDelegateConfig } from '../core/delegates/base-component-delegate';
import { FormFieldComponentDelegate, IFormFieldComponentDelegateOptions } from '../core/delegates/form-field-component-delegate';
import { ITextFieldComponent, ITextFieldComponentDelegateConfig } from '../text-field';
import { ITimePickerComponent } from './time-picker';
export type TimePickerComponentDelegateProps = Partial<ITimePickerComponent>;
export interface ITimePickerComponentDelegateOptions extends IFormFieldComponentDelegateOptions {
    textFieldDelegateConfig?: ITextFieldComponentDelegateConfig;
}
export interface ITimePickerComponentDelegateConfig extends IBaseComponentDelegateConfig<ITimePickerComponent, ITimePickerComponentDelegateOptions> {
}
export declare class TimePickerComponentDelegate extends FormFieldComponentDelegate<ITimePickerComponent, ITimePickerComponentDelegateOptions> {
    private _textFieldDelegate;
    constructor(config?: ITimePickerComponentDelegateConfig);
    protected _build(): ITimePickerComponent;
    get inputElement(): HTMLInputElement;
    get textFieldElement(): ITextFieldComponent;
    get value(): any;
    set value(value: any);
    get disabled(): boolean;
    set disabled(value: boolean);
    get invalid(): boolean;
    set invalid(value: boolean);
    onChange(listener: (value: string) => void): void;
    onInput(listener: (value: string) => void): void;
    onFocus(listener: (evt: FocusEvent) => void): void;
    onBlur(listener: (evt: FocusEvent) => void): void;
    private _attachTextField;
}
