import { ElementRef, ChangeDetectorRef, NgZone } from '@angular/core';
import { AccordionComponent as AccordionComponentCustomElement } from '@tylertech/forge';
import * as i0 from "@angular/core";
/**  */
export declare class AccordionComponent {
    protected elementRef: ElementRef<AccordionComponentCustomElement>;
    protected zone: NgZone;
    /** The forge-accordion element. */
    readonly nativeElement: AccordionComponentCustomElement;
    /**
     * Gets/sets the selector to use for finding the child expansion panels. Defaults to searching the direct children for `<forge-expansion-panel>` elements.
     * Use this if you need to scope this accordion to a specific set of expansion panels, or your expansion panels are not direct children of the accordion.
     */
    set panelSelector(value: AccordionComponentCustomElement['panelSelector']);
    get panelSelector(): AccordionComponentCustomElement['panelSelector'];
    constructor(changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef<AccordionComponentCustomElement>, zone: NgZone);
    static ɵfac: i0.ɵɵFactoryDeclaration<AccordionComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AccordionComponent, "forge-accordion", never, { "panelSelector": { "alias": "panelSelector"; "required": false; }; }, {}, never, ["*"], false, never>;
}
