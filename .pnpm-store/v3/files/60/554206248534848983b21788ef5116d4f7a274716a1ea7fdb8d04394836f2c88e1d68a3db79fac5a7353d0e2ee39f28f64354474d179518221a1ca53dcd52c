// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { booleanAttribute, Component, ChangeDetectionStrategy, Input } from '@angular/core';
import { defineBannerComponent } from '@tylertech/forge';
import * as i0 from "@angular/core";
/**  */
export class BannerComponent {
    /** Controls the visibility of the banner. */
    set dismissed(value) {
        this.zone.runOutsideAngular(() => {
            this.nativeElement.dismissed = value;
        });
    }
    get dismissed() {
        return this.nativeElement.dismissed;
    }
    /** Controls the visibility of the built-in dismiss button. */
    set persistent(value) {
        this.zone.runOutsideAngular(() => {
            this.nativeElement.persistent = value;
        });
    }
    get persistent() {
        return this.nativeElement.persistent;
    }
    /** The theme of the banner. */
    set theme(value) {
        this.zone.runOutsideAngular(() => {
            this.nativeElement.theme = value;
        });
    }
    get theme() {
        return this.nativeElement.theme;
    }
    set canDismiss(value) {
        this.zone.runOutsideAngular(() => {
            this.nativeElement.canDismiss = value;
        });
    }
    get canDismiss() {
        return this.nativeElement.canDismiss;
    }
    constructor(changeDetectorRef, elementRef, zone) {
        this.elementRef = elementRef;
        this.zone = zone;
        /** The forge-banner element. */
        this.nativeElement = this.elementRef.nativeElement;
        defineBannerComponent();
        changeDetectorRef.detach();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: BannerComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "16.1.0", version: "17.3.7", type: BannerComponent, selector: "forge-banner", inputs: { dismissed: ["dismissed", "dismissed", booleanAttribute], persistent: ["persistent", "persistent", booleanAttribute], theme: "theme", canDismiss: ["canDismiss", "canDismiss", booleanAttribute] }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: BannerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'forge-banner',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: '<ng-content></ng-content>'
                }]
        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { dismissed: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], persistent: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], theme: [{
                type: Input
            }], canDismiss: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFubmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZvcmdlLWFuZ3VsYXIvc3JjL2xpYi9iYW5uZXIvYmFubmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3SEFBd0g7QUFDeEgsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFNBQVMsRUFBYyx1QkFBdUIsRUFBNkIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25JLE9BQU8sRUFBbUQscUJBQXFCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7QUFFMUcsT0FBTztBQU1QLE1BQU0sT0FBTyxlQUFlO0lBSzNCLDZDQUE2QztJQUM3QyxJQUNXLFNBQVMsQ0FBQyxLQUFnRDtRQUNwRSxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRTtZQUNoQyxJQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFDdEMsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDO0lBQ0QsSUFBVyxTQUFTO1FBQ25CLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUM7SUFDckMsQ0FBQztJQUVELDhEQUE4RDtJQUM5RCxJQUNXLFVBQVUsQ0FBQyxLQUFpRDtRQUN0RSxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRTtZQUNoQyxJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7UUFDdkMsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDO0lBQ0QsSUFBVyxVQUFVO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUM7SUFDdEMsQ0FBQztJQUVELCtCQUErQjtJQUMvQixJQUNXLEtBQUssQ0FBQyxLQUE0QztRQUM1RCxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRTtZQUNoQyxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbEMsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDO0lBQ0QsSUFBVyxLQUFLO1FBQ2YsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQztJQUNqQyxDQUFDO0lBR0QsSUFDVyxVQUFVLENBQUMsS0FBaUQ7UUFDdEUsSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUU7WUFDaEMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ3ZDLENBQUMsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUNELElBQVcsVUFBVTtRQUNwQixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDO0lBQ3RDLENBQUM7SUFFRCxZQUNDLGlCQUFvQyxFQUMxQixVQUFvRCxFQUNwRCxJQUFZO1FBRFosZUFBVSxHQUFWLFVBQVUsQ0FBMEM7UUFDcEQsU0FBSSxHQUFKLElBQUksQ0FBUTtRQWxEdkIsZ0NBQWdDO1FBQ2hCLGtCQUFhLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUM7UUFtRDdELHFCQUFxQixFQUFFLENBQUM7UUFDeEIsaUJBQWlCLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDNUIsQ0FBQzs4R0F4RFcsZUFBZTtrR0FBZixlQUFlLDRFQU1QLGdCQUFnQiw0Q0FXaEIsZ0JBQWdCLDREQXNCaEIsZ0JBQWdCLDZCQXpDekIsMkJBQTJCOzsyRkFFMUIsZUFBZTtrQkFMM0IsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsY0FBYztvQkFDeEIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFFBQVEsRUFBRSwyQkFBMkI7aUJBQ3RDO29JQVFXLFNBQVM7c0JBRG5CLEtBQUs7dUJBQUMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUU7Z0JBWTNCLFVBQVU7c0JBRHBCLEtBQUs7dUJBQUMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUU7Z0JBWTNCLEtBQUs7c0JBRGYsS0FBSztnQkFZSyxVQUFVO3NCQURwQixLQUFLO3VCQUFDLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBjb2RlIHdhcyBnZW5lcmF0ZWQgYnkgdGhlIGFuZ3VsYXItY3VzdG9tLWVsZW1lbnRzLXNjaGVtYXRpYy4gIEFueSBjaGFuZ2VzIHdpbGwgYmUgb3ZlcndyaXR0ZW4gbmV4dCB0aW1lIGl0IHJ1bnMuXG5pbXBvcnQgeyBib29sZWFuQXR0cmlidXRlLCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDaGFuZ2VEZXRlY3RvclJlZiwgTmdab25lLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFubmVyQ29tcG9uZW50IGFzIEJhbm5lckNvbXBvbmVudEN1c3RvbUVsZW1lbnQsIGRlZmluZUJhbm5lckNvbXBvbmVudCB9IGZyb20gJ0B0eWxlcnRlY2gvZm9yZ2UnO1xuXG4vKiogICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmb3JnZS1iYW5uZXInLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgdGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+J1xufSlcbmV4cG9ydCBjbGFzcyBCYW5uZXJDb21wb25lbnQge1xuXG5cdC8qKiBUaGUgZm9yZ2UtYmFubmVyIGVsZW1lbnQuICovXG5cdHB1YmxpYyByZWFkb25seSBuYXRpdmVFbGVtZW50ID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG5cblx0LyoqIENvbnRyb2xzIHRoZSB2aXNpYmlsaXR5IG9mIHRoZSBiYW5uZXIuICovXG5cdEBJbnB1dCh7IHRyYW5zZm9ybTogYm9vbGVhbkF0dHJpYnV0ZSB9KVxuXHRwdWJsaWMgc2V0IGRpc21pc3NlZCh2YWx1ZTogQmFubmVyQ29tcG9uZW50Q3VzdG9tRWxlbWVudFsnZGlzbWlzc2VkJ10pIHtcblx0XHR0aGlzLnpvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuXHRcdFx0dGhpcy5uYXRpdmVFbGVtZW50LmRpc21pc3NlZCA9IHZhbHVlO1xuXHRcdH0pO1xuXHR9XG5cdHB1YmxpYyBnZXQgZGlzbWlzc2VkKCk6IEJhbm5lckNvbXBvbmVudEN1c3RvbUVsZW1lbnRbJ2Rpc21pc3NlZCddIHtcblx0XHRyZXR1cm4gdGhpcy5uYXRpdmVFbGVtZW50LmRpc21pc3NlZDtcblx0fVxuXG5cdC8qKiBDb250cm9scyB0aGUgdmlzaWJpbGl0eSBvZiB0aGUgYnVpbHQtaW4gZGlzbWlzcyBidXR0b24uICovXG5cdEBJbnB1dCh7IHRyYW5zZm9ybTogYm9vbGVhbkF0dHJpYnV0ZSB9KVxuXHRwdWJsaWMgc2V0IHBlcnNpc3RlbnQodmFsdWU6IEJhbm5lckNvbXBvbmVudEN1c3RvbUVsZW1lbnRbJ3BlcnNpc3RlbnQnXSkge1xuXHRcdHRoaXMuem9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG5cdFx0XHR0aGlzLm5hdGl2ZUVsZW1lbnQucGVyc2lzdGVudCA9IHZhbHVlO1xuXHRcdH0pO1xuXHR9XG5cdHB1YmxpYyBnZXQgcGVyc2lzdGVudCgpOiBCYW5uZXJDb21wb25lbnRDdXN0b21FbGVtZW50WydwZXJzaXN0ZW50J10ge1xuXHRcdHJldHVybiB0aGlzLm5hdGl2ZUVsZW1lbnQucGVyc2lzdGVudDtcblx0fVxuXG5cdC8qKiBUaGUgdGhlbWUgb2YgdGhlIGJhbm5lci4gKi9cblx0QElucHV0KClcblx0cHVibGljIHNldCB0aGVtZSh2YWx1ZTogQmFubmVyQ29tcG9uZW50Q3VzdG9tRWxlbWVudFsndGhlbWUnXSkge1xuXHRcdHRoaXMuem9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG5cdFx0XHR0aGlzLm5hdGl2ZUVsZW1lbnQudGhlbWUgPSB2YWx1ZTtcblx0XHR9KTtcblx0fVxuXHRwdWJsaWMgZ2V0IHRoZW1lKCk6IEJhbm5lckNvbXBvbmVudEN1c3RvbUVsZW1lbnRbJ3RoZW1lJ10ge1xuXHRcdHJldHVybiB0aGlzLm5hdGl2ZUVsZW1lbnQudGhlbWU7XG5cdH1cblxuXG5cdEBJbnB1dCh7IHRyYW5zZm9ybTogYm9vbGVhbkF0dHJpYnV0ZSB9KVxuXHRwdWJsaWMgc2V0IGNhbkRpc21pc3ModmFsdWU6IEJhbm5lckNvbXBvbmVudEN1c3RvbUVsZW1lbnRbJ2NhbkRpc21pc3MnXSkge1xuXHRcdHRoaXMuem9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG5cdFx0XHR0aGlzLm5hdGl2ZUVsZW1lbnQuY2FuRGlzbWlzcyA9IHZhbHVlO1xuXHRcdH0pO1xuXHR9XG5cdHB1YmxpYyBnZXQgY2FuRGlzbWlzcygpOiBCYW5uZXJDb21wb25lbnRDdXN0b21FbGVtZW50WydjYW5EaXNtaXNzJ10ge1xuXHRcdHJldHVybiB0aGlzLm5hdGl2ZUVsZW1lbnQuY2FuRGlzbWlzcztcblx0fVxuXG5cdGNvbnN0cnVjdG9yKFxuXHRcdGNoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZixcblx0XHRwcm90ZWN0ZWQgZWxlbWVudFJlZjogRWxlbWVudFJlZjxCYW5uZXJDb21wb25lbnRDdXN0b21FbGVtZW50Pixcblx0XHRwcm90ZWN0ZWQgem9uZTogTmdab25lXG5cdCkge1xuXHRcdGRlZmluZUJhbm5lckNvbXBvbmVudCgpO1xuXHRcdGNoYW5nZURldGVjdG9yUmVmLmRldGFjaCgpO1xuXHR9XG59XG4iXX0=