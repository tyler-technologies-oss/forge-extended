/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { BaseComponent, IBaseComponent } from '../../core/base/base-component';
import { IStepConfiguration, StepperLayoutAlign, StepperLayoutMode } from '../stepper/stepper-constants';
export interface IStepperComponent extends IBaseComponent {
    steps: IStepConfiguration[];
    selectedIndex: number;
    linear: boolean;
    alternative: boolean;
    layoutMode: StepperLayoutMode;
    layoutAlign: StepperLayoutAlign;
    disabled: boolean;
    vertical: boolean;
}
declare global {
    interface HTMLElementTagNameMap {
        'forge-stepper': IStepperComponent;
    }
}
/**
 * @tag forge-stepper
 *
 * @dependency forge-step
 *
 * @event {CustomEvent<number>} forge-step-select - Emits the index when a step is selected.
 * @event {CustomEvent<IStepComponent>} forge-step-expanded-content-focusin - Emits the step component when the expanded content is focused.
 * @event {CustomEvent<IStepComponent>} forge-step-expanded-content-focusout - Emits the step component when the expanded content is blurred.
 *
 */
export declare class StepperComponent extends BaseComponent implements IStepperComponent {
    static get observedAttributes(): string[];
    private _core;
    constructor();
    connectedCallback(): Promise<void>;
    disconnectedCallback(): void;
    attributeChangedCallback(name: string, oldValue: string, newValue: string): void;
    /**
     * The step configurations.
     * @default []
     */
    steps: IStepConfiguration[];
    /**
     * The active step index.
     * @default 0
     * @attribute selected-index
     */
    selectedIndex: number;
    /**
     * Whether the stepper is linear or non-linear.
     * @default false
     * @attribute
     */
    linear: boolean;
    /**
     * Whether the stepper uses the default or alternative label layout mode.
     * @default false
     * @attribute
     */
    alternative: boolean;
    /**
     * The layout mode of the stepper.
     * @default "fixed"
     * @attribute layout-mode
     */
    layoutMode: StepperLayoutMode;
    /**
     * The layout alignment of the stepper.
     * @default "center"
     * @attribute layout-align
     */
    layoutAlign: StepperLayoutAlign;
    /**
     * Whether the stepper is disabled.
     * @default false
     * @attribute
     */
    disabled: boolean;
    /**
     * Whether the stepper is vertical.
     * @default false
     * @attribute
     */
    vertical: boolean;
}
