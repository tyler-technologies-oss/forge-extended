// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { defineExpansionPanelComponent } from '@tylertech/forge';
import { ForgeOpenIconModule } from '../open-icon/open-icon.module';
import { ExpansionPanelComponent } from './expansion-panel.component';
import * as i0 from "@angular/core";
export class ForgeExpansionPanelModule {
    constructor() {
        defineExpansionPanelComponent();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeExpansionPanelModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.7", ngImport: i0, type: ForgeExpansionPanelModule, declarations: [ExpansionPanelComponent], imports: [CommonModule, ForgeOpenIconModule], exports: [ExpansionPanelComponent, ForgeOpenIconModule] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeExpansionPanelModule, imports: [CommonModule, ForgeOpenIconModule, ForgeOpenIconModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeExpansionPanelModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ForgeOpenIconModule],
                    declarations: [ExpansionPanelComponent],
                    exports: [ExpansionPanelComponent, ForgeOpenIconModule]
                }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5zaW9uLXBhbmVsLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZvcmdlLWFuZ3VsYXIvc3JjL2xpYi9leHBhbnNpb24tcGFuZWwvZXhwYW5zaW9uLXBhbmVsLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3SEFBd0g7QUFDeEgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFakUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDcEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7O0FBT3RFLE1BQU0sT0FBTyx5QkFBeUI7SUFDckM7UUFDQyw2QkFBNkIsRUFBRSxDQUFDO0lBQ2pDLENBQUM7OEdBSFcseUJBQXlCOytHQUF6Qix5QkFBeUIsaUJBSHRCLHVCQUF1QixhQUQ1QixZQUFZLEVBQUUsbUJBQW1CLGFBRWpDLHVCQUF1QixFQUFFLG1CQUFtQjsrR0FFMUMseUJBQXlCLFlBSjNCLFlBQVksRUFBRSxtQkFBbUIsRUFFUixtQkFBbUI7OzJGQUUxQyx5QkFBeUI7a0JBTHJDLFFBQVE7bUJBQUM7b0JBQ1QsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLG1CQUFtQixDQUFDO29CQUM1QyxZQUFZLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQztvQkFDdkMsT0FBTyxFQUFFLENBQUMsdUJBQXVCLEVBQUUsbUJBQW1CLENBQUM7aUJBQ3ZEIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBjb2RlIHdhcyBnZW5lcmF0ZWQgYnkgdGhlIGFuZ3VsYXItY3VzdG9tLWVsZW1lbnRzLXNjaGVtYXRpYy4gIEFueSBjaGFuZ2VzIHdpbGwgYmUgb3ZlcndyaXR0ZW4gbmV4dCB0aW1lIGl0IHJ1bnMuXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJzsgXG5pbXBvcnQgeyBkZWZpbmVFeHBhbnNpb25QYW5lbENvbXBvbmVudCB9IGZyb20gJ0B0eWxlcnRlY2gvZm9yZ2UnO1xuXG5pbXBvcnQgeyBGb3JnZU9wZW5JY29uTW9kdWxlIH0gZnJvbSAnLi4vb3Blbi1pY29uL29wZW4taWNvbi5tb2R1bGUnO1xuaW1wb3J0IHsgRXhwYW5zaW9uUGFuZWxDb21wb25lbnQgfSBmcm9tICcuL2V4cGFuc2lvbi1wYW5lbC5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuXHRpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBGb3JnZU9wZW5JY29uTW9kdWxlXSxcblx0ZGVjbGFyYXRpb25zOiBbRXhwYW5zaW9uUGFuZWxDb21wb25lbnRdLFxuXHRleHBvcnRzOiBbRXhwYW5zaW9uUGFuZWxDb21wb25lbnQsIEZvcmdlT3Blbkljb25Nb2R1bGVdXG59KVxuZXhwb3J0IGNsYXNzIEZvcmdlRXhwYW5zaW9uUGFuZWxNb2R1bGUge1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHRkZWZpbmVFeHBhbnNpb25QYW5lbENvbXBvbmVudCgpO1xuXHR9XG59Il19