// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { defineChipSetComponent } from '@tylertech/forge';
import { ForgeChipProxyModule } from '../chip/chip-proxy.module';
import { ChipSetComponent } from './chip-set.component';
import * as i0 from "@angular/core";
export class ForgeChipSetModule {
    constructor() {
        defineChipSetComponent();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeChipSetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.7", ngImport: i0, type: ForgeChipSetModule, declarations: [ChipSetComponent], imports: [CommonModule, ForgeChipProxyModule], exports: [ChipSetComponent, ForgeChipProxyModule] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeChipSetModule, imports: [CommonModule, ForgeChipProxyModule, ForgeChipProxyModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeChipSetModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ForgeChipProxyModule],
                    declarations: [ChipSetComponent],
                    exports: [ChipSetComponent, ForgeChipProxyModule]
                }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpcC1zZXQubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZm9yZ2UtYW5ndWxhci9zcmMvbGliL2NoaXAtc2V0L2NoaXAtc2V0Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3SEFBd0g7QUFDeEgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFMUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDakUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0FBT3hELE1BQU0sT0FBTyxrQkFBa0I7SUFDOUI7UUFDQyxzQkFBc0IsRUFBRSxDQUFDO0lBQzFCLENBQUM7OEdBSFcsa0JBQWtCOytHQUFsQixrQkFBa0IsaUJBSGYsZ0JBQWdCLGFBRHJCLFlBQVksRUFBRSxvQkFBb0IsYUFFbEMsZ0JBQWdCLEVBQUUsb0JBQW9COytHQUVwQyxrQkFBa0IsWUFKcEIsWUFBWSxFQUFFLG9CQUFvQixFQUVoQixvQkFBb0I7OzJGQUVwQyxrQkFBa0I7a0JBTDlCLFFBQVE7bUJBQUM7b0JBQ1QsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLG9CQUFvQixDQUFDO29CQUM3QyxZQUFZLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQztvQkFDaEMsT0FBTyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsb0JBQW9CLENBQUM7aUJBQ2pEIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBjb2RlIHdhcyBnZW5lcmF0ZWQgYnkgdGhlIGFuZ3VsYXItY3VzdG9tLWVsZW1lbnRzLXNjaGVtYXRpYy4gIEFueSBjaGFuZ2VzIHdpbGwgYmUgb3ZlcndyaXR0ZW4gbmV4dCB0aW1lIGl0IHJ1bnMuXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJzsgXG5pbXBvcnQgeyBkZWZpbmVDaGlwU2V0Q29tcG9uZW50IH0gZnJvbSAnQHR5bGVydGVjaC9mb3JnZSc7XG5cbmltcG9ydCB7IEZvcmdlQ2hpcFByb3h5TW9kdWxlIH0gZnJvbSAnLi4vY2hpcC9jaGlwLXByb3h5Lm1vZHVsZSc7XG5pbXBvcnQgeyBDaGlwU2V0Q29tcG9uZW50IH0gZnJvbSAnLi9jaGlwLXNldC5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuXHRpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBGb3JnZUNoaXBQcm94eU1vZHVsZV0sXG5cdGRlY2xhcmF0aW9uczogW0NoaXBTZXRDb21wb25lbnRdLFxuXHRleHBvcnRzOiBbQ2hpcFNldENvbXBvbmVudCwgRm9yZ2VDaGlwUHJveHlNb2R1bGVdXG59KVxuZXhwb3J0IGNsYXNzIEZvcmdlQ2hpcFNldE1vZHVsZSB7XG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdGRlZmluZUNoaXBTZXRDb21wb25lbnQoKTtcblx0fVxufSJdfQ==