/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */
import { BaseAdapter, IBaseAdapter } from '../../core/base/base-adapter';
import { IButtonToggleComponent } from '../button-toggle/button-toggle';
import { IButtonToggleGroupComponent } from './button-toggle-group';
export interface IButtonToggleGroupAdapter extends IBaseAdapter {
    addListener(type: string, listener: (evt: Event) => void): void;
    removeListener(type: string, listener: (evt: Event) => void): void;
    addSlotChangeListener(listener: (evt: Event) => void): void;
    removeSlotChangeListener(listener: (evt: Event) => void): void;
    deselect(selectedToggle: IButtonToggleComponent): void;
    setDisabled(value: boolean): void;
    setReadonly(value: boolean): void;
    getSelectedValues(): any[];
    applyValues(values: any[]): void;
    setFormValue(): void;
    setFormValidity(): void;
}
export declare class ButtonToggleGroupAdapter extends BaseAdapter<IButtonToggleGroupComponent> implements IButtonToggleGroupAdapter {
    private _rootElement;
    private _defaultSlotElement;
    constructor(component: IButtonToggleGroupComponent);
    addListener(type: string, listener: (evt: Event) => void): void;
    removeListener(type: string, listener: (evt: Event) => void): void;
    addSlotChangeListener(listener: EventListener): void;
    removeSlotChangeListener(listener: EventListener): void;
    deselect(selectedToggle: IButtonToggleComponent): void;
    setDisabled(value: boolean): void;
    setReadonly(value: boolean): void;
    getSelectedValues(): any[];
    applyValues(values: any[]): void;
    setFormValue(): void;
    setFormValidity(): void;
    private _getButtonToggleElements;
}
