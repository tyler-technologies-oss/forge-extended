// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { defineChipFieldComponent } from '@tylertech/forge';
import { ForgeChipProxyModule } from '../chip/chip-proxy.module';
import { ChipFieldComponent } from './chip-field.component';
import * as i0 from "@angular/core";
export class ForgeChipFieldModule {
    constructor() {
        defineChipFieldComponent();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeChipFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.7", ngImport: i0, type: ForgeChipFieldModule, declarations: [ChipFieldComponent], imports: [CommonModule, ForgeChipProxyModule], exports: [ChipFieldComponent, ForgeChipProxyModule] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeChipFieldModule, imports: [CommonModule, ForgeChipProxyModule, ForgeChipProxyModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: ForgeChipFieldModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ForgeChipProxyModule],
                    declarations: [ChipFieldComponent],
                    exports: [ChipFieldComponent, ForgeChipProxyModule]
                }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpcC1maWVsZC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9mb3JnZS1hbmd1bGFyL3NyYy9saWIvY2hpcC1maWVsZC9jaGlwLWZpZWxkLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3SEFBd0g7QUFDeEgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFNUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDakUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7O0FBTzVELE1BQU0sT0FBTyxvQkFBb0I7SUFDaEM7UUFDQyx3QkFBd0IsRUFBRSxDQUFDO0lBQzVCLENBQUM7OEdBSFcsb0JBQW9COytHQUFwQixvQkFBb0IsaUJBSGpCLGtCQUFrQixhQUR2QixZQUFZLEVBQUUsb0JBQW9CLGFBRWxDLGtCQUFrQixFQUFFLG9CQUFvQjsrR0FFdEMsb0JBQW9CLFlBSnRCLFlBQVksRUFBRSxvQkFBb0IsRUFFZCxvQkFBb0I7OzJGQUV0QyxvQkFBb0I7a0JBTGhDLFFBQVE7bUJBQUM7b0JBQ1QsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLG9CQUFvQixDQUFDO29CQUM3QyxZQUFZLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztvQkFDbEMsT0FBTyxFQUFFLENBQUMsa0JBQWtCLEVBQUUsb0JBQW9CLENBQUM7aUJBQ25EIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBjb2RlIHdhcyBnZW5lcmF0ZWQgYnkgdGhlIGFuZ3VsYXItY3VzdG9tLWVsZW1lbnRzLXNjaGVtYXRpYy4gIEFueSBjaGFuZ2VzIHdpbGwgYmUgb3ZlcndyaXR0ZW4gbmV4dCB0aW1lIGl0IHJ1bnMuXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJzsgXG5pbXBvcnQgeyBkZWZpbmVDaGlwRmllbGRDb21wb25lbnQgfSBmcm9tICdAdHlsZXJ0ZWNoL2ZvcmdlJztcblxuaW1wb3J0IHsgRm9yZ2VDaGlwUHJveHlNb2R1bGUgfSBmcm9tICcuLi9jaGlwL2NoaXAtcHJveHkubW9kdWxlJztcbmltcG9ydCB7IENoaXBGaWVsZENvbXBvbmVudCB9IGZyb20gJy4vY2hpcC1maWVsZC5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuXHRpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBGb3JnZUNoaXBQcm94eU1vZHVsZV0sXG5cdGRlY2xhcmF0aW9uczogW0NoaXBGaWVsZENvbXBvbmVudF0sXG5cdGV4cG9ydHM6IFtDaGlwRmllbGRDb21wb25lbnQsIEZvcmdlQ2hpcFByb3h5TW9kdWxlXVxufSlcbmV4cG9ydCBjbGFzcyBGb3JnZUNoaXBGaWVsZE1vZHVsZSB7XG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdGRlZmluZUNoaXBGaWVsZENvbXBvbmVudCgpO1xuXHR9XG59Il19